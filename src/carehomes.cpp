// Generated by dust (version 0.4.1) - do not edit
#include <iostream>
#include <dust/dust.hpp>
#include <dust/interface.hpp>

// Generated by odin.dust (version 0.0.8) - do not edit
template <typename T>
T odin_sum1(const T * x, size_t from, size_t to);
template <typename real_t, typename int_t>
real_t odin_sum2(const real_t * x, int_t from_i, int_t to_i, int_t from_j, int_t to_j, int_t dim_x_1);
template <typename real_t, typename int_t>
real_t odin_sum3(const real_t * x, int_t from_i, int_t to_i, int_t from_j, int_t to_j, int_t from_k, int_t to_k, int_t dim_x_1, int_t dim_x_12);
class carehomes {
public:
  typedef int int_t;
  typedef double real_t;
  struct init_t {
    std::vector<real_t> aux_EE;
    std::vector<real_t> aux_II_asympt;
    std::vector<real_t> aux_II_comm_D;
    std::vector<real_t> aux_II_hosp_D_conf;
    std::vector<real_t> aux_II_hosp_D_unconf;
    std::vector<real_t> aux_II_hosp_R_conf;
    std::vector<real_t> aux_II_hosp_R_unconf;
    std::vector<real_t> aux_II_ICU_D_conf;
    std::vector<real_t> aux_II_ICU_D_unconf;
    std::vector<real_t> aux_II_ICU_R_conf;
    std::vector<real_t> aux_II_ICU_R_unconf;
    std::vector<real_t> aux_II_ILI;
    std::vector<real_t> aux_II_mild;
    std::vector<real_t> aux_II_triage_D_conf;
    std::vector<real_t> aux_II_triage_D_unconf;
    std::vector<real_t> aux_II_triage_R_conf;
    std::vector<real_t> aux_II_triage_R_unconf;
    std::vector<real_t> aux_p_bin;
    std::vector<real_t> aux_R_stepdown_conf;
    std::vector<real_t> aux_R_stepdown_unconf;
    std::vector<real_t> beta_step;
    real_t comm_D_transmission;
    real_t cum0_admit_conf;
    real_t cum0_new_conf;
    std::vector<real_t> D0_comm;
    std::vector<real_t> D0_hosp;
    std::vector<real_t> delta_D_comm;
    std::vector<real_t> delta_D_hosp;
    std::vector<real_t> delta_E;
    std::vector<real_t> delta_I_asympt;
    std::vector<real_t> delta_I_comm_D;
    std::vector<real_t> delta_I_ILI;
    std::vector<real_t> delta_I_mild;
    std::vector<real_t> delta_PCR_pos;
    std::vector<real_t> delta_R;
    std::vector<real_t> delta_R_neg;
    std::vector<real_t> delta_R_pos;
    int_t dim_aux_EE;
    int_t dim_aux_EE_1;
    int_t dim_aux_EE_12;
    int_t dim_aux_EE_2;
    int_t dim_aux_EE_3;
    int_t dim_aux_II_asympt;
    int_t dim_aux_II_asympt_1;
    int_t dim_aux_II_asympt_12;
    int_t dim_aux_II_asympt_2;
    int_t dim_aux_II_asympt_3;
    int_t dim_aux_II_comm_D;
    int_t dim_aux_II_comm_D_1;
    int_t dim_aux_II_comm_D_12;
    int_t dim_aux_II_comm_D_2;
    int_t dim_aux_II_comm_D_3;
    int_t dim_aux_II_hosp_D_conf;
    int_t dim_aux_II_hosp_D_conf_1;
    int_t dim_aux_II_hosp_D_conf_12;
    int_t dim_aux_II_hosp_D_conf_2;
    int_t dim_aux_II_hosp_D_conf_3;
    int_t dim_aux_II_hosp_D_unconf;
    int_t dim_aux_II_hosp_D_unconf_1;
    int_t dim_aux_II_hosp_D_unconf_12;
    int_t dim_aux_II_hosp_D_unconf_2;
    int_t dim_aux_II_hosp_D_unconf_3;
    int_t dim_aux_II_hosp_R_conf;
    int_t dim_aux_II_hosp_R_conf_1;
    int_t dim_aux_II_hosp_R_conf_12;
    int_t dim_aux_II_hosp_R_conf_2;
    int_t dim_aux_II_hosp_R_conf_3;
    int_t dim_aux_II_hosp_R_unconf;
    int_t dim_aux_II_hosp_R_unconf_1;
    int_t dim_aux_II_hosp_R_unconf_12;
    int_t dim_aux_II_hosp_R_unconf_2;
    int_t dim_aux_II_hosp_R_unconf_3;
    int_t dim_aux_II_ICU_D_conf;
    int_t dim_aux_II_ICU_D_conf_1;
    int_t dim_aux_II_ICU_D_conf_12;
    int_t dim_aux_II_ICU_D_conf_2;
    int_t dim_aux_II_ICU_D_conf_3;
    int_t dim_aux_II_ICU_D_unconf;
    int_t dim_aux_II_ICU_D_unconf_1;
    int_t dim_aux_II_ICU_D_unconf_12;
    int_t dim_aux_II_ICU_D_unconf_2;
    int_t dim_aux_II_ICU_D_unconf_3;
    int_t dim_aux_II_ICU_R_conf;
    int_t dim_aux_II_ICU_R_conf_1;
    int_t dim_aux_II_ICU_R_conf_12;
    int_t dim_aux_II_ICU_R_conf_2;
    int_t dim_aux_II_ICU_R_conf_3;
    int_t dim_aux_II_ICU_R_unconf;
    int_t dim_aux_II_ICU_R_unconf_1;
    int_t dim_aux_II_ICU_R_unconf_12;
    int_t dim_aux_II_ICU_R_unconf_2;
    int_t dim_aux_II_ICU_R_unconf_3;
    int_t dim_aux_II_ILI;
    int_t dim_aux_II_ILI_1;
    int_t dim_aux_II_ILI_12;
    int_t dim_aux_II_ILI_2;
    int_t dim_aux_II_ILI_3;
    int_t dim_aux_II_mild;
    int_t dim_aux_II_mild_1;
    int_t dim_aux_II_mild_12;
    int_t dim_aux_II_mild_2;
    int_t dim_aux_II_mild_3;
    int_t dim_aux_II_triage_D_conf;
    int_t dim_aux_II_triage_D_conf_1;
    int_t dim_aux_II_triage_D_conf_12;
    int_t dim_aux_II_triage_D_conf_2;
    int_t dim_aux_II_triage_D_conf_3;
    int_t dim_aux_II_triage_D_unconf;
    int_t dim_aux_II_triage_D_unconf_1;
    int_t dim_aux_II_triage_D_unconf_12;
    int_t dim_aux_II_triage_D_unconf_2;
    int_t dim_aux_II_triage_D_unconf_3;
    int_t dim_aux_II_triage_R_conf;
    int_t dim_aux_II_triage_R_conf_1;
    int_t dim_aux_II_triage_R_conf_12;
    int_t dim_aux_II_triage_R_conf_2;
    int_t dim_aux_II_triage_R_conf_3;
    int_t dim_aux_II_triage_R_unconf;
    int_t dim_aux_II_triage_R_unconf_1;
    int_t dim_aux_II_triage_R_unconf_12;
    int_t dim_aux_II_triage_R_unconf_2;
    int_t dim_aux_II_triage_R_unconf_3;
    int_t dim_aux_p_bin;
    int_t dim_aux_p_bin_1;
    int_t dim_aux_p_bin_2;
    int_t dim_aux_R_stepdown_conf;
    int_t dim_aux_R_stepdown_conf_1;
    int_t dim_aux_R_stepdown_conf_2;
    int_t dim_aux_R_stepdown_unconf;
    int_t dim_aux_R_stepdown_unconf_1;
    int_t dim_aux_R_stepdown_unconf_2;
    int_t dim_beta_step;
    int_t dim_D_comm;
    int_t dim_D_hosp;
    int_t dim_D0_comm;
    int_t dim_D0_hosp;
    int_t dim_delta_D_comm;
    int_t dim_delta_D_hosp;
    int_t dim_delta_E;
    int_t dim_delta_E_1;
    int_t dim_delta_E_12;
    int_t dim_delta_E_2;
    int_t dim_delta_E_3;
    int_t dim_delta_I_asympt;
    int_t dim_delta_I_asympt_1;
    int_t dim_delta_I_asympt_12;
    int_t dim_delta_I_asympt_2;
    int_t dim_delta_I_asympt_3;
    int_t dim_delta_I_comm_D;
    int_t dim_delta_I_comm_D_1;
    int_t dim_delta_I_comm_D_12;
    int_t dim_delta_I_comm_D_2;
    int_t dim_delta_I_comm_D_3;
    int_t dim_delta_I_ILI;
    int_t dim_delta_I_ILI_1;
    int_t dim_delta_I_ILI_12;
    int_t dim_delta_I_ILI_2;
    int_t dim_delta_I_ILI_3;
    int_t dim_delta_I_mild;
    int_t dim_delta_I_mild_1;
    int_t dim_delta_I_mild_12;
    int_t dim_delta_I_mild_2;
    int_t dim_delta_I_mild_3;
    int_t dim_delta_PCR_pos;
    int_t dim_delta_PCR_pos_1;
    int_t dim_delta_PCR_pos_2;
    int_t dim_delta_R;
    int_t dim_delta_R_neg;
    int_t dim_delta_R_pos;
    int_t dim_E;
    int_t dim_E_1;
    int_t dim_E_12;
    int_t dim_E_2;
    int_t dim_E_3;
    int_t dim_E0;
    int_t dim_E0_1;
    int_t dim_E0_12;
    int_t dim_E0_2;
    int_t dim_E0_3;
    int_t dim_gamma_R_pre;
    int_t dim_I_asympt;
    int_t dim_I_asympt_1;
    int_t dim_I_asympt_12;
    int_t dim_I_asympt_2;
    int_t dim_I_asympt_3;
    int_t dim_I_comm_D;
    int_t dim_I_comm_D_1;
    int_t dim_I_comm_D_12;
    int_t dim_I_comm_D_2;
    int_t dim_I_comm_D_3;
    int_t dim_I_hosp_D_conf;
    int_t dim_I_hosp_D_conf_1;
    int_t dim_I_hosp_D_conf_12;
    int_t dim_I_hosp_D_conf_2;
    int_t dim_I_hosp_D_conf_3;
    int_t dim_I_hosp_D_unconf;
    int_t dim_I_hosp_D_unconf_1;
    int_t dim_I_hosp_D_unconf_12;
    int_t dim_I_hosp_D_unconf_2;
    int_t dim_I_hosp_D_unconf_3;
    int_t dim_I_hosp_R_conf;
    int_t dim_I_hosp_R_conf_1;
    int_t dim_I_hosp_R_conf_12;
    int_t dim_I_hosp_R_conf_2;
    int_t dim_I_hosp_R_conf_3;
    int_t dim_I_hosp_R_unconf;
    int_t dim_I_hosp_R_unconf_1;
    int_t dim_I_hosp_R_unconf_12;
    int_t dim_I_hosp_R_unconf_2;
    int_t dim_I_hosp_R_unconf_3;
    int_t dim_I_ICU_D_conf;
    int_t dim_I_ICU_D_conf_1;
    int_t dim_I_ICU_D_conf_12;
    int_t dim_I_ICU_D_conf_2;
    int_t dim_I_ICU_D_conf_3;
    int_t dim_I_ICU_D_unconf;
    int_t dim_I_ICU_D_unconf_1;
    int_t dim_I_ICU_D_unconf_12;
    int_t dim_I_ICU_D_unconf_2;
    int_t dim_I_ICU_D_unconf_3;
    int_t dim_I_ICU_R_conf;
    int_t dim_I_ICU_R_conf_1;
    int_t dim_I_ICU_R_conf_12;
    int_t dim_I_ICU_R_conf_2;
    int_t dim_I_ICU_R_conf_3;
    int_t dim_I_ICU_R_unconf;
    int_t dim_I_ICU_R_unconf_1;
    int_t dim_I_ICU_R_unconf_12;
    int_t dim_I_ICU_R_unconf_2;
    int_t dim_I_ICU_R_unconf_3;
    int_t dim_I_ILI;
    int_t dim_I_ILI_1;
    int_t dim_I_ILI_12;
    int_t dim_I_ILI_2;
    int_t dim_I_ILI_3;
    int_t dim_I_mild;
    int_t dim_I_mild_1;
    int_t dim_I_mild_12;
    int_t dim_I_mild_2;
    int_t dim_I_mild_3;
    int_t dim_I_triage_D_conf;
    int_t dim_I_triage_D_conf_1;
    int_t dim_I_triage_D_conf_12;
    int_t dim_I_triage_D_conf_2;
    int_t dim_I_triage_D_conf_3;
    int_t dim_I_triage_D_unconf;
    int_t dim_I_triage_D_unconf_1;
    int_t dim_I_triage_D_unconf_12;
    int_t dim_I_triage_D_unconf_2;
    int_t dim_I_triage_D_unconf_3;
    int_t dim_I_triage_R_conf;
    int_t dim_I_triage_R_conf_1;
    int_t dim_I_triage_R_conf_12;
    int_t dim_I_triage_R_conf_2;
    int_t dim_I_triage_R_conf_3;
    int_t dim_I_triage_R_unconf;
    int_t dim_I_triage_R_unconf_1;
    int_t dim_I_triage_R_unconf_12;
    int_t dim_I_triage_R_unconf_2;
    int_t dim_I_triage_R_unconf_3;
    int_t dim_I_with_diff_trans;
    int_t dim_I_with_diff_trans_1;
    int_t dim_I_with_diff_trans_2;
    int_t dim_I0_asympt;
    int_t dim_I0_asympt_1;
    int_t dim_I0_asympt_12;
    int_t dim_I0_asympt_2;
    int_t dim_I0_asympt_3;
    int_t dim_I0_comm_D;
    int_t dim_I0_comm_D_1;
    int_t dim_I0_comm_D_12;
    int_t dim_I0_comm_D_2;
    int_t dim_I0_comm_D_3;
    int_t dim_I0_hosp_D_conf;
    int_t dim_I0_hosp_D_conf_1;
    int_t dim_I0_hosp_D_conf_12;
    int_t dim_I0_hosp_D_conf_2;
    int_t dim_I0_hosp_D_conf_3;
    int_t dim_I0_hosp_D_unconf;
    int_t dim_I0_hosp_D_unconf_1;
    int_t dim_I0_hosp_D_unconf_12;
    int_t dim_I0_hosp_D_unconf_2;
    int_t dim_I0_hosp_D_unconf_3;
    int_t dim_I0_hosp_R_conf;
    int_t dim_I0_hosp_R_conf_1;
    int_t dim_I0_hosp_R_conf_12;
    int_t dim_I0_hosp_R_conf_2;
    int_t dim_I0_hosp_R_conf_3;
    int_t dim_I0_hosp_R_unconf;
    int_t dim_I0_hosp_R_unconf_1;
    int_t dim_I0_hosp_R_unconf_12;
    int_t dim_I0_hosp_R_unconf_2;
    int_t dim_I0_hosp_R_unconf_3;
    int_t dim_I0_ICU_D_conf;
    int_t dim_I0_ICU_D_conf_1;
    int_t dim_I0_ICU_D_conf_12;
    int_t dim_I0_ICU_D_conf_2;
    int_t dim_I0_ICU_D_conf_3;
    int_t dim_I0_ICU_D_unconf;
    int_t dim_I0_ICU_D_unconf_1;
    int_t dim_I0_ICU_D_unconf_12;
    int_t dim_I0_ICU_D_unconf_2;
    int_t dim_I0_ICU_D_unconf_3;
    int_t dim_I0_ICU_R_conf;
    int_t dim_I0_ICU_R_conf_1;
    int_t dim_I0_ICU_R_conf_12;
    int_t dim_I0_ICU_R_conf_2;
    int_t dim_I0_ICU_R_conf_3;
    int_t dim_I0_ICU_R_unconf;
    int_t dim_I0_ICU_R_unconf_1;
    int_t dim_I0_ICU_R_unconf_12;
    int_t dim_I0_ICU_R_unconf_2;
    int_t dim_I0_ICU_R_unconf_3;
    int_t dim_I0_ILI;
    int_t dim_I0_ILI_1;
    int_t dim_I0_ILI_12;
    int_t dim_I0_ILI_2;
    int_t dim_I0_ILI_3;
    int_t dim_I0_mild;
    int_t dim_I0_mild_1;
    int_t dim_I0_mild_12;
    int_t dim_I0_mild_2;
    int_t dim_I0_mild_3;
    int_t dim_I0_triage_D_conf;
    int_t dim_I0_triage_D_conf_1;
    int_t dim_I0_triage_D_conf_12;
    int_t dim_I0_triage_D_conf_2;
    int_t dim_I0_triage_D_conf_3;
    int_t dim_I0_triage_D_unconf;
    int_t dim_I0_triage_D_unconf_1;
    int_t dim_I0_triage_D_unconf_12;
    int_t dim_I0_triage_D_unconf_2;
    int_t dim_I0_triage_D_unconf_3;
    int_t dim_I0_triage_R_conf;
    int_t dim_I0_triage_R_conf_1;
    int_t dim_I0_triage_R_conf_12;
    int_t dim_I0_triage_R_conf_2;
    int_t dim_I0_triage_R_conf_3;
    int_t dim_I0_triage_R_unconf;
    int_t dim_I0_triage_R_unconf_1;
    int_t dim_I0_triage_R_unconf_12;
    int_t dim_I0_triage_R_unconf_2;
    int_t dim_I0_triage_R_unconf_3;
    int_t dim_importation_step;
    int_t dim_lambda;
    int_t dim_m;
    int_t dim_m_1;
    int_t dim_m_2;
    int_t dim_n_com_to_R_pre;
    int_t dim_n_com_to_R_pre_1;
    int_t dim_n_com_to_R_pre_2;
    int_t dim_n_EE;
    int_t dim_n_EE_1;
    int_t dim_n_EE_12;
    int_t dim_n_EE_2;
    int_t dim_n_EE_3;
    int_t dim_n_EI_asympt;
    int_t dim_n_EI_asympt_1;
    int_t dim_n_EI_asympt_2;
    int_t dim_n_EI_ILI;
    int_t dim_n_EI_ILI_1;
    int_t dim_n_EI_ILI_2;
    int_t dim_n_EI_mild;
    int_t dim_n_EI_mild_1;
    int_t dim_n_EI_mild_2;
    int_t dim_n_hosp_non_ICU;
    int_t dim_n_hosp_non_ICU_1;
    int_t dim_n_hosp_non_ICU_2;
    int_t dim_n_I_hosp_D_unconf_to_conf;
    int_t dim_n_I_hosp_D_unconf_to_conf_1;
    int_t dim_n_I_hosp_D_unconf_to_conf_12;
    int_t dim_n_I_hosp_D_unconf_to_conf_2;
    int_t dim_n_I_hosp_D_unconf_to_conf_3;
    int_t dim_n_I_hosp_R_unconf_to_conf;
    int_t dim_n_I_hosp_R_unconf_to_conf_1;
    int_t dim_n_I_hosp_R_unconf_to_conf_12;
    int_t dim_n_I_hosp_R_unconf_to_conf_2;
    int_t dim_n_I_hosp_R_unconf_to_conf_3;
    int_t dim_n_I_ICU_D_unconf_to_conf;
    int_t dim_n_I_ICU_D_unconf_to_conf_1;
    int_t dim_n_I_ICU_D_unconf_to_conf_12;
    int_t dim_n_I_ICU_D_unconf_to_conf_2;
    int_t dim_n_I_ICU_D_unconf_to_conf_3;
    int_t dim_n_I_ICU_R_unconf_to_conf;
    int_t dim_n_I_ICU_R_unconf_to_conf_1;
    int_t dim_n_I_ICU_R_unconf_to_conf_12;
    int_t dim_n_I_ICU_R_unconf_to_conf_2;
    int_t dim_n_I_ICU_R_unconf_to_conf_3;
    int_t dim_n_I_triage_D_unconf_to_conf;
    int_t dim_n_I_triage_D_unconf_to_conf_1;
    int_t dim_n_I_triage_D_unconf_to_conf_12;
    int_t dim_n_I_triage_D_unconf_to_conf_2;
    int_t dim_n_I_triage_D_unconf_to_conf_3;
    int_t dim_n_I_triage_R_unconf_to_conf;
    int_t dim_n_I_triage_R_unconf_to_conf_1;
    int_t dim_n_I_triage_R_unconf_to_conf_12;
    int_t dim_n_I_triage_R_unconf_to_conf_2;
    int_t dim_n_I_triage_R_unconf_to_conf_3;
    int_t dim_n_II_asympt;
    int_t dim_n_II_asympt_1;
    int_t dim_n_II_asympt_12;
    int_t dim_n_II_asympt_2;
    int_t dim_n_II_asympt_3;
    int_t dim_n_II_comm_D;
    int_t dim_n_II_comm_D_1;
    int_t dim_n_II_comm_D_12;
    int_t dim_n_II_comm_D_2;
    int_t dim_n_II_comm_D_3;
    int_t dim_n_II_hosp_D_conf;
    int_t dim_n_II_hosp_D_conf_1;
    int_t dim_n_II_hosp_D_conf_12;
    int_t dim_n_II_hosp_D_conf_2;
    int_t dim_n_II_hosp_D_conf_3;
    int_t dim_n_II_hosp_D_unconf;
    int_t dim_n_II_hosp_D_unconf_1;
    int_t dim_n_II_hosp_D_unconf_12;
    int_t dim_n_II_hosp_D_unconf_2;
    int_t dim_n_II_hosp_D_unconf_3;
    int_t dim_n_II_hosp_R_conf;
    int_t dim_n_II_hosp_R_conf_1;
    int_t dim_n_II_hosp_R_conf_12;
    int_t dim_n_II_hosp_R_conf_2;
    int_t dim_n_II_hosp_R_conf_3;
    int_t dim_n_II_hosp_R_unconf;
    int_t dim_n_II_hosp_R_unconf_1;
    int_t dim_n_II_hosp_R_unconf_12;
    int_t dim_n_II_hosp_R_unconf_2;
    int_t dim_n_II_hosp_R_unconf_3;
    int_t dim_n_II_ICU_D_conf;
    int_t dim_n_II_ICU_D_conf_1;
    int_t dim_n_II_ICU_D_conf_12;
    int_t dim_n_II_ICU_D_conf_2;
    int_t dim_n_II_ICU_D_conf_3;
    int_t dim_n_II_ICU_D_unconf;
    int_t dim_n_II_ICU_D_unconf_1;
    int_t dim_n_II_ICU_D_unconf_12;
    int_t dim_n_II_ICU_D_unconf_2;
    int_t dim_n_II_ICU_D_unconf_3;
    int_t dim_n_II_ICU_R_conf;
    int_t dim_n_II_ICU_R_conf_1;
    int_t dim_n_II_ICU_R_conf_12;
    int_t dim_n_II_ICU_R_conf_2;
    int_t dim_n_II_ICU_R_conf_3;
    int_t dim_n_II_ICU_R_unconf;
    int_t dim_n_II_ICU_R_unconf_1;
    int_t dim_n_II_ICU_R_unconf_12;
    int_t dim_n_II_ICU_R_unconf_2;
    int_t dim_n_II_ICU_R_unconf_3;
    int_t dim_n_II_ILI;
    int_t dim_n_II_ILI_1;
    int_t dim_n_II_ILI_12;
    int_t dim_n_II_ILI_2;
    int_t dim_n_II_ILI_3;
    int_t dim_n_II_mild;
    int_t dim_n_II_mild_1;
    int_t dim_n_II_mild_12;
    int_t dim_n_II_mild_2;
    int_t dim_n_II_mild_3;
    int_t dim_n_II_triage_D_conf;
    int_t dim_n_II_triage_D_conf_1;
    int_t dim_n_II_triage_D_conf_12;
    int_t dim_n_II_triage_D_conf_2;
    int_t dim_n_II_triage_D_conf_3;
    int_t dim_n_II_triage_D_unconf;
    int_t dim_n_II_triage_D_unconf_1;
    int_t dim_n_II_triage_D_unconf_12;
    int_t dim_n_II_triage_D_unconf_2;
    int_t dim_n_II_triage_D_unconf_3;
    int_t dim_n_II_triage_R_conf;
    int_t dim_n_II_triage_R_conf_1;
    int_t dim_n_II_triage_R_conf_12;
    int_t dim_n_II_triage_R_conf_2;
    int_t dim_n_II_triage_R_conf_3;
    int_t dim_n_II_triage_R_unconf;
    int_t dim_n_II_triage_R_unconf_1;
    int_t dim_n_II_triage_R_unconf_12;
    int_t dim_n_II_triage_R_unconf_2;
    int_t dim_n_II_triage_R_unconf_3;
    int_t dim_n_ILI_to_comm_D;
    int_t dim_n_ILI_to_comm_D_1;
    int_t dim_n_ILI_to_comm_D_2;
    int_t dim_n_ILI_to_hosp;
    int_t dim_n_ILI_to_hosp_1;
    int_t dim_n_ILI_to_hosp_2;
    int_t dim_n_ILI_to_hosp_D;
    int_t dim_n_ILI_to_hosp_D_1;
    int_t dim_n_ILI_to_hosp_D_2;
    int_t dim_n_ILI_to_hosp_D_conf;
    int_t dim_n_ILI_to_hosp_D_conf_1;
    int_t dim_n_ILI_to_hosp_D_conf_2;
    int_t dim_n_ILI_to_hosp_out;
    int_t dim_n_ILI_to_hosp_out_1;
    int_t dim_n_ILI_to_hosp_out_2;
    int_t dim_n_ILI_to_hosp_R;
    int_t dim_n_ILI_to_hosp_R_1;
    int_t dim_n_ILI_to_hosp_R_2;
    int_t dim_n_ILI_to_hosp_R_conf;
    int_t dim_n_ILI_to_hosp_R_conf_1;
    int_t dim_n_ILI_to_hosp_R_conf_2;
    int_t dim_n_ILI_to_R;
    int_t dim_n_ILI_to_R_1;
    int_t dim_n_ILI_to_R_2;
    int_t dim_n_ILI_to_triage;
    int_t dim_n_ILI_to_triage_1;
    int_t dim_n_ILI_to_triage_2;
    int_t dim_n_ILI_to_triage_D;
    int_t dim_n_ILI_to_triage_D_1;
    int_t dim_n_ILI_to_triage_D_2;
    int_t dim_n_ILI_to_triage_D_conf;
    int_t dim_n_ILI_to_triage_D_conf_1;
    int_t dim_n_ILI_to_triage_D_conf_2;
    int_t dim_n_ILI_to_triage_R;
    int_t dim_n_ILI_to_triage_R_1;
    int_t dim_n_ILI_to_triage_R_2;
    int_t dim_n_ILI_to_triage_R_conf;
    int_t dim_n_ILI_to_triage_R_conf_1;
    int_t dim_n_ILI_to_triage_R_conf_2;
    int_t dim_n_PCR_pos;
    int_t dim_n_PCR_pos_1;
    int_t dim_n_PCR_pos_2;
    int_t dim_n_R_pre;
    int_t dim_n_R_pre_1;
    int_t dim_n_R_pre_2;
    int_t dim_n_R_stepdown_conf;
    int_t dim_n_R_stepdown_conf_1;
    int_t dim_n_R_stepdown_conf_2;
    int_t dim_n_R_stepdown_unconf;
    int_t dim_n_R_stepdown_unconf_1;
    int_t dim_n_R_stepdown_unconf_2;
    int_t dim_n_R_stepdown_unconf_to_conf;
    int_t dim_n_R_stepdown_unconf_to_conf_1;
    int_t dim_n_R_stepdown_unconf_to_conf_2;
    int_t dim_n_SE;
    int_t dim_N_tot;
    int_t dim_N0_tot;
    int_t dim_new_I_hosp_D_conf;
    int_t dim_new_I_hosp_D_conf_1;
    int_t dim_new_I_hosp_D_conf_12;
    int_t dim_new_I_hosp_D_conf_2;
    int_t dim_new_I_hosp_D_conf_3;
    int_t dim_new_I_hosp_D_unconf;
    int_t dim_new_I_hosp_D_unconf_1;
    int_t dim_new_I_hosp_D_unconf_12;
    int_t dim_new_I_hosp_D_unconf_2;
    int_t dim_new_I_hosp_D_unconf_3;
    int_t dim_new_I_hosp_R_conf;
    int_t dim_new_I_hosp_R_conf_1;
    int_t dim_new_I_hosp_R_conf_12;
    int_t dim_new_I_hosp_R_conf_2;
    int_t dim_new_I_hosp_R_conf_3;
    int_t dim_new_I_hosp_R_unconf;
    int_t dim_new_I_hosp_R_unconf_1;
    int_t dim_new_I_hosp_R_unconf_12;
    int_t dim_new_I_hosp_R_unconf_2;
    int_t dim_new_I_hosp_R_unconf_3;
    int_t dim_new_I_ICU_D_conf;
    int_t dim_new_I_ICU_D_conf_1;
    int_t dim_new_I_ICU_D_conf_12;
    int_t dim_new_I_ICU_D_conf_2;
    int_t dim_new_I_ICU_D_conf_3;
    int_t dim_new_I_ICU_D_unconf;
    int_t dim_new_I_ICU_D_unconf_1;
    int_t dim_new_I_ICU_D_unconf_12;
    int_t dim_new_I_ICU_D_unconf_2;
    int_t dim_new_I_ICU_D_unconf_3;
    int_t dim_new_I_ICU_R_conf;
    int_t dim_new_I_ICU_R_conf_1;
    int_t dim_new_I_ICU_R_conf_12;
    int_t dim_new_I_ICU_R_conf_2;
    int_t dim_new_I_ICU_R_conf_3;
    int_t dim_new_I_ICU_R_unconf;
    int_t dim_new_I_ICU_R_unconf_1;
    int_t dim_new_I_ICU_R_unconf_12;
    int_t dim_new_I_ICU_R_unconf_2;
    int_t dim_new_I_ICU_R_unconf_3;
    int_t dim_new_I_triage_D_conf;
    int_t dim_new_I_triage_D_conf_1;
    int_t dim_new_I_triage_D_conf_12;
    int_t dim_new_I_triage_D_conf_2;
    int_t dim_new_I_triage_D_conf_3;
    int_t dim_new_I_triage_D_unconf;
    int_t dim_new_I_triage_D_unconf_1;
    int_t dim_new_I_triage_D_unconf_12;
    int_t dim_new_I_triage_D_unconf_2;
    int_t dim_new_I_triage_D_unconf_3;
    int_t dim_new_I_triage_R_conf;
    int_t dim_new_I_triage_R_conf_1;
    int_t dim_new_I_triage_R_conf_12;
    int_t dim_new_I_triage_R_conf_2;
    int_t dim_new_I_triage_R_conf_3;
    int_t dim_new_I_triage_R_unconf;
    int_t dim_new_I_triage_R_unconf_1;
    int_t dim_new_I_triage_R_unconf_12;
    int_t dim_new_I_triage_R_unconf_2;
    int_t dim_new_I_triage_R_unconf_3;
    int_t dim_new_R_stepdown_conf;
    int_t dim_new_R_stepdown_conf_1;
    int_t dim_new_R_stepdown_conf_2;
    int_t dim_new_R_stepdown_unconf;
    int_t dim_new_R_stepdown_unconf_1;
    int_t dim_new_R_stepdown_unconf_2;
    int_t dim_p_admit_conf;
    int_t dim_p_asympt;
    int_t dim_p_death_comm;
    int_t dim_p_death_hosp_D;
    int_t dim_p_death_ICU;
    int_t dim_p_hosp_ILI;
    int_t dim_p_ICU_hosp;
    int_t dim_p_R_pre;
    int_t dim_p_R_pre_1;
    int_t dim_p_R_pre_2;
    int_t dim_p_SE;
    int_t dim_p_seroconversion;
    int_t dim_p_sympt_ILI;
    int_t dim_PCR_pos;
    int_t dim_PCR_pos_1;
    int_t dim_PCR_pos_2;
    int_t dim_PCR0_pos;
    int_t dim_PCR0_pos_1;
    int_t dim_PCR0_pos_2;
    int_t dim_R;
    int_t dim_R_neg;
    int_t dim_R_pos;
    int_t dim_R_pre;
    int_t dim_R_pre_1;
    int_t dim_R_pre_2;
    int_t dim_R_stepdown_conf;
    int_t dim_R_stepdown_conf_1;
    int_t dim_R_stepdown_conf_2;
    int_t dim_R_stepdown_unconf;
    int_t dim_R_stepdown_unconf_1;
    int_t dim_R_stepdown_unconf_2;
    int_t dim_R0;
    int_t dim_R0_neg;
    int_t dim_R0_pos;
    int_t dim_R0_pre;
    int_t dim_R0_pre_1;
    int_t dim_R0_pre_2;
    int_t dim_R0_stepdown_conf;
    int_t dim_R0_stepdown_conf_1;
    int_t dim_R0_stepdown_conf_2;
    int_t dim_R0_stepdown_unconf;
    int_t dim_R0_stepdown_unconf_1;
    int_t dim_R0_stepdown_unconf_2;
    int_t dim_S;
    int_t dim_s_ij;
    int_t dim_s_ij_1;
    int_t dim_s_ij_2;
    int_t dim_S0;
    int_t dim_trans_increase;
    int_t dim_trans_increase_1;
    int_t dim_trans_increase_2;
    int_t dim_trans_profile;
    int_t dim_trans_profile_1;
    int_t dim_trans_profile_2;
    real_t dt;
    std::vector<real_t> E0;
    real_t gamma_asympt;
    real_t gamma_comm_D;
    real_t gamma_E;
    real_t gamma_hosp_D;
    real_t gamma_hosp_R;
    real_t gamma_ICU_D;
    real_t gamma_ICU_R;
    real_t gamma_ILI;
    real_t gamma_mild;
    real_t gamma_PCR_pos;
    std::vector<real_t> gamma_R_pre;
    real_t gamma_R_pre_1;
    real_t gamma_R_pre_2;
    real_t gamma_stepdown;
    real_t gamma_test;
    real_t gamma_triage;
    real_t hosp_transmission;
    std::vector<real_t> I_with_diff_trans;
    std::vector<real_t> I0_asympt;
    std::vector<real_t> I0_comm_D;
    std::vector<real_t> I0_hosp_D_conf;
    std::vector<real_t> I0_hosp_D_unconf;
    std::vector<real_t> I0_hosp_R_conf;
    std::vector<real_t> I0_hosp_R_unconf;
    std::vector<real_t> I0_ICU_D_conf;
    std::vector<real_t> I0_ICU_D_unconf;
    std::vector<real_t> I0_ICU_R_conf;
    std::vector<real_t> I0_ICU_R_unconf;
    std::vector<real_t> I0_ILI;
    std::vector<real_t> I0_mild;
    std::vector<real_t> I0_triage_D_conf;
    std::vector<real_t> I0_triage_D_unconf;
    std::vector<real_t> I0_triage_R_conf;
    std::vector<real_t> I0_triage_R_unconf;
    real_t ICU_transmission;
    std::vector<real_t> importation_step;
    real_t initial_beta_out;
    real_t initial_cum_admit_conf;
    real_t initial_cum_new_conf;
    std::vector<real_t> initial_D_comm;
    std::vector<real_t> initial_D_hosp;
    std::vector<real_t> initial_E;
    std::vector<real_t> initial_I_asympt;
    std::vector<real_t> initial_I_comm_D;
    std::vector<real_t> initial_I_hosp_D_conf;
    std::vector<real_t> initial_I_hosp_D_unconf;
    std::vector<real_t> initial_I_hosp_R_conf;
    std::vector<real_t> initial_I_hosp_R_unconf;
    std::vector<real_t> initial_I_ICU_D_conf;
    std::vector<real_t> initial_I_ICU_D_unconf;
    std::vector<real_t> initial_I_ICU_R_conf;
    std::vector<real_t> initial_I_ICU_R_unconf;
    std::vector<real_t> initial_I_ILI;
    std::vector<real_t> initial_I_mild;
    std::vector<real_t> initial_I_triage_D_conf;
    std::vector<real_t> initial_I_triage_D_unconf;
    std::vector<real_t> initial_I_triage_R_conf;
    std::vector<real_t> initial_I_triage_R_unconf;
    std::vector<real_t> initial_n_ILI_to_hosp_out;
    std::vector<real_t> initial_N_tot;
    real_t initial_N_tot2;
    std::vector<real_t> initial_PCR_pos;
    std::vector<real_t> initial_R;
    std::vector<real_t> initial_R_neg;
    std::vector<real_t> initial_R_pos;
    std::vector<real_t> initial_R_pre;
    std::vector<real_t> initial_R_stepdown_conf;
    std::vector<real_t> initial_R_stepdown_unconf;
    std::vector<real_t> initial_S;
    real_t initial_time;
    std::vector<real_t> lambda;
    std::vector<real_t> m;
    int_t N_age;
    std::vector<real_t> n_com_to_R_pre;
    std::vector<real_t> n_EE;
    std::vector<real_t> n_EI_asympt;
    std::vector<real_t> n_EI_ILI;
    std::vector<real_t> n_EI_mild;
    std::vector<real_t> n_hosp_non_ICU;
    std::vector<real_t> n_I_hosp_D_unconf_to_conf;
    std::vector<real_t> n_I_hosp_R_unconf_to_conf;
    std::vector<real_t> n_I_ICU_D_unconf_to_conf;
    std::vector<real_t> n_I_ICU_R_unconf_to_conf;
    std::vector<real_t> n_I_triage_D_unconf_to_conf;
    std::vector<real_t> n_I_triage_R_unconf_to_conf;
    std::vector<real_t> n_II_asympt;
    std::vector<real_t> n_II_comm_D;
    std::vector<real_t> n_II_hosp_D_conf;
    std::vector<real_t> n_II_hosp_D_unconf;
    std::vector<real_t> n_II_hosp_R_conf;
    std::vector<real_t> n_II_hosp_R_unconf;
    std::vector<real_t> n_II_ICU_D_conf;
    std::vector<real_t> n_II_ICU_D_unconf;
    std::vector<real_t> n_II_ICU_R_conf;
    std::vector<real_t> n_II_ICU_R_unconf;
    std::vector<real_t> n_II_ILI;
    std::vector<real_t> n_II_mild;
    std::vector<real_t> n_II_triage_D_conf;
    std::vector<real_t> n_II_triage_D_unconf;
    std::vector<real_t> n_II_triage_R_conf;
    std::vector<real_t> n_II_triage_R_unconf;
    std::vector<real_t> n_ILI_to_comm_D;
    std::vector<real_t> n_ILI_to_hosp;
    std::vector<real_t> n_ILI_to_hosp_D;
    std::vector<real_t> n_ILI_to_hosp_D_conf;
    std::vector<real_t> n_ILI_to_hosp_R;
    std::vector<real_t> n_ILI_to_hosp_R_conf;
    std::vector<real_t> n_ILI_to_R;
    std::vector<real_t> n_ILI_to_triage;
    std::vector<real_t> n_ILI_to_triage_D;
    std::vector<real_t> n_ILI_to_triage_D_conf;
    std::vector<real_t> n_ILI_to_triage_R;
    std::vector<real_t> n_ILI_to_triage_R_conf;
    std::vector<real_t> n_PCR_pos;
    std::vector<real_t> n_R_pre;
    std::vector<real_t> n_R_stepdown_conf;
    std::vector<real_t> n_R_stepdown_unconf;
    std::vector<real_t> n_R_stepdown_unconf_to_conf;
    std::vector<real_t> n_SE;
    std::vector<real_t> N0_tot;
    real_t N0_tot2;
    std::vector<real_t> new_I_hosp_D_conf;
    std::vector<real_t> new_I_hosp_D_unconf;
    std::vector<real_t> new_I_hosp_R_conf;
    std::vector<real_t> new_I_hosp_R_unconf;
    std::vector<real_t> new_I_ICU_D_conf;
    std::vector<real_t> new_I_ICU_D_unconf;
    std::vector<real_t> new_I_ICU_R_conf;
    std::vector<real_t> new_I_ICU_R_unconf;
    std::vector<real_t> new_I_triage_D_conf;
    std::vector<real_t> new_I_triage_D_unconf;
    std::vector<real_t> new_I_triage_R_conf;
    std::vector<real_t> new_I_triage_R_unconf;
    std::vector<real_t> new_R_stepdown_conf;
    std::vector<real_t> new_R_stepdown_unconf;
    int_t offset_variable_D_comm;
    int_t offset_variable_D_hosp;
    int_t offset_variable_E;
    int_t offset_variable_I_asympt;
    int_t offset_variable_I_comm_D;
    int_t offset_variable_I_hosp_D_conf;
    int_t offset_variable_I_hosp_D_unconf;
    int_t offset_variable_I_hosp_R_conf;
    int_t offset_variable_I_hosp_R_unconf;
    int_t offset_variable_I_ICU_D_conf;
    int_t offset_variable_I_ICU_D_unconf;
    int_t offset_variable_I_ICU_R_conf;
    int_t offset_variable_I_ICU_R_unconf;
    int_t offset_variable_I_ILI;
    int_t offset_variable_I_mild;
    int_t offset_variable_I_triage_D_conf;
    int_t offset_variable_I_triage_D_unconf;
    int_t offset_variable_I_triage_R_conf;
    int_t offset_variable_I_triage_R_unconf;
    int_t offset_variable_n_ILI_to_hosp_out;
    int_t offset_variable_N_tot;
    int_t offset_variable_PCR_pos;
    int_t offset_variable_R;
    int_t offset_variable_R_neg;
    int_t offset_variable_R_pos;
    int_t offset_variable_R_pre;
    int_t offset_variable_R_stepdown_conf;
    int_t offset_variable_R_stepdown_unconf;
    std::vector<real_t> p_admit_conf;
    std::vector<real_t> p_asympt;
    std::vector<real_t> p_death_comm;
    std::vector<real_t> p_death_hosp_D;
    std::vector<real_t> p_death_ICU;
    real_t p_EE;
    std::vector<real_t> p_hosp_ILI;
    std::vector<real_t> p_ICU_hosp;
    real_t p_II_asympt;
    real_t p_II_comm_D;
    real_t p_II_hosp_D;
    real_t p_II_hosp_R;
    real_t p_II_ICU_D;
    real_t p_II_ICU_R;
    real_t p_II_ILI;
    real_t p_II_mild;
    real_t p_II_triage;
    real_t p_PCR_pos;
    std::vector<real_t> p_R_pre;
    real_t p_R_pre_1;
    real_t p_R_stepdown;
    std::vector<real_t> p_SE;
    std::vector<real_t> p_seroconversion;
    std::vector<real_t> p_sympt_ILI;
    real_t p_test;
    std::vector<real_t> PCR0_pos;
    real_t psi;
    std::vector<real_t> R0;
    std::vector<real_t> R0_neg;
    std::vector<real_t> R0_pos;
    std::vector<real_t> R0_pre;
    std::vector<real_t> R0_stepdown_conf;
    std::vector<real_t> R0_stepdown_unconf;
    int_t s_asympt;
    int_t s_comm_D;
    int_t s_E;
    int_t s_hosp_D;
    int_t s_hosp_R;
    int_t s_ICU_D;
    int_t s_ICU_R;
    std::vector<real_t> s_ij;
    int_t s_ILI;
    int_t s_mild;
    int_t s_PCR_pos;
    int_t s_stepdown;
    int_t s_triage;
    std::vector<real_t> S0;
    int_t trans_classes;
    std::vector<real_t> trans_increase;
    std::vector<real_t> trans_profile;
  };
  carehomes(const init_t& data): internal(data) {
  }
  size_t size() {
    return 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D + internal.dim_I_triage_R_unconf + internal.dim_I_triage_R_conf + internal.dim_I_triage_D_unconf + internal.dim_I_triage_D_conf + internal.dim_I_hosp_R_unconf + internal.dim_I_hosp_R_conf + internal.dim_I_hosp_D_unconf + internal.dim_I_hosp_D_conf + internal.dim_I_ICU_R_unconf + internal.dim_I_ICU_R_conf + internal.dim_I_ICU_D_unconf + internal.dim_I_ICU_D_conf;
  }
  std::vector<real_t> initial(size_t step) {
    std::vector<real_t> state(5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D + internal.dim_I_triage_R_unconf + internal.dim_I_triage_R_conf + internal.dim_I_triage_D_unconf + internal.dim_I_triage_D_conf + internal.dim_I_hosp_R_unconf + internal.dim_I_hosp_R_conf + internal.dim_I_hosp_D_unconf + internal.dim_I_hosp_D_conf + internal.dim_I_ICU_R_unconf + internal.dim_I_ICU_R_conf + internal.dim_I_ICU_D_unconf + internal.dim_I_ICU_D_conf);
    state[0] = internal.initial_time;
    state[1] = internal.initial_cum_admit_conf;
    state[2] = internal.initial_cum_new_conf;
    state[3] = internal.initial_beta_out;
    state[4] = internal.initial_N_tot2;
    std::copy(internal.initial_S.begin(), internal.initial_S.end(), state.begin() + 5);
    std::copy(internal.initial_R_pos.begin(), internal.initial_R_pos.end(), state.begin() + internal.offset_variable_R_pos);
    std::copy(internal.initial_R_neg.begin(), internal.initial_R_neg.end(), state.begin() + internal.offset_variable_R_neg);
    std::copy(internal.initial_R.begin(), internal.initial_R.end(), state.begin() + internal.offset_variable_R);
    std::copy(internal.initial_D_hosp.begin(), internal.initial_D_hosp.end(), state.begin() + internal.offset_variable_D_hosp);
    std::copy(internal.initial_D_comm.begin(), internal.initial_D_comm.end(), state.begin() + internal.offset_variable_D_comm);
    std::copy(internal.initial_N_tot.begin(), internal.initial_N_tot.end(), state.begin() + internal.offset_variable_N_tot);
    std::copy(internal.initial_n_ILI_to_hosp_out.begin(), internal.initial_n_ILI_to_hosp_out.end(), state.begin() + internal.offset_variable_n_ILI_to_hosp_out);
    std::copy(internal.initial_R_stepdown_unconf.begin(), internal.initial_R_stepdown_unconf.end(), state.begin() + internal.offset_variable_R_stepdown_unconf);
    std::copy(internal.initial_R_stepdown_conf.begin(), internal.initial_R_stepdown_conf.end(), state.begin() + internal.offset_variable_R_stepdown_conf);
    std::copy(internal.initial_R_pre.begin(), internal.initial_R_pre.end(), state.begin() + internal.offset_variable_R_pre);
    std::copy(internal.initial_PCR_pos.begin(), internal.initial_PCR_pos.end(), state.begin() + internal.offset_variable_PCR_pos);
    std::copy(internal.initial_E.begin(), internal.initial_E.end(), state.begin() + internal.offset_variable_E);
    std::copy(internal.initial_I_asympt.begin(), internal.initial_I_asympt.end(), state.begin() + internal.offset_variable_I_asympt);
    std::copy(internal.initial_I_mild.begin(), internal.initial_I_mild.end(), state.begin() + internal.offset_variable_I_mild);
    std::copy(internal.initial_I_ILI.begin(), internal.initial_I_ILI.end(), state.begin() + internal.offset_variable_I_ILI);
    std::copy(internal.initial_I_comm_D.begin(), internal.initial_I_comm_D.end(), state.begin() + internal.offset_variable_I_comm_D);
    std::copy(internal.initial_I_triage_R_unconf.begin(), internal.initial_I_triage_R_unconf.end(), state.begin() + internal.offset_variable_I_triage_R_unconf);
    std::copy(internal.initial_I_triage_R_conf.begin(), internal.initial_I_triage_R_conf.end(), state.begin() + internal.offset_variable_I_triage_R_conf);
    std::copy(internal.initial_I_triage_D_unconf.begin(), internal.initial_I_triage_D_unconf.end(), state.begin() + internal.offset_variable_I_triage_D_unconf);
    std::copy(internal.initial_I_triage_D_conf.begin(), internal.initial_I_triage_D_conf.end(), state.begin() + internal.offset_variable_I_triage_D_conf);
    std::copy(internal.initial_I_hosp_R_unconf.begin(), internal.initial_I_hosp_R_unconf.end(), state.begin() + internal.offset_variable_I_hosp_R_unconf);
    std::copy(internal.initial_I_hosp_R_conf.begin(), internal.initial_I_hosp_R_conf.end(), state.begin() + internal.offset_variable_I_hosp_R_conf);
    std::copy(internal.initial_I_hosp_D_unconf.begin(), internal.initial_I_hosp_D_unconf.end(), state.begin() + internal.offset_variable_I_hosp_D_unconf);
    std::copy(internal.initial_I_hosp_D_conf.begin(), internal.initial_I_hosp_D_conf.end(), state.begin() + internal.offset_variable_I_hosp_D_conf);
    std::copy(internal.initial_I_ICU_R_unconf.begin(), internal.initial_I_ICU_R_unconf.end(), state.begin() + internal.offset_variable_I_ICU_R_unconf);
    std::copy(internal.initial_I_ICU_R_conf.begin(), internal.initial_I_ICU_R_conf.end(), state.begin() + internal.offset_variable_I_ICU_R_conf);
    std::copy(internal.initial_I_ICU_D_unconf.begin(), internal.initial_I_ICU_D_unconf.end(), state.begin() + internal.offset_variable_I_ICU_D_unconf);
    std::copy(internal.initial_I_ICU_D_conf.begin(), internal.initial_I_ICU_D_conf.end(), state.begin() + internal.offset_variable_I_ICU_D_conf);
    return state;
  }
  #ifdef __NVCC__
  __device__
  #endif
  void update(size_t step, const real_t * state, dust::rng_state_t<real_t>& rng_state, real_t * state_next) {
    const real_t * S = state + 5;
    const real_t * E = state + internal.offset_variable_E;
    const real_t * I_asympt = state + internal.offset_variable_I_asympt;
    const real_t * I_mild = state + internal.offset_variable_I_mild;
    const real_t * I_ILI = state + internal.offset_variable_I_ILI;
    const real_t * I_comm_D = state + internal.offset_variable_I_comm_D;
    const real_t * I_triage_R_unconf = state + internal.offset_variable_I_triage_R_unconf;
    const real_t * I_triage_R_conf = state + internal.offset_variable_I_triage_R_conf;
    const real_t * I_triage_D_unconf = state + internal.offset_variable_I_triage_D_unconf;
    const real_t * I_triage_D_conf = state + internal.offset_variable_I_triage_D_conf;
    const real_t * I_hosp_R_unconf = state + internal.offset_variable_I_hosp_R_unconf;
    const real_t * I_hosp_R_conf = state + internal.offset_variable_I_hosp_R_conf;
    const real_t * I_hosp_D_unconf = state + internal.offset_variable_I_hosp_D_unconf;
    const real_t * I_hosp_D_conf = state + internal.offset_variable_I_hosp_D_conf;
    const real_t * I_ICU_R_unconf = state + internal.offset_variable_I_ICU_R_unconf;
    const real_t * I_ICU_R_conf = state + internal.offset_variable_I_ICU_R_conf;
    const real_t * I_ICU_D_unconf = state + internal.offset_variable_I_ICU_D_unconf;
    const real_t * I_ICU_D_conf = state + internal.offset_variable_I_ICU_D_conf;
    const real_t * R_stepdown_unconf = state + internal.offset_variable_R_stepdown_unconf;
    const real_t * R_stepdown_conf = state + internal.offset_variable_R_stepdown_conf;
    const real_t * R_pre = state + internal.offset_variable_R_pre;
    const real_t * R_pos = state + internal.offset_variable_R_pos;
    const real_t * R_neg = state + internal.offset_variable_R_neg;
    const real_t * R = state + internal.offset_variable_R;
    const real_t * D_hosp = state + internal.offset_variable_D_hosp;
    const real_t * D_comm = state + internal.offset_variable_D_comm;
    const real_t * PCR_pos = state + internal.offset_variable_PCR_pos;
    const real_t cum_admit_conf = state[1];
    const real_t cum_new_conf = state[2];
    const real_t * n_ILI_to_hosp_out = state + internal.offset_variable_n_ILI_to_hosp_out;
    const real_t N_tot2 = state[4];
    state_next[4] = odin_sum1(S, 0, internal.dim_S) + odin_sum1(R_pre, 0, internal.dim_R_pre) + odin_sum1(R_pos, 0, internal.dim_R_pos) + odin_sum1(R_neg, 0, internal.dim_R_neg) + odin_sum1(E, 0, internal.dim_E);
    state_next[0] = (step + 1) * internal.dt;
    real_t beta = (step >= internal.dim_beta_step ? internal.beta_step[internal.dim_beta_step - 1] : internal.beta_step[step + 1 - 1]);
    real_t importation = (step >= internal.dim_importation_step ? internal.importation_step[internal.dim_importation_step - 1] : internal.importation_step[step + 1 - 1]);
    state_next[3] = beta;
    for (int_t i = 1; i <= internal.dim_n_ILI_to_hosp_out_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_ILI_to_hosp_out_2; ++j) {
        state_next[internal.offset_variable_n_ILI_to_hosp_out + i - 1 + internal.dim_n_ILI_to_hosp_out_1 * (j - 1)] = n_ILI_to_hosp_out[internal.dim_n_ILI_to_hosp_out_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_N_tot; ++i) {
      state_next[internal.offset_variable_N_tot + i - 1] = S[i - 1] + R[i - 1] + D_hosp[i - 1] + odin_sum3(E, i - 1, i, 0, internal.dim_E_2, 0, internal.dim_E_3, internal.dim_E_1, internal.dim_E_12) + odin_sum3(I_asympt, i - 1, i, 0, internal.dim_I_asympt_2, 0, internal.dim_I_asympt_3, internal.dim_I_asympt_1, internal.dim_I_asympt_12) + odin_sum3(I_mild, i - 1, i, 0, internal.dim_I_mild_2, 0, internal.dim_I_mild_3, internal.dim_I_mild_1, internal.dim_I_mild_12) + odin_sum3(I_ILI, i - 1, i, 0, internal.dim_I_ILI_2, 0, internal.dim_I_ILI_3, internal.dim_I_ILI_1, internal.dim_I_ILI_12) + odin_sum3(I_triage_D_conf, i - 1, i, 0, internal.dim_I_triage_D_conf_2, 0, internal.dim_I_triage_D_conf_3, internal.dim_I_triage_D_conf_1, internal.dim_I_triage_D_conf_12) + odin_sum3(I_triage_D_unconf, i - 1, i, 0, internal.dim_I_triage_D_unconf_2, 0, internal.dim_I_triage_D_unconf_3, internal.dim_I_triage_D_unconf_1, internal.dim_I_triage_D_unconf_12) + odin_sum3(I_triage_R_conf, i - 1, i, 0, internal.dim_I_triage_R_conf_2, 0, internal.dim_I_triage_R_conf_3, internal.dim_I_triage_R_conf_1, internal.dim_I_triage_R_conf_12) + odin_sum3(I_triage_R_unconf, i - 1, i, 0, internal.dim_I_triage_R_unconf_2, 0, internal.dim_I_triage_R_unconf_3, internal.dim_I_triage_R_unconf_1, internal.dim_I_triage_R_unconf_12) + odin_sum3(I_hosp_R_conf, i - 1, i, 0, internal.dim_I_hosp_R_conf_2, 0, internal.dim_I_hosp_R_conf_3, internal.dim_I_hosp_R_conf_1, internal.dim_I_hosp_R_conf_12) + odin_sum3(I_hosp_R_unconf, i - 1, i, 0, internal.dim_I_hosp_R_unconf_2, 0, internal.dim_I_hosp_R_unconf_3, internal.dim_I_hosp_R_unconf_1, internal.dim_I_hosp_R_unconf_12) + odin_sum3(I_hosp_D_conf, i - 1, i, 0, internal.dim_I_hosp_D_conf_2, 0, internal.dim_I_hosp_D_conf_3, internal.dim_I_hosp_D_conf_1, internal.dim_I_hosp_D_conf_12) + odin_sum3(I_hosp_D_unconf, i - 1, i, 0, internal.dim_I_hosp_D_unconf_2, 0, internal.dim_I_hosp_D_unconf_3, internal.dim_I_hosp_D_unconf_1, internal.dim_I_hosp_D_unconf_12) + odin_sum3(I_ICU_R_conf, i - 1, i, 0, internal.dim_I_ICU_R_conf_2, 0, internal.dim_I_ICU_R_conf_3, internal.dim_I_ICU_R_conf_1, internal.dim_I_ICU_R_conf_12) + odin_sum3(I_ICU_R_unconf, i - 1, i, 0, internal.dim_I_ICU_R_unconf_2, 0, internal.dim_I_ICU_R_unconf_3, internal.dim_I_ICU_R_unconf_1, internal.dim_I_ICU_R_unconf_12) + odin_sum3(I_ICU_D_conf, i - 1, i, 0, internal.dim_I_ICU_D_conf_2, 0, internal.dim_I_ICU_D_conf_3, internal.dim_I_ICU_D_conf_1, internal.dim_I_ICU_D_conf_12) + odin_sum3(I_ICU_D_unconf, i - 1, i, 0, internal.dim_I_ICU_D_unconf_2, 0, internal.dim_I_ICU_D_unconf_3, internal.dim_I_ICU_D_unconf_1, internal.dim_I_ICU_D_unconf_12) + odin_sum2(R_stepdown_conf, i - 1, i, 0, internal.dim_R_stepdown_conf_2, internal.dim_R_stepdown_conf_1) + odin_sum2(R_stepdown_unconf, i - 1, i, 0, internal.dim_R_stepdown_unconf_2, internal.dim_R_stepdown_unconf_1) + odin_sum3(I_comm_D, i - 1, i, 0, internal.dim_I_comm_D_2, 0, internal.dim_I_comm_D_3, internal.dim_I_comm_D_1, internal.dim_I_comm_D_12) + D_comm[i - 1];
    }
    for (int_t i = 1; i <= internal.dim_I_with_diff_trans_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_with_diff_trans_2; ++j) {
        internal.I_with_diff_trans[i - 1 + internal.dim_I_with_diff_trans_1 * (j - 1)] = internal.trans_increase[internal.dim_trans_increase_1 * (j - 1) + i - 1] * (odin_sum3(I_asympt, i - 1, i, 0, internal.dim_I_asympt_2, j - 1, j, internal.dim_I_asympt_1, internal.dim_I_asympt_12) + odin_sum3(I_mild, i - 1, i, 0, internal.dim_I_mild_2, j - 1, j, internal.dim_I_mild_1, internal.dim_I_mild_12) + odin_sum3(I_ILI, i - 1, i, 0, internal.dim_I_ILI_2, j - 1, j, internal.dim_I_ILI_1, internal.dim_I_ILI_12) + internal.hosp_transmission * (odin_sum3(I_triage_R_unconf, i - 1, i, 0, internal.dim_I_triage_R_unconf_2, j - 1, j, internal.dim_I_triage_R_unconf_1, internal.dim_I_triage_R_unconf_12) + odin_sum3(I_triage_R_conf, i - 1, i, 0, internal.dim_I_triage_R_conf_2, j - 1, j, internal.dim_I_triage_R_conf_1, internal.dim_I_triage_R_conf_12) + odin_sum3(I_triage_D_unconf, i - 1, i, 0, internal.dim_I_triage_D_unconf_2, j - 1, j, internal.dim_I_triage_D_unconf_1, internal.dim_I_triage_D_unconf_12) + odin_sum3(I_triage_D_conf, i - 1, i, 0, internal.dim_I_triage_D_conf_2, j - 1, j, internal.dim_I_triage_D_conf_1, internal.dim_I_triage_D_conf_12) + odin_sum3(I_hosp_R_unconf, i - 1, i, 0, internal.dim_I_hosp_R_unconf_2, j - 1, j, internal.dim_I_hosp_R_unconf_1, internal.dim_I_hosp_R_unconf_12) + odin_sum3(I_hosp_R_conf, i - 1, i, 0, internal.dim_I_hosp_R_conf_2, j - 1, j, internal.dim_I_hosp_R_conf_1, internal.dim_I_hosp_R_conf_12) + odin_sum3(I_hosp_D_unconf, i - 1, i, 0, internal.dim_I_hosp_D_unconf_2, j - 1, j, internal.dim_I_hosp_D_unconf_1, internal.dim_I_hosp_D_unconf_12) + odin_sum3(I_hosp_D_conf, i - 1, i, 0, internal.dim_I_hosp_D_conf_2, j - 1, j, internal.dim_I_hosp_D_conf_1, internal.dim_I_hosp_D_conf_12)) + internal.ICU_transmission * (odin_sum3(I_ICU_R_unconf, i - 1, i, 0, internal.dim_I_ICU_R_unconf_2, j - 1, j, internal.dim_I_ICU_R_unconf_1, internal.dim_I_ICU_R_unconf_12) + odin_sum3(I_ICU_R_conf, i - 1, i, 0, internal.dim_I_ICU_R_conf_2, j - 1, j, internal.dim_I_ICU_R_conf_1, internal.dim_I_ICU_R_conf_12) + odin_sum3(I_ICU_D_unconf, i - 1, i, 0, internal.dim_I_ICU_D_unconf_2, j - 1, j, internal.dim_I_ICU_D_unconf_1, internal.dim_I_ICU_D_unconf_12) + odin_sum3(I_ICU_D_conf, i - 1, i, 0, internal.dim_I_ICU_D_conf_2, j - 1, j, internal.dim_I_ICU_D_conf_1, internal.dim_I_ICU_D_conf_12)) + internal.comm_D_transmission * odin_sum3(I_comm_D, i - 1, i, 0, internal.dim_I_comm_D_2, j - 1, j, internal.dim_I_comm_D_1, internal.dim_I_comm_D_12));
      }
    }
    for (int_t i = 1; i <= internal.dim_n_EE_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_EE_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_EE_3; ++k) {
          internal.n_EE[i - 1 + internal.dim_n_EE_1 * (j - 1) + internal.dim_n_EE_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(E[internal.dim_E_12 * (k - 1) + internal.dim_E_1 * (j - 1) + i - 1]), internal.p_EE);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_asympt_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_asympt_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_asympt_3; ++k) {
          internal.n_II_asympt[i - 1 + internal.dim_n_II_asympt_1 * (j - 1) + internal.dim_n_II_asympt_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_asympt[internal.dim_I_asympt_12 * (k - 1) + internal.dim_I_asympt_1 * (j - 1) + i - 1]), internal.p_II_asympt);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_comm_D_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_comm_D_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_comm_D_3; ++k) {
          internal.n_II_comm_D[i - 1 + internal.dim_n_II_comm_D_1 * (j - 1) + internal.dim_n_II_comm_D_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_comm_D[internal.dim_I_comm_D_12 * (k - 1) + internal.dim_I_comm_D_1 * (j - 1) + i - 1]), internal.p_II_comm_D);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_hosp_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_hosp_D_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_hosp_D_conf_3; ++k) {
          internal.n_II_hosp_D_conf[i - 1 + internal.dim_n_II_hosp_D_conf_1 * (j - 1) + internal.dim_n_II_hosp_D_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_hosp_D_conf[internal.dim_I_hosp_D_conf_12 * (k - 1) + internal.dim_I_hosp_D_conf_1 * (j - 1) + i - 1]), internal.p_II_hosp_D);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_hosp_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_hosp_D_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_hosp_D_unconf_3; ++k) {
          internal.n_II_hosp_D_unconf[i - 1 + internal.dim_n_II_hosp_D_unconf_1 * (j - 1) + internal.dim_n_II_hosp_D_unconf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_hosp_D_unconf[internal.dim_I_hosp_D_unconf_12 * (k - 1) + internal.dim_I_hosp_D_unconf_1 * (j - 1) + i - 1]), internal.p_II_hosp_D);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_hosp_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_hosp_R_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_hosp_R_conf_3; ++k) {
          internal.n_II_hosp_R_conf[i - 1 + internal.dim_n_II_hosp_R_conf_1 * (j - 1) + internal.dim_n_II_hosp_R_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_hosp_R_conf[internal.dim_I_hosp_R_conf_12 * (k - 1) + internal.dim_I_hosp_R_conf_1 * (j - 1) + i - 1]), internal.p_II_hosp_R);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_hosp_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_hosp_R_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_hosp_R_unconf_3; ++k) {
          internal.n_II_hosp_R_unconf[i - 1 + internal.dim_n_II_hosp_R_unconf_1 * (j - 1) + internal.dim_n_II_hosp_R_unconf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_hosp_R_unconf[internal.dim_I_hosp_R_unconf_12 * (k - 1) + internal.dim_I_hosp_R_unconf_1 * (j - 1) + i - 1]), internal.p_II_hosp_R);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_ICU_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_ICU_D_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_ICU_D_conf_3; ++k) {
          internal.n_II_ICU_D_conf[i - 1 + internal.dim_n_II_ICU_D_conf_1 * (j - 1) + internal.dim_n_II_ICU_D_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_ICU_D_conf[internal.dim_I_ICU_D_conf_12 * (k - 1) + internal.dim_I_ICU_D_conf_1 * (j - 1) + i - 1]), internal.p_II_ICU_D);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_ICU_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_ICU_D_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_ICU_D_unconf_3; ++k) {
          internal.n_II_ICU_D_unconf[i - 1 + internal.dim_n_II_ICU_D_unconf_1 * (j - 1) + internal.dim_n_II_ICU_D_unconf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_ICU_D_unconf[internal.dim_I_ICU_D_unconf_12 * (k - 1) + internal.dim_I_ICU_D_unconf_1 * (j - 1) + i - 1]), internal.p_II_ICU_D);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_ICU_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_ICU_R_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_ICU_R_conf_3; ++k) {
          internal.n_II_ICU_R_conf[i - 1 + internal.dim_n_II_ICU_R_conf_1 * (j - 1) + internal.dim_n_II_ICU_R_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_ICU_R_conf[internal.dim_I_ICU_R_conf_12 * (k - 1) + internal.dim_I_ICU_R_conf_1 * (j - 1) + i - 1]), internal.p_II_ICU_R);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_ICU_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_ICU_R_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_ICU_R_unconf_3; ++k) {
          internal.n_II_ICU_R_unconf[i - 1 + internal.dim_n_II_ICU_R_unconf_1 * (j - 1) + internal.dim_n_II_ICU_R_unconf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_ICU_R_unconf[internal.dim_I_ICU_R_unconf_12 * (k - 1) + internal.dim_I_ICU_R_unconf_1 * (j - 1) + i - 1]), internal.p_II_ICU_R);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_ILI_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_ILI_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_ILI_3; ++k) {
          internal.n_II_ILI[i - 1 + internal.dim_n_II_ILI_1 * (j - 1) + internal.dim_n_II_ILI_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_ILI[internal.dim_I_ILI_12 * (k - 1) + internal.dim_I_ILI_1 * (j - 1) + i - 1]), internal.p_II_ILI);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_mild_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_mild_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_mild_3; ++k) {
          internal.n_II_mild[i - 1 + internal.dim_n_II_mild_1 * (j - 1) + internal.dim_n_II_mild_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_mild[internal.dim_I_mild_12 * (k - 1) + internal.dim_I_mild_1 * (j - 1) + i - 1]), internal.p_II_mild);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_triage_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_triage_D_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_triage_D_conf_3; ++k) {
          internal.n_II_triage_D_conf[i - 1 + internal.dim_n_II_triage_D_conf_1 * (j - 1) + internal.dim_n_II_triage_D_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_triage_D_conf[internal.dim_I_triage_D_conf_12 * (k - 1) + internal.dim_I_triage_D_conf_1 * (j - 1) + i - 1]), internal.p_II_triage);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_triage_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_triage_D_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_triage_D_unconf_3; ++k) {
          internal.n_II_triage_D_unconf[i - 1 + internal.dim_n_II_triage_D_unconf_1 * (j - 1) + internal.dim_n_II_triage_D_unconf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_triage_D_unconf[internal.dim_I_triage_D_unconf_12 * (k - 1) + internal.dim_I_triage_D_unconf_1 * (j - 1) + i - 1]), internal.p_II_triage);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_triage_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_triage_R_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_triage_R_conf_3; ++k) {
          internal.n_II_triage_R_conf[i - 1 + internal.dim_n_II_triage_R_conf_1 * (j - 1) + internal.dim_n_II_triage_R_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_triage_R_conf[internal.dim_I_triage_R_conf_12 * (k - 1) + internal.dim_I_triage_R_conf_1 * (j - 1) + i - 1]), internal.p_II_triage);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_II_triage_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_II_triage_R_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_II_triage_R_unconf_3; ++k) {
          internal.n_II_triage_R_unconf[i - 1 + internal.dim_n_II_triage_R_unconf_1 * (j - 1) + internal.dim_n_II_triage_R_unconf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(I_triage_R_unconf[internal.dim_I_triage_R_unconf_12 * (k - 1) + internal.dim_I_triage_R_unconf_1 * (j - 1) + i - 1]), internal.p_II_triage);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_PCR_pos_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_PCR_pos_2; ++j) {
        internal.n_PCR_pos[i - 1 + internal.dim_n_PCR_pos_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(PCR_pos[internal.dim_PCR_pos_1 * (j - 1) + i - 1]), internal.p_PCR_pos);
      }
    }
    for (int_t i = 1; i <= internal.dim_n_R_stepdown_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_R_stepdown_conf_2; ++j) {
        internal.n_R_stepdown_conf[i - 1 + internal.dim_n_R_stepdown_conf_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(R_stepdown_conf[internal.dim_R_stepdown_conf_1 * (j - 1) + i - 1]), internal.p_R_stepdown);
      }
    }
    for (int_t i = 1; i <= internal.dim_n_R_stepdown_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_R_stepdown_unconf_2; ++j) {
        internal.n_R_stepdown_unconf[i - 1 + internal.dim_n_R_stepdown_unconf_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(R_stepdown_unconf[internal.dim_R_stepdown_unconf_1 * (j - 1) + i - 1]), internal.p_R_stepdown);
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_hosp_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_II_hosp_D_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_hosp_D_conf_3; ++k) {
          internal.aux_II_hosp_D_conf[i - 1 + internal.dim_aux_II_hosp_D_conf_1 * (j - 1) + internal.dim_aux_II_hosp_D_conf_12 * (k - 1)] = I_hosp_D_conf[internal.dim_I_hosp_D_conf_12 * (k - 1) + internal.dim_I_hosp_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_hosp_D_conf_1; ++i) {
      for (int_t j = 2; j <= internal.s_hosp_D; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_hosp_D_conf_3; ++k) {
          internal.aux_II_hosp_D_conf[i - 1 + internal.dim_aux_II_hosp_D_conf_1 * (j - 1) + internal.dim_aux_II_hosp_D_conf_12 * (k - 1)] = internal.aux_II_hosp_D_conf[internal.dim_aux_II_hosp_D_conf_12 * (k - 1) + internal.dim_aux_II_hosp_D_conf_1 * (j - 1) + i - 1] + internal.n_II_hosp_D_conf[internal.dim_n_II_hosp_D_conf_12 * (k - 1) + internal.dim_n_II_hosp_D_conf_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_hosp_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.s_hosp_D; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_hosp_D_conf_3; ++k) {
          internal.aux_II_hosp_D_conf[i - 1 + internal.dim_aux_II_hosp_D_conf_1 * (j - 1) + internal.dim_aux_II_hosp_D_conf_12 * (k - 1)] = internal.aux_II_hosp_D_conf[internal.dim_aux_II_hosp_D_conf_12 * (k - 1) + internal.dim_aux_II_hosp_D_conf_1 * (j - 1) + i - 1] - internal.n_II_hosp_D_conf[internal.dim_n_II_hosp_D_conf_12 * (k - 1) + internal.dim_n_II_hosp_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_hosp_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_II_hosp_D_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_hosp_D_unconf_3; ++k) {
          internal.aux_II_hosp_D_unconf[i - 1 + internal.dim_aux_II_hosp_D_unconf_1 * (j - 1) + internal.dim_aux_II_hosp_D_unconf_12 * (k - 1)] = I_hosp_D_unconf[internal.dim_I_hosp_D_unconf_12 * (k - 1) + internal.dim_I_hosp_D_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_hosp_D_unconf_1; ++i) {
      for (int_t j = 2; j <= internal.s_hosp_D; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_hosp_D_unconf_3; ++k) {
          internal.aux_II_hosp_D_unconf[i - 1 + internal.dim_aux_II_hosp_D_unconf_1 * (j - 1) + internal.dim_aux_II_hosp_D_unconf_12 * (k - 1)] = internal.aux_II_hosp_D_unconf[internal.dim_aux_II_hosp_D_unconf_12 * (k - 1) + internal.dim_aux_II_hosp_D_unconf_1 * (j - 1) + i - 1] + internal.n_II_hosp_D_unconf[internal.dim_n_II_hosp_D_unconf_12 * (k - 1) + internal.dim_n_II_hosp_D_unconf_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_hosp_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.s_hosp_D; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_hosp_D_unconf_3; ++k) {
          internal.aux_II_hosp_D_unconf[i - 1 + internal.dim_aux_II_hosp_D_unconf_1 * (j - 1) + internal.dim_aux_II_hosp_D_unconf_12 * (k - 1)] = internal.aux_II_hosp_D_unconf[internal.dim_aux_II_hosp_D_unconf_12 * (k - 1) + internal.dim_aux_II_hosp_D_unconf_1 * (j - 1) + i - 1] - internal.n_II_hosp_D_unconf[internal.dim_n_II_hosp_D_unconf_12 * (k - 1) + internal.dim_n_II_hosp_D_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_hosp_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_II_hosp_R_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_hosp_R_conf_3; ++k) {
          internal.aux_II_hosp_R_conf[i - 1 + internal.dim_aux_II_hosp_R_conf_1 * (j - 1) + internal.dim_aux_II_hosp_R_conf_12 * (k - 1)] = I_hosp_R_conf[internal.dim_I_hosp_R_conf_12 * (k - 1) + internal.dim_I_hosp_R_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_hosp_R_conf_1; ++i) {
      for (int_t j = 2; j <= internal.s_hosp_R; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_hosp_R_conf_3; ++k) {
          internal.aux_II_hosp_R_conf[i - 1 + internal.dim_aux_II_hosp_R_conf_1 * (j - 1) + internal.dim_aux_II_hosp_R_conf_12 * (k - 1)] = internal.aux_II_hosp_R_conf[internal.dim_aux_II_hosp_R_conf_12 * (k - 1) + internal.dim_aux_II_hosp_R_conf_1 * (j - 1) + i - 1] + internal.n_II_hosp_R_conf[internal.dim_n_II_hosp_R_conf_12 * (k - 1) + internal.dim_n_II_hosp_R_conf_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_hosp_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.s_hosp_R; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_hosp_R_conf_3; ++k) {
          internal.aux_II_hosp_R_conf[i - 1 + internal.dim_aux_II_hosp_R_conf_1 * (j - 1) + internal.dim_aux_II_hosp_R_conf_12 * (k - 1)] = internal.aux_II_hosp_R_conf[internal.dim_aux_II_hosp_R_conf_12 * (k - 1) + internal.dim_aux_II_hosp_R_conf_1 * (j - 1) + i - 1] - internal.n_II_hosp_R_conf[internal.dim_n_II_hosp_R_conf_12 * (k - 1) + internal.dim_n_II_hosp_R_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_hosp_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_II_hosp_R_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_hosp_R_unconf_3; ++k) {
          internal.aux_II_hosp_R_unconf[i - 1 + internal.dim_aux_II_hosp_R_unconf_1 * (j - 1) + internal.dim_aux_II_hosp_R_unconf_12 * (k - 1)] = I_hosp_R_unconf[internal.dim_I_hosp_R_unconf_12 * (k - 1) + internal.dim_I_hosp_R_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_hosp_R_unconf_1; ++i) {
      for (int_t j = 2; j <= internal.s_hosp_R; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_hosp_R_unconf_3; ++k) {
          internal.aux_II_hosp_R_unconf[i - 1 + internal.dim_aux_II_hosp_R_unconf_1 * (j - 1) + internal.dim_aux_II_hosp_R_unconf_12 * (k - 1)] = internal.aux_II_hosp_R_unconf[internal.dim_aux_II_hosp_R_unconf_12 * (k - 1) + internal.dim_aux_II_hosp_R_unconf_1 * (j - 1) + i - 1] + internal.n_II_hosp_R_unconf[internal.dim_n_II_hosp_R_unconf_12 * (k - 1) + internal.dim_n_II_hosp_R_unconf_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_hosp_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.s_hosp_R; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_hosp_R_unconf_3; ++k) {
          internal.aux_II_hosp_R_unconf[i - 1 + internal.dim_aux_II_hosp_R_unconf_1 * (j - 1) + internal.dim_aux_II_hosp_R_unconf_12 * (k - 1)] = internal.aux_II_hosp_R_unconf[internal.dim_aux_II_hosp_R_unconf_12 * (k - 1) + internal.dim_aux_II_hosp_R_unconf_1 * (j - 1) + i - 1] - internal.n_II_hosp_R_unconf[internal.dim_n_II_hosp_R_unconf_12 * (k - 1) + internal.dim_n_II_hosp_R_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_II_ICU_D_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ICU_D_conf_3; ++k) {
          internal.aux_II_ICU_D_conf[i - 1 + internal.dim_aux_II_ICU_D_conf_1 * (j - 1) + internal.dim_aux_II_ICU_D_conf_12 * (k - 1)] = I_ICU_D_conf[internal.dim_I_ICU_D_conf_12 * (k - 1) + internal.dim_I_ICU_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_D_conf_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_aux_II_ICU_D_conf_3; ++k) {
        internal.aux_II_ICU_D_conf[i - 1 + internal.dim_aux_II_ICU_D_conf_1 * (j - 1) + internal.dim_aux_II_ICU_D_conf_12 * (k - 1)] = internal.aux_II_ICU_D_conf[internal.dim_aux_II_ICU_D_conf_12 * (k - 1) + internal.dim_aux_II_ICU_D_conf_1 * (j - 1) + i - 1] + internal.n_II_triage_D_conf[internal.dim_n_II_triage_D_conf_12 * (k - 1) + internal.dim_n_II_triage_D_conf_1 * (internal.s_triage - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_D_conf_1; ++i) {
      for (int_t j = 2; j <= internal.s_ICU_D; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ICU_D_conf_3; ++k) {
          internal.aux_II_ICU_D_conf[i - 1 + internal.dim_aux_II_ICU_D_conf_1 * (j - 1) + internal.dim_aux_II_ICU_D_conf_12 * (k - 1)] = internal.aux_II_ICU_D_conf[internal.dim_aux_II_ICU_D_conf_12 * (k - 1) + internal.dim_aux_II_ICU_D_conf_1 * (j - 1) + i - 1] + internal.n_II_ICU_D_conf[internal.dim_n_II_ICU_D_conf_12 * (k - 1) + internal.dim_n_II_ICU_D_conf_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.s_ICU_D; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ICU_D_conf_3; ++k) {
          internal.aux_II_ICU_D_conf[i - 1 + internal.dim_aux_II_ICU_D_conf_1 * (j - 1) + internal.dim_aux_II_ICU_D_conf_12 * (k - 1)] = internal.aux_II_ICU_D_conf[internal.dim_aux_II_ICU_D_conf_12 * (k - 1) + internal.dim_aux_II_ICU_D_conf_1 * (j - 1) + i - 1] - internal.n_II_ICU_D_conf[internal.dim_n_II_ICU_D_conf_12 * (k - 1) + internal.dim_n_II_ICU_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_II_ICU_D_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ICU_D_unconf_3; ++k) {
          internal.aux_II_ICU_D_unconf[i - 1 + internal.dim_aux_II_ICU_D_unconf_1 * (j - 1) + internal.dim_aux_II_ICU_D_unconf_12 * (k - 1)] = I_ICU_D_unconf[internal.dim_I_ICU_D_unconf_12 * (k - 1) + internal.dim_I_ICU_D_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_D_unconf_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_aux_II_ICU_D_unconf_3; ++k) {
        internal.aux_II_ICU_D_unconf[i - 1 + internal.dim_aux_II_ICU_D_unconf_1 * (j - 1) + internal.dim_aux_II_ICU_D_unconf_12 * (k - 1)] = internal.aux_II_ICU_D_unconf[internal.dim_aux_II_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_II_ICU_D_unconf_1 * (j - 1) + i - 1] + internal.n_II_triage_D_unconf[internal.dim_n_II_triage_D_unconf_12 * (k - 1) + internal.dim_n_II_triage_D_unconf_1 * (internal.s_triage - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_D_unconf_1; ++i) {
      for (int_t j = 2; j <= internal.s_ICU_D; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ICU_D_unconf_3; ++k) {
          internal.aux_II_ICU_D_unconf[i - 1 + internal.dim_aux_II_ICU_D_unconf_1 * (j - 1) + internal.dim_aux_II_ICU_D_unconf_12 * (k - 1)] = internal.aux_II_ICU_D_unconf[internal.dim_aux_II_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_II_ICU_D_unconf_1 * (j - 1) + i - 1] + internal.n_II_ICU_D_unconf[internal.dim_n_II_ICU_D_unconf_12 * (k - 1) + internal.dim_n_II_ICU_D_unconf_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.s_ICU_D; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ICU_D_unconf_3; ++k) {
          internal.aux_II_ICU_D_unconf[i - 1 + internal.dim_aux_II_ICU_D_unconf_1 * (j - 1) + internal.dim_aux_II_ICU_D_unconf_12 * (k - 1)] = internal.aux_II_ICU_D_unconf[internal.dim_aux_II_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_II_ICU_D_unconf_1 * (j - 1) + i - 1] - internal.n_II_ICU_D_unconf[internal.dim_n_II_ICU_D_unconf_12 * (k - 1) + internal.dim_n_II_ICU_D_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_II_ICU_R_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ICU_R_conf_3; ++k) {
          internal.aux_II_ICU_R_conf[i - 1 + internal.dim_aux_II_ICU_R_conf_1 * (j - 1) + internal.dim_aux_II_ICU_R_conf_12 * (k - 1)] = I_ICU_R_conf[internal.dim_I_ICU_R_conf_12 * (k - 1) + internal.dim_I_ICU_R_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_R_conf_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_aux_II_ICU_R_conf_3; ++k) {
        internal.aux_II_ICU_R_conf[i - 1 + internal.dim_aux_II_ICU_R_conf_1 * (j - 1) + internal.dim_aux_II_ICU_R_conf_12 * (k - 1)] = internal.aux_II_ICU_R_conf[internal.dim_aux_II_ICU_R_conf_12 * (k - 1) + internal.dim_aux_II_ICU_R_conf_1 * (j - 1) + i - 1] + internal.n_II_triage_R_conf[internal.dim_n_II_triage_R_conf_12 * (k - 1) + internal.dim_n_II_triage_R_conf_1 * (internal.s_triage - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_R_conf_1; ++i) {
      for (int_t j = 2; j <= internal.s_ICU_R; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ICU_R_conf_3; ++k) {
          internal.aux_II_ICU_R_conf[i - 1 + internal.dim_aux_II_ICU_R_conf_1 * (j - 1) + internal.dim_aux_II_ICU_R_conf_12 * (k - 1)] = internal.aux_II_ICU_R_conf[internal.dim_aux_II_ICU_R_conf_12 * (k - 1) + internal.dim_aux_II_ICU_R_conf_1 * (j - 1) + i - 1] + internal.n_II_ICU_R_conf[internal.dim_n_II_ICU_R_conf_12 * (k - 1) + internal.dim_n_II_ICU_R_conf_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.s_ICU_R; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ICU_R_conf_3; ++k) {
          internal.aux_II_ICU_R_conf[i - 1 + internal.dim_aux_II_ICU_R_conf_1 * (j - 1) + internal.dim_aux_II_ICU_R_conf_12 * (k - 1)] = internal.aux_II_ICU_R_conf[internal.dim_aux_II_ICU_R_conf_12 * (k - 1) + internal.dim_aux_II_ICU_R_conf_1 * (j - 1) + i - 1] - internal.n_II_ICU_R_conf[internal.dim_n_II_ICU_R_conf_12 * (k - 1) + internal.dim_n_II_ICU_R_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_II_ICU_R_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ICU_R_unconf_3; ++k) {
          internal.aux_II_ICU_R_unconf[i - 1 + internal.dim_aux_II_ICU_R_unconf_1 * (j - 1) + internal.dim_aux_II_ICU_R_unconf_12 * (k - 1)] = I_ICU_R_unconf[internal.dim_I_ICU_R_unconf_12 * (k - 1) + internal.dim_I_ICU_R_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_R_unconf_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_aux_II_ICU_R_unconf_3; ++k) {
        internal.aux_II_ICU_R_unconf[i - 1 + internal.dim_aux_II_ICU_R_unconf_1 * (j - 1) + internal.dim_aux_II_ICU_R_unconf_12 * (k - 1)] = internal.aux_II_ICU_R_unconf[internal.dim_aux_II_ICU_R_unconf_12 * (k - 1) + internal.dim_aux_II_ICU_R_unconf_1 * (j - 1) + i - 1] + internal.n_II_triage_R_unconf[internal.dim_n_II_triage_R_unconf_12 * (k - 1) + internal.dim_n_II_triage_R_unconf_1 * (internal.s_triage - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_R_unconf_1; ++i) {
      for (int_t j = 2; j <= internal.s_ICU_R; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ICU_R_unconf_3; ++k) {
          internal.aux_II_ICU_R_unconf[i - 1 + internal.dim_aux_II_ICU_R_unconf_1 * (j - 1) + internal.dim_aux_II_ICU_R_unconf_12 * (k - 1)] = internal.aux_II_ICU_R_unconf[internal.dim_aux_II_ICU_R_unconf_12 * (k - 1) + internal.dim_aux_II_ICU_R_unconf_1 * (j - 1) + i - 1] + internal.n_II_ICU_R_unconf[internal.dim_n_II_ICU_R_unconf_12 * (k - 1) + internal.dim_n_II_ICU_R_unconf_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ICU_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.s_ICU_R; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ICU_R_unconf_3; ++k) {
          internal.aux_II_ICU_R_unconf[i - 1 + internal.dim_aux_II_ICU_R_unconf_1 * (j - 1) + internal.dim_aux_II_ICU_R_unconf_12 * (k - 1)] = internal.aux_II_ICU_R_unconf[internal.dim_aux_II_ICU_R_unconf_12 * (k - 1) + internal.dim_aux_II_ICU_R_unconf_1 * (j - 1) + i - 1] - internal.n_II_ICU_R_unconf[internal.dim_n_II_ICU_R_unconf_12 * (k - 1) + internal.dim_n_II_ICU_R_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_triage_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_II_triage_D_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_triage_D_conf_3; ++k) {
          internal.aux_II_triage_D_conf[i - 1 + internal.dim_aux_II_triage_D_conf_1 * (j - 1) + internal.dim_aux_II_triage_D_conf_12 * (k - 1)] = I_triage_D_conf[internal.dim_I_triage_D_conf_12 * (k - 1) + internal.dim_I_triage_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_triage_D_conf_1; ++i) {
      for (int_t j = 2; j <= internal.s_triage; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_triage_D_conf_3; ++k) {
          internal.aux_II_triage_D_conf[i - 1 + internal.dim_aux_II_triage_D_conf_1 * (j - 1) + internal.dim_aux_II_triage_D_conf_12 * (k - 1)] = internal.aux_II_triage_D_conf[internal.dim_aux_II_triage_D_conf_12 * (k - 1) + internal.dim_aux_II_triage_D_conf_1 * (j - 1) + i - 1] + internal.n_II_triage_D_conf[internal.dim_n_II_triage_D_conf_12 * (k - 1) + internal.dim_n_II_triage_D_conf_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_triage_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.s_triage; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_triage_D_conf_3; ++k) {
          internal.aux_II_triage_D_conf[i - 1 + internal.dim_aux_II_triage_D_conf_1 * (j - 1) + internal.dim_aux_II_triage_D_conf_12 * (k - 1)] = internal.aux_II_triage_D_conf[internal.dim_aux_II_triage_D_conf_12 * (k - 1) + internal.dim_aux_II_triage_D_conf_1 * (j - 1) + i - 1] - internal.n_II_triage_D_conf[internal.dim_n_II_triage_D_conf_12 * (k - 1) + internal.dim_n_II_triage_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_triage_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_II_triage_D_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_triage_D_unconf_3; ++k) {
          internal.aux_II_triage_D_unconf[i - 1 + internal.dim_aux_II_triage_D_unconf_1 * (j - 1) + internal.dim_aux_II_triage_D_unconf_12 * (k - 1)] = I_triage_D_unconf[internal.dim_I_triage_D_unconf_12 * (k - 1) + internal.dim_I_triage_D_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_triage_D_unconf_1; ++i) {
      for (int_t j = 2; j <= internal.s_triage; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_triage_D_unconf_3; ++k) {
          internal.aux_II_triage_D_unconf[i - 1 + internal.dim_aux_II_triage_D_unconf_1 * (j - 1) + internal.dim_aux_II_triage_D_unconf_12 * (k - 1)] = internal.aux_II_triage_D_unconf[internal.dim_aux_II_triage_D_unconf_12 * (k - 1) + internal.dim_aux_II_triage_D_unconf_1 * (j - 1) + i - 1] + internal.n_II_triage_D_unconf[internal.dim_n_II_triage_D_unconf_12 * (k - 1) + internal.dim_n_II_triage_D_unconf_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_triage_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.s_triage; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_triage_D_unconf_3; ++k) {
          internal.aux_II_triage_D_unconf[i - 1 + internal.dim_aux_II_triage_D_unconf_1 * (j - 1) + internal.dim_aux_II_triage_D_unconf_12 * (k - 1)] = internal.aux_II_triage_D_unconf[internal.dim_aux_II_triage_D_unconf_12 * (k - 1) + internal.dim_aux_II_triage_D_unconf_1 * (j - 1) + i - 1] - internal.n_II_triage_D_unconf[internal.dim_n_II_triage_D_unconf_12 * (k - 1) + internal.dim_n_II_triage_D_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_triage_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_II_triage_R_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_triage_R_conf_3; ++k) {
          internal.aux_II_triage_R_conf[i - 1 + internal.dim_aux_II_triage_R_conf_1 * (j - 1) + internal.dim_aux_II_triage_R_conf_12 * (k - 1)] = I_triage_R_conf[internal.dim_I_triage_R_conf_12 * (k - 1) + internal.dim_I_triage_R_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_triage_R_conf_1; ++i) {
      for (int_t j = 2; j <= internal.s_triage; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_triage_R_conf_3; ++k) {
          internal.aux_II_triage_R_conf[i - 1 + internal.dim_aux_II_triage_R_conf_1 * (j - 1) + internal.dim_aux_II_triage_R_conf_12 * (k - 1)] = internal.aux_II_triage_R_conf[internal.dim_aux_II_triage_R_conf_12 * (k - 1) + internal.dim_aux_II_triage_R_conf_1 * (j - 1) + i - 1] + internal.n_II_triage_R_conf[internal.dim_n_II_triage_R_conf_12 * (k - 1) + internal.dim_n_II_triage_R_conf_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_triage_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.s_triage; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_triage_R_conf_3; ++k) {
          internal.aux_II_triage_R_conf[i - 1 + internal.dim_aux_II_triage_R_conf_1 * (j - 1) + internal.dim_aux_II_triage_R_conf_12 * (k - 1)] = internal.aux_II_triage_R_conf[internal.dim_aux_II_triage_R_conf_12 * (k - 1) + internal.dim_aux_II_triage_R_conf_1 * (j - 1) + i - 1] - internal.n_II_triage_R_conf[internal.dim_n_II_triage_R_conf_12 * (k - 1) + internal.dim_n_II_triage_R_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_triage_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_II_triage_R_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_triage_R_unconf_3; ++k) {
          internal.aux_II_triage_R_unconf[i - 1 + internal.dim_aux_II_triage_R_unconf_1 * (j - 1) + internal.dim_aux_II_triage_R_unconf_12 * (k - 1)] = I_triage_R_unconf[internal.dim_I_triage_R_unconf_12 * (k - 1) + internal.dim_I_triage_R_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_triage_R_unconf_1; ++i) {
      for (int_t j = 2; j <= internal.s_triage; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_triage_R_unconf_3; ++k) {
          internal.aux_II_triage_R_unconf[i - 1 + internal.dim_aux_II_triage_R_unconf_1 * (j - 1) + internal.dim_aux_II_triage_R_unconf_12 * (k - 1)] = internal.aux_II_triage_R_unconf[internal.dim_aux_II_triage_R_unconf_12 * (k - 1) + internal.dim_aux_II_triage_R_unconf_1 * (j - 1) + i - 1] + internal.n_II_triage_R_unconf[internal.dim_n_II_triage_R_unconf_12 * (k - 1) + internal.dim_n_II_triage_R_unconf_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_triage_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.s_triage; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_triage_R_unconf_3; ++k) {
          internal.aux_II_triage_R_unconf[i - 1 + internal.dim_aux_II_triage_R_unconf_1 * (j - 1) + internal.dim_aux_II_triage_R_unconf_12 * (k - 1)] = internal.aux_II_triage_R_unconf[internal.dim_aux_II_triage_R_unconf_12 * (k - 1) + internal.dim_aux_II_triage_R_unconf_1 * (j - 1) + i - 1] - internal.n_II_triage_R_unconf[internal.dim_n_II_triage_R_unconf_12 * (k - 1) + internal.dim_n_II_triage_R_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_R_stepdown_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_R_stepdown_conf_2; ++j) {
        internal.aux_R_stepdown_conf[i - 1 + internal.dim_aux_R_stepdown_conf_1 * (j - 1)] = R_stepdown_conf[internal.dim_R_stepdown_conf_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_R_stepdown_conf_1; ++i) {
      int_t j = 1;
      internal.aux_R_stepdown_conf[i - 1 + internal.dim_aux_R_stepdown_conf_1 * (j - 1)] = internal.aux_R_stepdown_conf[internal.dim_aux_R_stepdown_conf_1 * (j - 1) + i - 1] + odin_sum3(internal.n_II_ICU_R_conf.data(), i - 1, i, internal.s_ICU_R - 1, internal.s_ICU_R, 0, internal.dim_n_II_ICU_R_conf_3, internal.dim_n_II_ICU_R_conf_1, internal.dim_n_II_ICU_R_conf_12);
    }
    for (int_t i = 1; i <= internal.dim_aux_R_stepdown_conf_1; ++i) {
      for (int_t j = 2; j <= internal.s_stepdown; ++j) {
        internal.aux_R_stepdown_conf[i - 1 + internal.dim_aux_R_stepdown_conf_1 * (j - 1)] = internal.aux_R_stepdown_conf[internal.dim_aux_R_stepdown_conf_1 * (j - 1) + i - 1] + internal.n_R_stepdown_conf[internal.dim_n_R_stepdown_conf_1 * (j - 1 - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_R_stepdown_conf_1; ++i) {
      for (int_t j = 1; j <= internal.s_stepdown; ++j) {
        internal.aux_R_stepdown_conf[i - 1 + internal.dim_aux_R_stepdown_conf_1 * (j - 1)] = internal.aux_R_stepdown_conf[internal.dim_aux_R_stepdown_conf_1 * (j - 1) + i - 1] - internal.n_R_stepdown_conf[internal.dim_n_R_stepdown_conf_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_R_stepdown_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_aux_R_stepdown_unconf_2; ++j) {
        internal.aux_R_stepdown_unconf[i - 1 + internal.dim_aux_R_stepdown_unconf_1 * (j - 1)] = R_stepdown_unconf[internal.dim_R_stepdown_unconf_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_R_stepdown_unconf_1; ++i) {
      int_t j = 1;
      internal.aux_R_stepdown_unconf[i - 1 + internal.dim_aux_R_stepdown_unconf_1 * (j - 1)] = internal.aux_R_stepdown_unconf[internal.dim_aux_R_stepdown_unconf_1 * (j - 1) + i - 1] + odin_sum3(internal.n_II_ICU_R_unconf.data(), i - 1, i, internal.s_ICU_R - 1, internal.s_ICU_R, 0, internal.dim_n_II_ICU_R_unconf_3, internal.dim_n_II_ICU_R_unconf_1, internal.dim_n_II_ICU_R_unconf_12);
    }
    for (int_t i = 1; i <= internal.dim_aux_R_stepdown_unconf_1; ++i) {
      for (int_t j = 2; j <= internal.s_stepdown; ++j) {
        internal.aux_R_stepdown_unconf[i - 1 + internal.dim_aux_R_stepdown_unconf_1 * (j - 1)] = internal.aux_R_stepdown_unconf[internal.dim_aux_R_stepdown_unconf_1 * (j - 1) + i - 1] + internal.n_R_stepdown_unconf[internal.dim_n_R_stepdown_unconf_1 * (j - 1 - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_R_stepdown_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.s_stepdown; ++j) {
        internal.aux_R_stepdown_unconf[i - 1 + internal.dim_aux_R_stepdown_unconf_1 * (j - 1)] = internal.aux_R_stepdown_unconf[internal.dim_aux_R_stepdown_unconf_1 * (j - 1) + i - 1] - internal.n_R_stepdown_unconf[internal.dim_n_R_stepdown_unconf_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_delta_D_comm; ++i) {
      internal.delta_D_comm[i - 1] = odin_sum3(internal.n_II_comm_D.data(), i - 1, i, internal.s_comm_D - 1, internal.s_comm_D, 0, internal.dim_n_II_comm_D_3, internal.dim_n_II_comm_D_1, internal.dim_n_II_comm_D_12);
    }
    for (int_t i = 1; i <= internal.dim_delta_D_hosp; ++i) {
      internal.delta_D_hosp[i - 1] = odin_sum3(internal.n_II_hosp_D_unconf.data(), i - 1, i, internal.s_hosp_D - 1, internal.s_hosp_D, 0, internal.dim_n_II_hosp_D_unconf_3, internal.dim_n_II_hosp_D_unconf_1, internal.dim_n_II_hosp_D_unconf_12) + odin_sum3(internal.n_II_hosp_D_conf.data(), i - 1, i, internal.s_hosp_D - 1, internal.s_hosp_D, 0, internal.dim_n_II_hosp_D_conf_3, internal.dim_n_II_hosp_D_conf_1, internal.dim_n_II_hosp_D_conf_12) + odin_sum3(internal.n_II_ICU_D_unconf.data(), i - 1, i, internal.s_ICU_D - 1, internal.s_ICU_D, 0, internal.dim_n_II_ICU_D_unconf_3, internal.dim_n_II_ICU_D_unconf_1, internal.dim_n_II_ICU_D_unconf_12) + odin_sum3(internal.n_II_ICU_D_conf.data(), i - 1, i, internal.s_ICU_D - 1, internal.s_ICU_D, 0, internal.dim_n_II_ICU_D_conf_3, internal.dim_n_II_ICU_D_conf_1, internal.dim_n_II_ICU_D_conf_12);
    }
    for (int_t i = 1; i <= internal.dim_n_com_to_R_pre_1; ++i) {
      int_t j = 1;
      internal.n_com_to_R_pre[i - 1 + internal.dim_n_com_to_R_pre_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(odin_sum3(internal.n_EE.data(), i - 1, i, internal.s_E - 1, internal.s_E, 0, internal.dim_n_EE_3, internal.dim_n_EE_1, internal.dim_n_EE_12)), internal.p_R_pre_1);
    }
    for (int_t i = 1; i <= internal.dim_n_com_to_R_pre_1; ++i) {
      int_t j = 2;
      internal.n_com_to_R_pre[i - 1 + internal.dim_n_com_to_R_pre_1 * (j - 1)] = odin_sum3(internal.n_EE.data(), i - 1, i, internal.s_E - 1, internal.s_E, 0, internal.dim_n_EE_3, internal.dim_n_EE_1, internal.dim_n_EE_12) - internal.n_com_to_R_pre[internal.dim_n_com_to_R_pre_1 * 0 + i - 1];
    }
    for (int_t i = 1; i <= internal.dim_n_EI_asympt_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_EI_asympt_2; ++j) {
        internal.n_EI_asympt[i - 1 + internal.dim_n_EI_asympt_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_EE[internal.dim_n_EE_12 * (j - 1) + internal.dim_n_EE_1 * (internal.s_E - 1) + i - 1]), internal.p_asympt[i - 1]);
      }
    }
    for (int_t i = 1; i <= internal.dim_n_ILI_to_R_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_ILI_to_R_2; ++j) {
        internal.n_ILI_to_R[i - 1 + internal.dim_n_ILI_to_R_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_II_ILI[internal.dim_n_II_ILI_12 * (j - 1) + internal.dim_n_II_ILI_1 * (internal.s_ILI - 1) + i - 1]), 1 - internal.p_hosp_ILI[i - 1]);
      }
    }
    for (int_t i = 1; i <= internal.dim_n_R_pre_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_R_pre_2; ++j) {
        internal.n_R_pre[i - 1 + internal.dim_n_R_pre_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(R_pre[internal.dim_R_pre_1 * (j - 1) + i - 1]), internal.p_R_pre[internal.dim_p_R_pre_1 * (j - 1) + i - 1]);
      }
    }
    for (int_t i = 1; i <= internal.dim_s_ij_1; ++i) {
      for (int_t j = 1; j <= internal.dim_s_ij_2; ++j) {
        internal.s_ij[i - 1 + internal.dim_s_ij_1 * (j - 1)] = internal.m[internal.dim_m_1 * (j - 1) + i - 1] * odin_sum2(internal.I_with_diff_trans.data(), j - 1, j, 0, internal.dim_I_with_diff_trans_2, internal.dim_I_with_diff_trans_1);
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_asympt_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_aux_II_asympt_3; ++k) {
        internal.aux_II_asympt[i - 1 + internal.dim_aux_II_asympt_1 * (j - 1) + internal.dim_aux_II_asympt_12 * (k - 1)] = internal.n_EI_asympt[internal.dim_n_EI_asympt_1 * (k - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_asympt_1; ++i) {
      for (int_t j = 2; j <= internal.s_asympt; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_asympt_3; ++k) {
          internal.aux_II_asympt[i - 1 + internal.dim_aux_II_asympt_1 * (j - 1) + internal.dim_aux_II_asympt_12 * (k - 1)] = internal.n_II_asympt[internal.dim_n_II_asympt_12 * (k - 1) + internal.dim_n_II_asympt_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_asympt_1; ++i) {
      for (int_t j = 1; j <= internal.s_asympt; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_asympt_3; ++k) {
          internal.aux_II_asympt[i - 1 + internal.dim_aux_II_asympt_1 * (j - 1) + internal.dim_aux_II_asympt_12 * (k - 1)] = internal.aux_II_asympt[internal.dim_aux_II_asympt_12 * (k - 1) + internal.dim_aux_II_asympt_1 * (j - 1) + i - 1] - internal.n_II_asympt[internal.dim_n_II_asympt_12 * (k - 1) + internal.dim_n_II_asympt_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_delta_R; ++i) {
      internal.delta_R[i - 1] = odin_sum3(internal.n_II_asympt.data(), i - 1, i, internal.s_asympt - 1, internal.s_asympt, 0, internal.dim_n_II_asympt_3, internal.dim_n_II_asympt_1, internal.dim_n_II_asympt_12) + odin_sum3(internal.n_II_mild.data(), i - 1, i, internal.s_mild - 1, internal.s_mild, 0, internal.dim_n_II_mild_3, internal.dim_n_II_mild_1, internal.dim_n_II_mild_12) + odin_sum2(internal.n_ILI_to_R.data(), i - 1, i, 0, internal.dim_n_ILI_to_R_2, internal.dim_n_ILI_to_R_1) + odin_sum3(internal.n_II_hosp_R_conf.data(), i - 1, i, internal.s_hosp_R - 1, internal.s_hosp_R, 0, internal.dim_n_II_hosp_R_conf_3, internal.dim_n_II_hosp_R_conf_1, internal.dim_n_II_hosp_R_conf_12) + odin_sum3(internal.n_II_hosp_R_unconf.data(), i - 1, i, internal.s_hosp_R - 1, internal.s_hosp_R, 0, internal.dim_n_II_hosp_R_unconf_3, internal.dim_n_II_hosp_R_unconf_1, internal.dim_n_II_hosp_R_unconf_12) + odin_sum2(internal.n_R_stepdown_conf.data(), i - 1, i, internal.s_stepdown - 1, internal.s_stepdown, internal.dim_n_R_stepdown_conf_1) + odin_sum2(internal.n_R_stepdown_unconf.data(), i - 1, i, internal.s_stepdown - 1, internal.s_stepdown, internal.dim_n_R_stepdown_unconf_1);
    }
    for (int_t i = 1; i <= internal.dim_delta_R_pos; ++i) {
      internal.delta_R_pos[i - 1] = dust::distr::rbinom(rng_state, std::round(odin_sum2(internal.n_R_pre.data(), i - 1, i, 0, internal.dim_n_R_pre_2, internal.dim_n_R_pre_1)), internal.p_seroconversion[i - 1]);
    }
    for (int_t i = 1; i <= internal.dim_lambda; ++i) {
      internal.lambda[i - 1] = beta * odin_sum2(internal.s_ij.data(), i - 1, i, 0, internal.dim_s_ij_2, internal.dim_s_ij_1) + internal.psi * importation / (real_t) N_tot2;
    }
    for (int_t i = 1; i <= internal.dim_n_EI_mild_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_EI_mild_2; ++j) {
        internal.n_EI_mild[i - 1 + internal.dim_n_EI_mild_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_EE[internal.dim_n_EE_12 * (j - 1) + internal.dim_n_EE_1 * (internal.s_E - 1) + i - 1] - internal.n_EI_asympt[internal.dim_n_EI_asympt_1 * (j - 1) + i - 1]), 1 - internal.p_sympt_ILI[i - 1]);
      }
    }
    for (int_t i = 1; i <= internal.dim_n_I_hosp_D_unconf_to_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_I_hosp_D_unconf_to_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_I_hosp_D_unconf_to_conf_3; ++k) {
          internal.n_I_hosp_D_unconf_to_conf[i - 1 + internal.dim_n_I_hosp_D_unconf_to_conf_1 * (j - 1) + internal.dim_n_I_hosp_D_unconf_to_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_II_hosp_D_unconf[internal.dim_aux_II_hosp_D_unconf_12 * (k - 1) + internal.dim_aux_II_hosp_D_unconf_1 * (j - 1) + i - 1]), internal.p_test);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_I_hosp_R_unconf_to_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_I_hosp_R_unconf_to_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_I_hosp_R_unconf_to_conf_3; ++k) {
          internal.n_I_hosp_R_unconf_to_conf[i - 1 + internal.dim_n_I_hosp_R_unconf_to_conf_1 * (j - 1) + internal.dim_n_I_hosp_R_unconf_to_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_II_hosp_R_unconf[internal.dim_aux_II_hosp_R_unconf_12 * (k - 1) + internal.dim_aux_II_hosp_R_unconf_1 * (j - 1) + i - 1]), internal.p_test);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_I_ICU_D_unconf_to_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_I_ICU_D_unconf_to_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_I_ICU_D_unconf_to_conf_3; ++k) {
          internal.n_I_ICU_D_unconf_to_conf[i - 1 + internal.dim_n_I_ICU_D_unconf_to_conf_1 * (j - 1) + internal.dim_n_I_ICU_D_unconf_to_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_II_ICU_D_unconf[internal.dim_aux_II_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_II_ICU_D_unconf_1 * (j - 1) + i - 1]), internal.p_test);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_I_ICU_R_unconf_to_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_I_ICU_R_unconf_to_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_I_ICU_R_unconf_to_conf_3; ++k) {
          internal.n_I_ICU_R_unconf_to_conf[i - 1 + internal.dim_n_I_ICU_R_unconf_to_conf_1 * (j - 1) + internal.dim_n_I_ICU_R_unconf_to_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_II_ICU_R_unconf[internal.dim_aux_II_ICU_R_unconf_12 * (k - 1) + internal.dim_aux_II_ICU_R_unconf_1 * (j - 1) + i - 1]), internal.p_test);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_I_triage_D_unconf_to_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_I_triage_D_unconf_to_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_I_triage_D_unconf_to_conf_3; ++k) {
          internal.n_I_triage_D_unconf_to_conf[i - 1 + internal.dim_n_I_triage_D_unconf_to_conf_1 * (j - 1) + internal.dim_n_I_triage_D_unconf_to_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_II_triage_D_unconf[internal.dim_aux_II_triage_D_unconf_12 * (k - 1) + internal.dim_aux_II_triage_D_unconf_1 * (j - 1) + i - 1]), internal.p_test);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_I_triage_R_unconf_to_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_I_triage_R_unconf_to_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_n_I_triage_R_unconf_to_conf_3; ++k) {
          internal.n_I_triage_R_unconf_to_conf[i - 1 + internal.dim_n_I_triage_R_unconf_to_conf_1 * (j - 1) + internal.dim_n_I_triage_R_unconf_to_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_II_triage_R_unconf[internal.dim_aux_II_triage_R_unconf_12 * (k - 1) + internal.dim_aux_II_triage_R_unconf_1 * (j - 1) + i - 1]), internal.p_test);
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_ILI_to_comm_D_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_ILI_to_comm_D_2; ++j) {
        internal.n_ILI_to_comm_D[i - 1 + internal.dim_n_ILI_to_comm_D_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_II_ILI[internal.dim_n_II_ILI_12 * (j - 1) + internal.dim_n_II_ILI_1 * (internal.s_ILI - 1) + i - 1] - internal.n_ILI_to_R[internal.dim_n_ILI_to_R_1 * (j - 1) + i - 1]), internal.p_death_comm[i - 1]);
      }
    }
    for (int_t i = 1; i <= internal.dim_n_R_stepdown_unconf_to_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_R_stepdown_unconf_to_conf_2; ++j) {
        internal.n_R_stepdown_unconf_to_conf[i - 1 + internal.dim_n_R_stepdown_unconf_to_conf_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_R_stepdown_unconf[internal.dim_aux_R_stepdown_unconf_1 * (j - 1) + i - 1]), internal.p_test);
      }
    }
    for (int_t i = 1; i <= internal.dim_D_comm; ++i) {
      state_next[internal.offset_variable_D_comm + i - 1] = D_comm[i - 1] + internal.delta_D_comm[i - 1];
    }
    for (int_t i = 1; i <= internal.dim_D_hosp; ++i) {
      state_next[internal.offset_variable_D_hosp + i - 1] = D_hosp[i - 1] + internal.delta_D_hosp[i - 1];
    }
    for (int_t i = 1; i <= internal.dim_R_pre_1; ++i) {
      for (int_t j = 1; j <= internal.dim_R_pre_2; ++j) {
        state_next[internal.offset_variable_R_pre + i - 1 + internal.dim_R_pre_1 * (j - 1)] = R_pre[internal.dim_R_pre_1 * (j - 1) + i - 1] + internal.n_com_to_R_pre[internal.dim_n_com_to_R_pre_1 * (j - 1) + i - 1] - internal.n_R_pre[internal.dim_n_R_pre_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_comm_D_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_aux_II_comm_D_3; ++k) {
        internal.aux_II_comm_D[i - 1 + internal.dim_aux_II_comm_D_1 * (j - 1) + internal.dim_aux_II_comm_D_12 * (k - 1)] = internal.n_ILI_to_comm_D[internal.dim_n_ILI_to_comm_D_1 * (k - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_comm_D_1; ++i) {
      for (int_t j = 2; j <= internal.s_comm_D; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_comm_D_3; ++k) {
          internal.aux_II_comm_D[i - 1 + internal.dim_aux_II_comm_D_1 * (j - 1) + internal.dim_aux_II_comm_D_12 * (k - 1)] = internal.n_II_comm_D[internal.dim_n_II_comm_D_12 * (k - 1) + internal.dim_n_II_comm_D_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_comm_D_1; ++i) {
      for (int_t j = 1; j <= internal.s_comm_D; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_comm_D_3; ++k) {
          internal.aux_II_comm_D[i - 1 + internal.dim_aux_II_comm_D_1 * (j - 1) + internal.dim_aux_II_comm_D_12 * (k - 1)] = internal.aux_II_comm_D[internal.dim_aux_II_comm_D_12 * (k - 1) + internal.dim_aux_II_comm_D_1 * (j - 1) + i - 1] - internal.n_II_comm_D[internal.dim_n_II_comm_D_12 * (k - 1) + internal.dim_n_II_comm_D_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_mild_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_aux_II_mild_3; ++k) {
        internal.aux_II_mild[i - 1 + internal.dim_aux_II_mild_1 * (j - 1) + internal.dim_aux_II_mild_12 * (k - 1)] = internal.n_EI_mild[internal.dim_n_EI_mild_1 * (k - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_mild_1; ++i) {
      for (int_t j = 2; j <= internal.s_mild; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_mild_3; ++k) {
          internal.aux_II_mild[i - 1 + internal.dim_aux_II_mild_1 * (j - 1) + internal.dim_aux_II_mild_12 * (k - 1)] = internal.n_II_mild[internal.dim_n_II_mild_12 * (k - 1) + internal.dim_n_II_mild_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_mild_1; ++i) {
      for (int_t j = 1; j <= internal.s_mild; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_mild_3; ++k) {
          internal.aux_II_mild[i - 1 + internal.dim_aux_II_mild_1 * (j - 1) + internal.dim_aux_II_mild_12 * (k - 1)] = internal.aux_II_mild[internal.dim_aux_II_mild_12 * (k - 1) + internal.dim_aux_II_mild_1 * (j - 1) + i - 1] - internal.n_II_mild[internal.dim_n_II_mild_12 * (k - 1) + internal.dim_n_II_mild_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_delta_I_asympt_1; ++i) {
      for (int_t j = 1; j <= internal.dim_delta_I_asympt_2; ++j) {
        for (int_t k = 1; k <= internal.dim_delta_I_asympt_3; ++k) {
          internal.delta_I_asympt[i - 1 + internal.dim_delta_I_asympt_1 * (j - 1) + internal.dim_delta_I_asympt_12 * (k - 1)] = internal.aux_II_asympt[internal.dim_aux_II_asympt_12 * (k - 1) + internal.dim_aux_II_asympt_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_delta_R_neg; ++i) {
      internal.delta_R_neg[i - 1] = odin_sum2(internal.n_R_pre.data(), i - 1, i, 0, internal.dim_n_R_pre_2, internal.dim_n_R_pre_1) - internal.delta_R_pos[i - 1];
    }
    for (int_t i = 1; i <= internal.dim_n_EI_ILI_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_EI_ILI_2; ++j) {
        internal.n_EI_ILI[i - 1 + internal.dim_n_EI_ILI_1 * (j - 1)] = internal.n_EE[internal.dim_n_EE_12 * (j - 1) + internal.dim_n_EE_1 * (internal.s_E - 1) + i - 1] - internal.n_EI_asympt[internal.dim_n_EI_asympt_1 * (j - 1) + i - 1] - internal.n_EI_mild[internal.dim_n_EI_mild_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_n_ILI_to_hosp_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_ILI_to_hosp_2; ++j) {
        internal.n_ILI_to_hosp[i - 1 + internal.dim_n_ILI_to_hosp_1 * (j - 1)] = internal.n_II_ILI[internal.dim_n_II_ILI_12 * (j - 1) + internal.dim_n_II_ILI_1 * (internal.s_ILI - 1) + i - 1] - internal.n_ILI_to_R[internal.dim_n_ILI_to_R_1 * (j - 1) + i - 1] - internal.n_ILI_to_comm_D[internal.dim_n_ILI_to_comm_D_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_ICU_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_I_ICU_D_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_new_I_ICU_D_conf_3; ++k) {
          internal.new_I_ICU_D_conf[i - 1 + internal.dim_new_I_ICU_D_conf_1 * (j - 1) + internal.dim_new_I_ICU_D_conf_12 * (k - 1)] = internal.aux_II_ICU_D_conf[internal.dim_aux_II_ICU_D_conf_12 * (k - 1) + internal.dim_aux_II_ICU_D_conf_1 * (j - 1) + i - 1] + internal.n_I_ICU_D_unconf_to_conf[internal.dim_n_I_ICU_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_I_ICU_D_unconf_to_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_ICU_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_I_ICU_D_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_new_I_ICU_D_unconf_3; ++k) {
          internal.new_I_ICU_D_unconf[i - 1 + internal.dim_new_I_ICU_D_unconf_1 * (j - 1) + internal.dim_new_I_ICU_D_unconf_12 * (k - 1)] = internal.aux_II_ICU_D_unconf[internal.dim_aux_II_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_II_ICU_D_unconf_1 * (j - 1) + i - 1] - internal.n_I_ICU_D_unconf_to_conf[internal.dim_n_I_ICU_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_I_ICU_D_unconf_to_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_ICU_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_I_ICU_R_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_new_I_ICU_R_conf_3; ++k) {
          internal.new_I_ICU_R_conf[i - 1 + internal.dim_new_I_ICU_R_conf_1 * (j - 1) + internal.dim_new_I_ICU_R_conf_12 * (k - 1)] = internal.aux_II_ICU_R_conf[internal.dim_aux_II_ICU_R_conf_12 * (k - 1) + internal.dim_aux_II_ICU_R_conf_1 * (j - 1) + i - 1] + internal.n_I_ICU_R_unconf_to_conf[internal.dim_n_I_ICU_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_I_ICU_R_unconf_to_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_ICU_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_I_ICU_R_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_new_I_ICU_R_unconf_3; ++k) {
          internal.new_I_ICU_R_unconf[i - 1 + internal.dim_new_I_ICU_R_unconf_1 * (j - 1) + internal.dim_new_I_ICU_R_unconf_12 * (k - 1)] = internal.aux_II_ICU_R_unconf[internal.dim_aux_II_ICU_R_unconf_12 * (k - 1) + internal.dim_aux_II_ICU_R_unconf_1 * (j - 1) + i - 1] - internal.n_I_ICU_R_unconf_to_conf[internal.dim_n_I_ICU_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_I_ICU_R_unconf_to_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_new_R_stepdown_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_R_stepdown_conf_2; ++j) {
        internal.new_R_stepdown_conf[i - 1 + internal.dim_new_R_stepdown_conf_1 * (j - 1)] = internal.aux_R_stepdown_conf[internal.dim_aux_R_stepdown_conf_1 * (j - 1) + i - 1] + internal.n_R_stepdown_unconf_to_conf[internal.dim_n_R_stepdown_unconf_to_conf_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_new_R_stepdown_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_R_stepdown_unconf_2; ++j) {
        internal.new_R_stepdown_unconf[i - 1 + internal.dim_new_R_stepdown_unconf_1 * (j - 1)] = internal.aux_R_stepdown_unconf[internal.dim_aux_R_stepdown_unconf_1 * (j - 1) + i - 1] - internal.n_R_stepdown_unconf_to_conf[internal.dim_n_R_stepdown_unconf_to_conf_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_p_SE; ++i) {
      internal.p_SE[i - 1] = 1 - std::exp(- internal.lambda[i - 1] * internal.dt);
    }
    state_next[2] = cum_new_conf + odin_sum1(internal.n_I_hosp_D_unconf_to_conf.data(), 0, internal.dim_n_I_hosp_D_unconf_to_conf) + odin_sum1(internal.n_I_hosp_R_unconf_to_conf.data(), 0, internal.dim_n_I_hosp_R_unconf_to_conf) + odin_sum1(internal.n_I_triage_D_unconf_to_conf.data(), 0, internal.dim_n_I_triage_D_unconf_to_conf) + odin_sum1(internal.n_I_triage_R_unconf_to_conf.data(), 0, internal.dim_n_I_triage_R_unconf_to_conf) + odin_sum1(internal.n_I_ICU_D_unconf_to_conf.data(), 0, internal.dim_n_I_ICU_D_unconf_to_conf) + odin_sum1(internal.n_I_ICU_R_unconf_to_conf.data(), 0, internal.dim_n_I_ICU_R_unconf_to_conf) + odin_sum1(internal.n_R_stepdown_unconf_to_conf.data(), 0, internal.dim_n_R_stepdown_unconf_to_conf);
    for (int_t i = 1; i <= internal.dim_R; ++i) {
      state_next[internal.offset_variable_R + i - 1] = R[i - 1] + internal.delta_R[i - 1];
    }
    for (int_t i = 1; i <= internal.dim_R_pos; ++i) {
      state_next[internal.offset_variable_R_pos + i - 1] = R_pos[i - 1] + internal.delta_R_pos[i - 1];
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ILI_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_aux_II_ILI_3; ++k) {
        internal.aux_II_ILI[i - 1 + internal.dim_aux_II_ILI_1 * (j - 1) + internal.dim_aux_II_ILI_12 * (k - 1)] = internal.n_EI_ILI[internal.dim_n_EI_ILI_1 * (k - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ILI_1; ++i) {
      for (int_t j = 2; j <= internal.s_ILI; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ILI_3; ++k) {
          internal.aux_II_ILI[i - 1 + internal.dim_aux_II_ILI_1 * (j - 1) + internal.dim_aux_II_ILI_12 * (k - 1)] = internal.n_II_ILI[internal.dim_n_II_ILI_12 * (k - 1) + internal.dim_n_II_ILI_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_II_ILI_1; ++i) {
      for (int_t j = 1; j <= internal.s_ILI; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_II_ILI_3; ++k) {
          internal.aux_II_ILI[i - 1 + internal.dim_aux_II_ILI_1 * (j - 1) + internal.dim_aux_II_ILI_12 * (k - 1)] = internal.aux_II_ILI[internal.dim_aux_II_ILI_12 * (k - 1) + internal.dim_aux_II_ILI_1 * (j - 1) + i - 1] - internal.n_II_ILI[internal.dim_n_II_ILI_12 * (k - 1) + internal.dim_n_II_ILI_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_delta_I_comm_D_1; ++i) {
      for (int_t j = 1; j <= internal.dim_delta_I_comm_D_2; ++j) {
        for (int_t k = 1; k <= internal.dim_delta_I_comm_D_3; ++k) {
          internal.delta_I_comm_D[i - 1 + internal.dim_delta_I_comm_D_1 * (j - 1) + internal.dim_delta_I_comm_D_12 * (k - 1)] = internal.aux_II_comm_D[internal.dim_aux_II_comm_D_12 * (k - 1) + internal.dim_aux_II_comm_D_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_delta_I_mild_1; ++i) {
      for (int_t j = 1; j <= internal.dim_delta_I_mild_2; ++j) {
        for (int_t k = 1; k <= internal.dim_delta_I_mild_3; ++k) {
          internal.delta_I_mild[i - 1 + internal.dim_delta_I_mild_1 * (j - 1) + internal.dim_delta_I_mild_12 * (k - 1)] = internal.aux_II_mild[internal.dim_aux_II_mild_12 * (k - 1) + internal.dim_aux_II_mild_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_ILI_to_triage_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_ILI_to_triage_2; ++j) {
        internal.n_ILI_to_triage[i - 1 + internal.dim_n_ILI_to_triage_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_ILI_to_hosp[internal.dim_n_ILI_to_hosp_1 * (j - 1) + i - 1]), internal.p_ICU_hosp[i - 1]);
      }
    }
    for (int_t i = 1; i <= internal.dim_n_SE; ++i) {
      internal.n_SE[i - 1] = dust::distr::rbinom(rng_state, std::round(S[i - 1]), internal.p_SE[i - 1]);
    }
    for (int_t i = 1; i <= internal.dim_I_asympt_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_asympt_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_asympt_3; ++k) {
          state_next[internal.offset_variable_I_asympt + i - 1 + internal.dim_I_asympt_1 * (j - 1) + internal.dim_I_asympt_12 * (k - 1)] = I_asympt[internal.dim_I_asympt_12 * (k - 1) + internal.dim_I_asympt_1 * (j - 1) + i - 1] + internal.delta_I_asympt[internal.dim_delta_I_asympt_12 * (k - 1) + internal.dim_delta_I_asympt_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_I_ICU_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_ICU_D_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_ICU_D_conf_3; ++k) {
          state_next[internal.offset_variable_I_ICU_D_conf + i - 1 + internal.dim_I_ICU_D_conf_1 * (j - 1) + internal.dim_I_ICU_D_conf_12 * (k - 1)] = internal.new_I_ICU_D_conf[internal.dim_new_I_ICU_D_conf_12 * (k - 1) + internal.dim_new_I_ICU_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_I_ICU_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_ICU_D_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_ICU_D_unconf_3; ++k) {
          state_next[internal.offset_variable_I_ICU_D_unconf + i - 1 + internal.dim_I_ICU_D_unconf_1 * (j - 1) + internal.dim_I_ICU_D_unconf_12 * (k - 1)] = internal.new_I_ICU_D_unconf[internal.dim_new_I_ICU_D_unconf_12 * (k - 1) + internal.dim_new_I_ICU_D_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_I_ICU_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_ICU_R_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_ICU_R_conf_3; ++k) {
          state_next[internal.offset_variable_I_ICU_R_conf + i - 1 + internal.dim_I_ICU_R_conf_1 * (j - 1) + internal.dim_I_ICU_R_conf_12 * (k - 1)] = internal.new_I_ICU_R_conf[internal.dim_new_I_ICU_R_conf_12 * (k - 1) + internal.dim_new_I_ICU_R_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_I_ICU_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_ICU_R_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_ICU_R_unconf_3; ++k) {
          state_next[internal.offset_variable_I_ICU_R_unconf + i - 1 + internal.dim_I_ICU_R_unconf_1 * (j - 1) + internal.dim_I_ICU_R_unconf_12 * (k - 1)] = internal.new_I_ICU_R_unconf[internal.dim_new_I_ICU_R_unconf_12 * (k - 1) + internal.dim_new_I_ICU_R_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_R_neg; ++i) {
      state_next[internal.offset_variable_R_neg + i - 1] = R_neg[i - 1] + internal.delta_R_neg[i - 1];
    }
    for (int_t i = 1; i <= internal.dim_R_stepdown_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_R_stepdown_conf_2; ++j) {
        state_next[internal.offset_variable_R_stepdown_conf + i - 1 + internal.dim_R_stepdown_conf_1 * (j - 1)] = internal.new_R_stepdown_conf[internal.dim_new_R_stepdown_conf_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_R_stepdown_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_R_stepdown_unconf_2; ++j) {
        state_next[internal.offset_variable_R_stepdown_unconf + i - 1 + internal.dim_R_stepdown_unconf_1 * (j - 1)] = internal.new_R_stepdown_unconf[internal.dim_new_R_stepdown_unconf_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_EE_1; ++i) {
      int_t j = 1;
      int_t k = 1;
      internal.aux_EE[i - 1 + internal.dim_aux_EE_1 * (j - 1) + internal.dim_aux_EE_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_SE[i - 1]), internal.aux_p_bin[internal.dim_aux_p_bin_1 * 0 + i - 1]);
    }
    for (int_t i = 1; i <= internal.dim_aux_EE_1; ++i) {
      int_t j = 1;
      for (int_t k = 2; k <= (internal.trans_classes - 1); ++k) {
        internal.aux_EE[i - 1 + internal.dim_aux_EE_1 * (j - 1) + internal.dim_aux_EE_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_SE[i - 1] - odin_sum3(internal.aux_EE.data(), i - 1, i, 0, 1, 0, k - 1, internal.dim_aux_EE_1, internal.dim_aux_EE_12)), internal.aux_p_bin[internal.dim_aux_p_bin_1 * (k - 1) + i - 1]);
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_EE_1; ++i) {
      int_t j = 1;
      int_t k = internal.trans_classes;
      internal.aux_EE[i - 1 + internal.dim_aux_EE_1 * (j - 1) + internal.dim_aux_EE_12 * (k - 1)] = internal.n_SE[i - 1] - odin_sum3(internal.aux_EE.data(), i - 1, i, 0, 1, 0, internal.trans_classes - 1, internal.dim_aux_EE_1, internal.dim_aux_EE_12);
    }
    for (int_t i = 1; i <= internal.dim_aux_EE_1; ++i) {
      for (int_t j = 2; j <= internal.s_E; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_EE_3; ++k) {
          internal.aux_EE[i - 1 + internal.dim_aux_EE_1 * (j - 1) + internal.dim_aux_EE_12 * (k - 1)] = internal.n_EE[internal.dim_n_EE_12 * (k - 1) + internal.dim_n_EE_1 * (j - 1 - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_aux_EE_1; ++i) {
      for (int_t j = 1; j <= internal.s_E; ++j) {
        for (int_t k = 1; k <= internal.dim_aux_EE_3; ++k) {
          internal.aux_EE[i - 1 + internal.dim_aux_EE_1 * (j - 1) + internal.dim_aux_EE_12 * (k - 1)] = internal.aux_EE[internal.dim_aux_EE_12 * (k - 1) + internal.dim_aux_EE_1 * (j - 1) + i - 1] - internal.n_EE[internal.dim_n_EE_12 * (k - 1) + internal.dim_n_EE_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_delta_I_ILI_1; ++i) {
      for (int_t j = 1; j <= internal.dim_delta_I_ILI_2; ++j) {
        for (int_t k = 1; k <= internal.dim_delta_I_ILI_3; ++k) {
          internal.delta_I_ILI[i - 1 + internal.dim_delta_I_ILI_1 * (j - 1) + internal.dim_delta_I_ILI_12 * (k - 1)] = internal.aux_II_ILI[internal.dim_aux_II_ILI_12 * (k - 1) + internal.dim_aux_II_ILI_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_delta_PCR_pos_1; ++i) {
      int_t j = 1;
      internal.delta_PCR_pos[i - 1 + internal.dim_delta_PCR_pos_1 * (j - 1)] = internal.n_SE[i - 1];
    }
    for (int_t i = 1; i <= internal.dim_delta_PCR_pos_1; ++i) {
      for (int_t j = 2; j <= internal.s_PCR_pos; ++j) {
        internal.delta_PCR_pos[i - 1 + internal.dim_delta_PCR_pos_1 * (j - 1)] = internal.n_PCR_pos[internal.dim_n_PCR_pos_1 * (j - 1 - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_delta_PCR_pos_1; ++i) {
      for (int_t j = 1; j <= internal.dim_delta_PCR_pos_2; ++j) {
        internal.delta_PCR_pos[i - 1 + internal.dim_delta_PCR_pos_1 * (j - 1)] = internal.delta_PCR_pos[internal.dim_delta_PCR_pos_1 * (j - 1) + i - 1] - internal.n_PCR_pos[internal.dim_n_PCR_pos_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_n_hosp_non_ICU_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_hosp_non_ICU_2; ++j) {
        internal.n_hosp_non_ICU[i - 1 + internal.dim_n_hosp_non_ICU_1 * (j - 1)] = internal.n_ILI_to_hosp[internal.dim_n_ILI_to_hosp_1 * (j - 1) + i - 1] - internal.n_ILI_to_triage[internal.dim_n_ILI_to_triage_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_n_ILI_to_triage_D_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_ILI_to_triage_D_2; ++j) {
        internal.n_ILI_to_triage_D[i - 1 + internal.dim_n_ILI_to_triage_D_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_ILI_to_triage[internal.dim_n_ILI_to_triage_1 * (j - 1) + i - 1]), internal.p_death_ICU[i - 1]);
      }
    }
    for (int_t i = 1; i <= internal.dim_I_comm_D_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_comm_D_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_comm_D_3; ++k) {
          state_next[internal.offset_variable_I_comm_D + i - 1 + internal.dim_I_comm_D_1 * (j - 1) + internal.dim_I_comm_D_12 * (k - 1)] = I_comm_D[internal.dim_I_comm_D_12 * (k - 1) + internal.dim_I_comm_D_1 * (j - 1) + i - 1] + internal.delta_I_comm_D[internal.dim_delta_I_comm_D_12 * (k - 1) + internal.dim_delta_I_comm_D_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_I_mild_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_mild_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_mild_3; ++k) {
          state_next[internal.offset_variable_I_mild + i - 1 + internal.dim_I_mild_1 * (j - 1) + internal.dim_I_mild_12 * (k - 1)] = I_mild[internal.dim_I_mild_12 * (k - 1) + internal.dim_I_mild_1 * (j - 1) + i - 1] + internal.delta_I_mild[internal.dim_delta_I_mild_12 * (k - 1) + internal.dim_delta_I_mild_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_S; ++i) {
      state_next[5 + i - 1] = S[i - 1] - internal.n_SE[i - 1];
    }
    for (int_t i = 1; i <= internal.dim_delta_E_1; ++i) {
      for (int_t j = 1; j <= internal.dim_delta_E_2; ++j) {
        for (int_t k = 1; k <= internal.dim_delta_E_3; ++k) {
          internal.delta_E[i - 1 + internal.dim_delta_E_1 * (j - 1) + internal.dim_delta_E_12 * (k - 1)] = internal.aux_EE[internal.dim_aux_EE_12 * (k - 1) + internal.dim_aux_EE_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_ILI_to_hosp_D_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_ILI_to_hosp_D_2; ++j) {
        internal.n_ILI_to_hosp_D[i - 1 + internal.dim_n_ILI_to_hosp_D_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_hosp_non_ICU[internal.dim_n_hosp_non_ICU_1 * (j - 1) + i - 1]), internal.p_death_hosp_D[i - 1]);
      }
    }
    for (int_t i = 1; i <= internal.dim_n_ILI_to_triage_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_ILI_to_triage_D_conf_2; ++j) {
        internal.n_ILI_to_triage_D_conf[i - 1 + internal.dim_n_ILI_to_triage_D_conf_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_ILI_to_triage_D[internal.dim_n_ILI_to_triage_D_1 * (j - 1) + i - 1]), internal.p_admit_conf[i - 1]);
      }
    }
    for (int_t i = 1; i <= internal.dim_n_ILI_to_triage_R_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_ILI_to_triage_R_2; ++j) {
        internal.n_ILI_to_triage_R[i - 1 + internal.dim_n_ILI_to_triage_R_1 * (j - 1)] = internal.n_ILI_to_triage[internal.dim_n_ILI_to_triage_1 * (j - 1) + i - 1] - internal.n_ILI_to_triage_D[internal.dim_n_ILI_to_triage_D_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_I_ILI_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_ILI_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_ILI_3; ++k) {
          state_next[internal.offset_variable_I_ILI + i - 1 + internal.dim_I_ILI_1 * (j - 1) + internal.dim_I_ILI_12 * (k - 1)] = I_ILI[internal.dim_I_ILI_12 * (k - 1) + internal.dim_I_ILI_1 * (j - 1) + i - 1] + internal.delta_I_ILI[internal.dim_delta_I_ILI_12 * (k - 1) + internal.dim_delta_I_ILI_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_PCR_pos_1; ++i) {
      for (int_t j = 1; j <= internal.dim_PCR_pos_2; ++j) {
        state_next[internal.offset_variable_PCR_pos + i - 1 + internal.dim_PCR_pos_1 * (j - 1)] = PCR_pos[internal.dim_PCR_pos_1 * (j - 1) + i - 1] + internal.delta_PCR_pos[internal.dim_delta_PCR_pos_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_n_ILI_to_hosp_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_ILI_to_hosp_D_conf_2; ++j) {
        internal.n_ILI_to_hosp_D_conf[i - 1 + internal.dim_n_ILI_to_hosp_D_conf_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_ILI_to_hosp_D[internal.dim_n_ILI_to_hosp_D_1 * (j - 1) + i - 1]), internal.p_admit_conf[i - 1]);
      }
    }
    for (int_t i = 1; i <= internal.dim_n_ILI_to_hosp_R_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_ILI_to_hosp_R_2; ++j) {
        internal.n_ILI_to_hosp_R[i - 1 + internal.dim_n_ILI_to_hosp_R_1 * (j - 1)] = internal.n_hosp_non_ICU[internal.dim_n_hosp_non_ICU_1 * (j - 1) + i - 1] - internal.n_ILI_to_hosp_D[internal.dim_n_ILI_to_hosp_D_1 * (j - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_n_ILI_to_triage_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_ILI_to_triage_R_conf_2; ++j) {
        internal.n_ILI_to_triage_R_conf[i - 1 + internal.dim_n_ILI_to_triage_R_conf_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_ILI_to_triage_R[internal.dim_n_ILI_to_triage_R_1 * (j - 1) + i - 1]), internal.p_admit_conf[i - 1]);
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_triage_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_I_triage_D_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_new_I_triage_D_conf_3; ++k) {
          internal.new_I_triage_D_conf[i - 1 + internal.dim_new_I_triage_D_conf_1 * (j - 1) + internal.dim_new_I_triage_D_conf_12 * (k - 1)] = internal.aux_II_triage_D_conf[internal.dim_aux_II_triage_D_conf_12 * (k - 1) + internal.dim_aux_II_triage_D_conf_1 * (j - 1) + i - 1] + internal.n_I_triage_D_unconf_to_conf[internal.dim_n_I_triage_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_I_triage_D_unconf_to_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_triage_D_conf_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_new_I_triage_D_conf_3; ++k) {
        internal.new_I_triage_D_conf[i - 1 + internal.dim_new_I_triage_D_conf_1 * (j - 1) + internal.dim_new_I_triage_D_conf_12 * (k - 1)] = internal.new_I_triage_D_conf[internal.dim_new_I_triage_D_conf_12 * (k - 1) + internal.dim_new_I_triage_D_conf_1 * 0 + i - 1] + internal.n_ILI_to_triage_D_conf[internal.dim_n_ILI_to_triage_D_conf_1 * (k - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_triage_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_I_triage_D_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_new_I_triage_D_unconf_3; ++k) {
          internal.new_I_triage_D_unconf[i - 1 + internal.dim_new_I_triage_D_unconf_1 * (j - 1) + internal.dim_new_I_triage_D_unconf_12 * (k - 1)] = internal.aux_II_triage_D_unconf[internal.dim_aux_II_triage_D_unconf_12 * (k - 1) + internal.dim_aux_II_triage_D_unconf_1 * (j - 1) + i - 1] - internal.n_I_triage_D_unconf_to_conf[internal.dim_n_I_triage_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_I_triage_D_unconf_to_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_triage_D_unconf_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_new_I_triage_D_unconf_3; ++k) {
        internal.new_I_triage_D_unconf[i - 1 + internal.dim_new_I_triage_D_unconf_1 * (j - 1) + internal.dim_new_I_triage_D_unconf_12 * (k - 1)] = internal.new_I_triage_D_unconf[internal.dim_new_I_triage_D_unconf_12 * (k - 1) + internal.dim_new_I_triage_D_unconf_1 * 0 + i - 1] + internal.n_ILI_to_triage_D[internal.dim_n_ILI_to_triage_D_1 * (k - 1) + i - 1] - internal.n_ILI_to_triage_D_conf[internal.dim_n_ILI_to_triage_D_conf_1 * (k - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_E_1; ++i) {
      for (int_t j = 1; j <= internal.dim_E_2; ++j) {
        for (int_t k = 1; k <= internal.dim_E_3; ++k) {
          state_next[internal.offset_variable_E + i - 1 + internal.dim_E_1 * (j - 1) + internal.dim_E_12 * (k - 1)] = E[internal.dim_E_12 * (k - 1) + internal.dim_E_1 * (j - 1) + i - 1] + internal.delta_E[internal.dim_delta_E_12 * (k - 1) + internal.dim_delta_E_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_n_ILI_to_hosp_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_n_ILI_to_hosp_R_conf_2; ++j) {
        internal.n_ILI_to_hosp_R_conf[i - 1 + internal.dim_n_ILI_to_hosp_R_conf_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_ILI_to_hosp_R[internal.dim_n_ILI_to_hosp_R_1 * (j - 1) + i - 1]), internal.p_admit_conf[i - 1]);
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_hosp_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_I_hosp_D_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_new_I_hosp_D_conf_3; ++k) {
          internal.new_I_hosp_D_conf[i - 1 + internal.dim_new_I_hosp_D_conf_1 * (j - 1) + internal.dim_new_I_hosp_D_conf_12 * (k - 1)] = internal.aux_II_hosp_D_conf[internal.dim_aux_II_hosp_D_conf_12 * (k - 1) + internal.dim_aux_II_hosp_D_conf_1 * (j - 1) + i - 1] + internal.n_I_hosp_D_unconf_to_conf[internal.dim_n_I_hosp_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_I_hosp_D_unconf_to_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_hosp_D_conf_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_new_I_hosp_D_conf_3; ++k) {
        internal.new_I_hosp_D_conf[i - 1 + internal.dim_new_I_hosp_D_conf_1 * (j - 1) + internal.dim_new_I_hosp_D_conf_12 * (k - 1)] = internal.new_I_hosp_D_conf[internal.dim_new_I_hosp_D_conf_12 * (k - 1) + internal.dim_new_I_hosp_D_conf_1 * 0 + i - 1] + internal.n_ILI_to_hosp_D_conf[internal.dim_n_ILI_to_hosp_D_conf_1 * (k - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_hosp_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_I_hosp_D_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_new_I_hosp_D_unconf_3; ++k) {
          internal.new_I_hosp_D_unconf[i - 1 + internal.dim_new_I_hosp_D_unconf_1 * (j - 1) + internal.dim_new_I_hosp_D_unconf_12 * (k - 1)] = internal.aux_II_hosp_D_unconf[internal.dim_aux_II_hosp_D_unconf_12 * (k - 1) + internal.dim_aux_II_hosp_D_unconf_1 * (j - 1) + i - 1] - internal.n_I_hosp_D_unconf_to_conf[internal.dim_n_I_hosp_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_I_hosp_D_unconf_to_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_hosp_D_unconf_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_new_I_hosp_D_unconf_3; ++k) {
        internal.new_I_hosp_D_unconf[i - 1 + internal.dim_new_I_hosp_D_unconf_1 * (j - 1) + internal.dim_new_I_hosp_D_unconf_12 * (k - 1)] = internal.new_I_hosp_D_unconf[internal.dim_new_I_hosp_D_unconf_12 * (k - 1) + internal.dim_new_I_hosp_D_unconf_1 * 0 + i - 1] + internal.n_ILI_to_hosp_D[internal.dim_n_ILI_to_hosp_D_1 * (k - 1) + i - 1] - internal.n_ILI_to_hosp_D_conf[internal.dim_n_ILI_to_hosp_D_conf_1 * (k - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_triage_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_I_triage_R_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_new_I_triage_R_conf_3; ++k) {
          internal.new_I_triage_R_conf[i - 1 + internal.dim_new_I_triage_R_conf_1 * (j - 1) + internal.dim_new_I_triage_R_conf_12 * (k - 1)] = internal.aux_II_triage_R_conf[internal.dim_aux_II_triage_R_conf_12 * (k - 1) + internal.dim_aux_II_triage_R_conf_1 * (j - 1) + i - 1] + internal.n_I_triage_R_unconf_to_conf[internal.dim_n_I_triage_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_I_triage_R_unconf_to_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_triage_R_conf_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_new_I_triage_R_conf_3; ++k) {
        internal.new_I_triage_R_conf[i - 1 + internal.dim_new_I_triage_R_conf_1 * (j - 1) + internal.dim_new_I_triage_R_conf_12 * (k - 1)] = internal.new_I_triage_R_conf[internal.dim_new_I_triage_R_conf_12 * (k - 1) + internal.dim_new_I_triage_R_conf_1 * 0 + i - 1] + internal.n_ILI_to_triage_R_conf[internal.dim_n_ILI_to_triage_R_conf_1 * (k - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_triage_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_I_triage_R_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_new_I_triage_R_unconf_3; ++k) {
          internal.new_I_triage_R_unconf[i - 1 + internal.dim_new_I_triage_R_unconf_1 * (j - 1) + internal.dim_new_I_triage_R_unconf_12 * (k - 1)] = internal.aux_II_triage_R_unconf[internal.dim_aux_II_triage_R_unconf_12 * (k - 1) + internal.dim_aux_II_triage_R_unconf_1 * (j - 1) + i - 1] - internal.n_I_triage_R_unconf_to_conf[internal.dim_n_I_triage_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_I_triage_R_unconf_to_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_triage_R_unconf_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_new_I_triage_R_unconf_3; ++k) {
        internal.new_I_triage_R_unconf[i - 1 + internal.dim_new_I_triage_R_unconf_1 * (j - 1) + internal.dim_new_I_triage_R_unconf_12 * (k - 1)] = internal.new_I_triage_R_unconf[internal.dim_new_I_triage_R_unconf_12 * (k - 1) + internal.dim_new_I_triage_R_unconf_1 * 0 + i - 1] + internal.n_ILI_to_triage_R[internal.dim_n_ILI_to_triage_R_1 * (k - 1) + i - 1] - internal.n_ILI_to_triage_R_conf[internal.dim_n_ILI_to_triage_R_conf_1 * (k - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_I_triage_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_triage_D_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_triage_D_conf_3; ++k) {
          state_next[internal.offset_variable_I_triage_D_conf + i - 1 + internal.dim_I_triage_D_conf_1 * (j - 1) + internal.dim_I_triage_D_conf_12 * (k - 1)] = internal.new_I_triage_D_conf[internal.dim_new_I_triage_D_conf_12 * (k - 1) + internal.dim_new_I_triage_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_I_triage_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_triage_D_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_triage_D_unconf_3; ++k) {
          state_next[internal.offset_variable_I_triage_D_unconf + i - 1 + internal.dim_I_triage_D_unconf_1 * (j - 1) + internal.dim_I_triage_D_unconf_12 * (k - 1)] = internal.new_I_triage_D_unconf[internal.dim_new_I_triage_D_unconf_12 * (k - 1) + internal.dim_new_I_triage_D_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_hosp_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_I_hosp_R_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_new_I_hosp_R_conf_3; ++k) {
          internal.new_I_hosp_R_conf[i - 1 + internal.dim_new_I_hosp_R_conf_1 * (j - 1) + internal.dim_new_I_hosp_R_conf_12 * (k - 1)] = internal.aux_II_hosp_R_conf[internal.dim_aux_II_hosp_R_conf_12 * (k - 1) + internal.dim_aux_II_hosp_R_conf_1 * (j - 1) + i - 1] + internal.n_I_hosp_R_unconf_to_conf[internal.dim_n_I_hosp_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_I_hosp_R_unconf_to_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_hosp_R_conf_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_new_I_hosp_R_conf_3; ++k) {
        internal.new_I_hosp_R_conf[i - 1 + internal.dim_new_I_hosp_R_conf_1 * (j - 1) + internal.dim_new_I_hosp_R_conf_12 * (k - 1)] = internal.new_I_hosp_R_conf[internal.dim_new_I_hosp_R_conf_12 * (k - 1) + internal.dim_new_I_hosp_R_conf_1 * 0 + i - 1] + internal.n_ILI_to_hosp_R_conf[internal.dim_n_ILI_to_hosp_R_conf_1 * (k - 1) + i - 1];
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_hosp_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_new_I_hosp_R_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_new_I_hosp_R_unconf_3; ++k) {
          internal.new_I_hosp_R_unconf[i - 1 + internal.dim_new_I_hosp_R_unconf_1 * (j - 1) + internal.dim_new_I_hosp_R_unconf_12 * (k - 1)] = internal.aux_II_hosp_R_unconf[internal.dim_aux_II_hosp_R_unconf_12 * (k - 1) + internal.dim_aux_II_hosp_R_unconf_1 * (j - 1) + i - 1] - internal.n_I_hosp_R_unconf_to_conf[internal.dim_n_I_hosp_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_I_hosp_R_unconf_to_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_new_I_hosp_R_unconf_1; ++i) {
      int_t j = 1;
      for (int_t k = 1; k <= internal.dim_new_I_hosp_R_unconf_3; ++k) {
        internal.new_I_hosp_R_unconf[i - 1 + internal.dim_new_I_hosp_R_unconf_1 * (j - 1) + internal.dim_new_I_hosp_R_unconf_12 * (k - 1)] = internal.new_I_hosp_R_unconf[internal.dim_new_I_hosp_R_unconf_12 * (k - 1) + internal.dim_new_I_hosp_R_unconf_1 * 0 + i - 1] + internal.n_ILI_to_hosp_R[internal.dim_n_ILI_to_hosp_R_1 * (k - 1) + i - 1] - internal.n_ILI_to_hosp_R_conf[internal.dim_n_ILI_to_hosp_R_conf_1 * (k - 1) + i - 1];
      }
    }
    state_next[1] = cum_admit_conf + odin_sum1(internal.n_ILI_to_hosp_D_conf.data(), 0, internal.dim_n_ILI_to_hosp_D_conf) + odin_sum1(internal.n_ILI_to_hosp_R_conf.data(), 0, internal.dim_n_ILI_to_hosp_R_conf) + odin_sum1(internal.n_ILI_to_triage_D_conf.data(), 0, internal.dim_n_ILI_to_triage_D_conf) + odin_sum1(internal.n_ILI_to_triage_R_conf.data(), 0, internal.dim_n_ILI_to_triage_R_conf);
    for (int_t i = 1; i <= internal.dim_I_hosp_D_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_hosp_D_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_hosp_D_conf_3; ++k) {
          state_next[internal.offset_variable_I_hosp_D_conf + i - 1 + internal.dim_I_hosp_D_conf_1 * (j - 1) + internal.dim_I_hosp_D_conf_12 * (k - 1)] = internal.new_I_hosp_D_conf[internal.dim_new_I_hosp_D_conf_12 * (k - 1) + internal.dim_new_I_hosp_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_I_hosp_D_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_hosp_D_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_hosp_D_unconf_3; ++k) {
          state_next[internal.offset_variable_I_hosp_D_unconf + i - 1 + internal.dim_I_hosp_D_unconf_1 * (j - 1) + internal.dim_I_hosp_D_unconf_12 * (k - 1)] = internal.new_I_hosp_D_unconf[internal.dim_new_I_hosp_D_unconf_12 * (k - 1) + internal.dim_new_I_hosp_D_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_I_triage_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_triage_R_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_triage_R_conf_3; ++k) {
          state_next[internal.offset_variable_I_triage_R_conf + i - 1 + internal.dim_I_triage_R_conf_1 * (j - 1) + internal.dim_I_triage_R_conf_12 * (k - 1)] = internal.new_I_triage_R_conf[internal.dim_new_I_triage_R_conf_12 * (k - 1) + internal.dim_new_I_triage_R_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_I_triage_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_triage_R_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_triage_R_unconf_3; ++k) {
          state_next[internal.offset_variable_I_triage_R_unconf + i - 1 + internal.dim_I_triage_R_unconf_1 * (j - 1) + internal.dim_I_triage_R_unconf_12 * (k - 1)] = internal.new_I_triage_R_unconf[internal.dim_new_I_triage_R_unconf_12 * (k - 1) + internal.dim_new_I_triage_R_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_I_hosp_R_conf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_hosp_R_conf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_hosp_R_conf_3; ++k) {
          state_next[internal.offset_variable_I_hosp_R_conf + i - 1 + internal.dim_I_hosp_R_conf_1 * (j - 1) + internal.dim_I_hosp_R_conf_12 * (k - 1)] = internal.new_I_hosp_R_conf[internal.dim_new_I_hosp_R_conf_12 * (k - 1) + internal.dim_new_I_hosp_R_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int_t i = 1; i <= internal.dim_I_hosp_R_unconf_1; ++i) {
      for (int_t j = 1; j <= internal.dim_I_hosp_R_unconf_2; ++j) {
        for (int_t k = 1; k <= internal.dim_I_hosp_R_unconf_3; ++k) {
          state_next[internal.offset_variable_I_hosp_R_unconf + i - 1 + internal.dim_I_hosp_R_unconf_1 * (j - 1) + internal.dim_I_hosp_R_unconf_12 * (k - 1)] = internal.new_I_hosp_R_unconf[internal.dim_new_I_hosp_R_unconf_12 * (k - 1) + internal.dim_new_I_hosp_R_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
  }
private:
  init_t internal;
};
template <typename real_t, typename int_t>
real_t odin_sum2(const real_t * x, int_t from_i, int_t to_i, int_t from_j, int_t to_j, int_t dim_x_1) {
  real_t tot = 0.0;
  for (int_t j = from_j; j < to_j; ++j) {
    int_t jj = j * dim_x_1;
    for (int_t i = from_i; i < to_i; ++i) {
      tot += x[i + jj];
    }
  }
  return tot;
}
template <typename real_t, typename int_t>
real_t odin_sum3(const real_t * x, int_t from_i, int_t to_i, int_t from_j, int_t to_j, int_t from_k, int_t to_k, int_t dim_x_1, int_t dim_x_12) {
  real_t tot = 0.0;
  for (int_t k = from_k; k < to_k; ++k) {
    int_t kk = k * dim_x_12;
    for (int_t j = from_j; j < to_j; ++j) {
      int_t jj = j * dim_x_1 + kk;
      for (int_t i = from_i; i < to_i; ++i) {
        tot += x[i + jj];
      }
    }
  }
  return tot;
}
#include <array>
#include <cpp11/R.hpp>
#include <cpp11/sexp.hpp>
#include <cpp11/doubles.hpp>
#include <cpp11/integers.hpp>
#include <cpp11/list.hpp>
#include <cpp11/strings.hpp>
#include <vector>

// These would be nice to make constexpr but the way that NA values
// are defined in R's include files do not allow it.
template <typename T>
inline T na_value();

template <>
inline int na_value<int>() {
  return NA_INTEGER;
}

template <>
inline double na_value<double>() {
  return NA_REAL;
}

template <typename T>
inline bool is_na(T x);

template <>
inline bool is_na(int x) {
  return x == NA_INTEGER;
}

template <>
inline bool is_na(double x) {
  return ISNA(x);
}

inline size_t object_length(cpp11::sexp x) {
  return ::Rf_xlength(x);
}

template <typename T>
void user_check_value(T value, const char *name, T min, T max) {
  if (ISNA(value)) {
    cpp11::stop("'%s' must not be NA", name);
  }
  if (min != na_value<T>() && value < min) {
    cpp11::stop("Expected '%s' to be at least %g", name, (double) min);
  }
  if (max != na_value<T>() && value > max) {
    cpp11::stop("Expected '%s' to be at most %g", name, (double) max);
  }
}

template <typename T>
void user_check_array_value(const std::vector<T>& value, const char *name,
                            T min, T max) {
  for (auto& x : value) {
    user_check_value(x, name, min, max);
  }
}

inline size_t user_get_array_rank(cpp11::sexp x) {
  if (!::Rf_isArray(x)) {
    return 1;
  } else {
    cpp11::integers dim = cpp11::as_cpp<cpp11::integers>(x.attr("dim"));
    return dim.size();
  }
}

template <size_t N>
void user_check_array_rank(cpp11::sexp x, const char *name) {
  size_t rank = user_get_array_rank(x);
  if (rank != N) {
    if (N == 1) {
      cpp11::stop("Expected a vector for '%s'", name);
    } else if (N == 2) {
      cpp11::stop("Expected a matrix for '%s'", name);
    } else {
      cpp11::stop("Expected an array of rank %d for '%s'", N, name);
    }
  }
}

template <size_t N>
void user_check_array_dim(cpp11::sexp x, const char *name,
                          const std::array<int, N>& dim_expected) {
  cpp11::integers dim = cpp11::as_cpp<cpp11::integers>(x.attr("dim"));
  for (size_t i = 0; i < N; ++i) {
    if (dim[(int)i] != dim_expected[i]) {
      Rf_error("Incorrect size of dimension %d of '%s' (expected %d)",
               i + 1, name, dim_expected[i]);
    }
  }
}

template <>
inline void user_check_array_dim<1>(cpp11::sexp x, const char *name,
                                    const std::array<int, 1>& dim_expected) {
  if ((int)object_length(x) != dim_expected[0]) {
    cpp11::stop("Expected length %d value for '%s'", dim_expected[0], name);
  }
}

template <size_t N>
void user_set_array_dim(cpp11::sexp x, const char *name,
                        std::array<int, N>& dim) {
  cpp11::integers dim_given = cpp11::as_cpp<cpp11::integers>(x.attr("dim"));
  std::copy(dim_given.begin(), dim_given.end(), dim.begin());
}

template <>
inline void user_set_array_dim<1>(cpp11::sexp x, const char *name,
                                  std::array<int, 1>& dim) {
  dim[0] = object_length(x);
}

template <typename T>
T user_get_scalar(cpp11::list user, const char *name,
                  const T previous, T min, T max) {
  T ret = previous;
  cpp11::sexp x = user[name];
  if (x != R_NilValue) {
    if (object_length(x) != 1) {
      cpp11::stop("Expected a scalar numeric for '%s'", name);
    }
    // TODO: when we're getting out an integer this is a bit too relaxed
    if (TYPEOF(x) == REALSXP) {
      ret = cpp11::as_cpp<T>(x);
    } else if (TYPEOF(x) == INTSXP) {
      ret = cpp11::as_cpp<T>(x);
    } else {
      cpp11::stop("Expected a numeric value for %s", name);
    }
  }

  if (is_na(ret)) {
    cpp11::stop("Expected a value for '%s'", name);
  }
  user_check_value<T>(ret, name, min, max);
  return ret;
}

// This is not actually really enough to work generally as there's an
// issue with what to do with checking previous, min and max against
// NA_REAL -- which is not going to be the correct value for float
// rather than double.  Further, this is not extendable to the vector
// cases because we hit issues around partial template specification.
//
// We can make the latter go away by replacing std::array<T, N> with
// std::vector<T> - the cost is not great.  But the NA issues remain
// and will require further thought. However, this template
// specialisation and the tests that use it ensure that the core code
// generation is at least compatible with floats.
//
// See #6
template <>
inline float user_get_scalar<float>(cpp11::list user, const char *name,
                                    const float previous, float min, float max) {
  double value = user_get_scalar<double>(user, name, previous, min, max);
  return static_cast<float>(value);
}

template <typename T, size_t N>
std::vector<T> user_get_array_fixed(cpp11::list user, const char *name,
                                    const std::vector<T> previous,
                                    const std::array<int, N>& dim,
                                    T min, T max) {
  cpp11::sexp x = user[name];
  if (x == R_NilValue) {
    if (previous.size() == 0) {
      cpp11::stop("Expected a value for '%s'", name);
    }
    return previous;
  }

  user_check_array_rank<N>(x, name);
  user_check_array_dim<N>(x, name, dim);

  std::vector<T> ret = cpp11::as_cpp<std::vector<T>>(x);
  user_check_array_value(ret, name, min, max);

  return ret;
}

template <typename T, size_t N>
std::vector<T> user_get_array_variable(cpp11::list user, const char *name,
                                       std::vector<T> previous,
                                       std::array<int, N>& dim,
                                       T min, T max) {
  cpp11::sexp x = user[name];
  if (x == R_NilValue) {
    if (previous.size() == 0) {
      cpp11::stop("Expected a value for '%s'", name);
    }
    return previous;
  }

  user_check_array_rank<N>(x, name);
  user_set_array_dim<N>(x, name, dim);

  std::vector<T> ret = cpp11::as_cpp<std::vector<T>>(x);
  user_check_array_value(ret, name, min, max);

  return ret;
}

// This is sum with inclusive "from", exclusive "to", following the
// same function in odin
template <typename T>
T odin_sum1(const T * x, size_t from, size_t to) {
  T tot = 0.0;
  for (size_t i = from; i < to; ++i) {
    tot += x[i];
  }
  return tot;
}
template<>
carehomes::init_t dust_data<carehomes>(cpp11::list user) {
  typedef typename carehomes::real_t real_t;
  typedef typename carehomes::int_t int_t;
  carehomes::init_t internal;
  internal.dim_gamma_R_pre = 2;
  internal.initial_time = 0;
  internal.gamma_R_pre = std::vector<real_t>(internal.dim_gamma_R_pre);
  internal.comm_D_transmission = NA_REAL;
  internal.cum0_admit_conf = NA_REAL;
  internal.cum0_new_conf = NA_REAL;
  internal.dt = NA_REAL;
  internal.hosp_transmission = NA_REAL;
  internal.ICU_transmission = NA_REAL;
  internal.N_age = NA_INTEGER;
  internal.N0_tot2 = NA_REAL;
  internal.p_R_pre_1 = NA_REAL;
  internal.s_asympt = NA_INTEGER;
  internal.s_comm_D = NA_INTEGER;
  internal.s_E = NA_INTEGER;
  internal.s_hosp_D = NA_INTEGER;
  internal.s_hosp_R = NA_INTEGER;
  internal.s_ICU_D = NA_INTEGER;
  internal.s_ICU_R = NA_INTEGER;
  internal.s_ILI = NA_INTEGER;
  internal.s_mild = NA_INTEGER;
  internal.s_PCR_pos = NA_INTEGER;
  internal.s_stepdown = NA_INTEGER;
  internal.s_triage = NA_INTEGER;
  internal.trans_classes = NA_INTEGER;
  internal.gamma_asympt = 0.10000000000000001;
  internal.gamma_comm_D = 0.10000000000000001;
  internal.gamma_E = 0.10000000000000001;
  internal.gamma_hosp_D = 0.10000000000000001;
  internal.gamma_hosp_R = 0.10000000000000001;
  internal.gamma_ICU_D = 0.10000000000000001;
  internal.gamma_ICU_R = 0.10000000000000001;
  internal.gamma_ILI = 0.10000000000000001;
  internal.gamma_mild = 0.10000000000000001;
  internal.gamma_PCR_pos = 0.10000000000000001;
  internal.gamma_R_pre_1 = 0.10000000000000001;
  internal.gamma_R_pre_2 = 0.10000000000000001;
  internal.gamma_stepdown = 0.10000000000000001;
  internal.gamma_test = 0.10000000000000001;
  internal.gamma_triage = 0.10000000000000001;
  internal.psi = 0.10000000000000001;
  std::array <int_t, 1> dim_beta_step;
  internal.beta_step = user_get_array_variable<real_t, 1>(user, "beta_step", internal.beta_step, dim_beta_step, NA_REAL, NA_REAL);
  internal.dim_beta_step = internal.beta_step.size();
  internal.comm_D_transmission = user_get_scalar<real_t>(user, "comm_D_transmission", internal.comm_D_transmission, NA_REAL, NA_REAL);
  internal.cum0_admit_conf = user_get_scalar<real_t>(user, "cum0_admit_conf", internal.cum0_admit_conf, NA_REAL, NA_REAL);
  internal.cum0_new_conf = user_get_scalar<real_t>(user, "cum0_new_conf", internal.cum0_new_conf, NA_REAL, NA_REAL);
  internal.dt = user_get_scalar<real_t>(user, "dt", internal.dt, NA_REAL, NA_REAL);
  internal.gamma_asympt = user_get_scalar<real_t>(user, "gamma_asympt", internal.gamma_asympt, NA_REAL, NA_REAL);
  internal.gamma_comm_D = user_get_scalar<real_t>(user, "gamma_comm_D", internal.gamma_comm_D, NA_REAL, NA_REAL);
  internal.gamma_E = user_get_scalar<real_t>(user, "gamma_E", internal.gamma_E, NA_REAL, NA_REAL);
  internal.gamma_hosp_D = user_get_scalar<real_t>(user, "gamma_hosp_D", internal.gamma_hosp_D, NA_REAL, NA_REAL);
  internal.gamma_hosp_R = user_get_scalar<real_t>(user, "gamma_hosp_R", internal.gamma_hosp_R, NA_REAL, NA_REAL);
  internal.gamma_ICU_D = user_get_scalar<real_t>(user, "gamma_ICU_D", internal.gamma_ICU_D, NA_REAL, NA_REAL);
  internal.gamma_ICU_R = user_get_scalar<real_t>(user, "gamma_ICU_R", internal.gamma_ICU_R, NA_REAL, NA_REAL);
  internal.gamma_ILI = user_get_scalar<real_t>(user, "gamma_ILI", internal.gamma_ILI, NA_REAL, NA_REAL);
  internal.gamma_mild = user_get_scalar<real_t>(user, "gamma_mild", internal.gamma_mild, NA_REAL, NA_REAL);
  internal.gamma_PCR_pos = user_get_scalar<real_t>(user, "gamma_PCR_pos", internal.gamma_PCR_pos, NA_REAL, NA_REAL);
  internal.gamma_R_pre_1 = user_get_scalar<real_t>(user, "gamma_R_pre_1", internal.gamma_R_pre_1, NA_REAL, NA_REAL);
  internal.gamma_R_pre_2 = user_get_scalar<real_t>(user, "gamma_R_pre_2", internal.gamma_R_pre_2, NA_REAL, NA_REAL);
  internal.gamma_stepdown = user_get_scalar<real_t>(user, "gamma_stepdown", internal.gamma_stepdown, NA_REAL, NA_REAL);
  internal.gamma_test = user_get_scalar<real_t>(user, "gamma_test", internal.gamma_test, NA_REAL, NA_REAL);
  internal.gamma_triage = user_get_scalar<real_t>(user, "gamma_triage", internal.gamma_triage, NA_REAL, NA_REAL);
  internal.hosp_transmission = user_get_scalar<real_t>(user, "hosp_transmission", internal.hosp_transmission, NA_REAL, NA_REAL);
  internal.ICU_transmission = user_get_scalar<real_t>(user, "ICU_transmission", internal.ICU_transmission, NA_REAL, NA_REAL);
  std::array <int_t, 1> dim_importation_step;
  internal.importation_step = user_get_array_variable<real_t, 1>(user, "importation_step", internal.importation_step, dim_importation_step, NA_REAL, NA_REAL);
  internal.dim_importation_step = internal.importation_step.size();
  internal.N_age = user_get_scalar<int_t>(user, "N_age", internal.N_age, NA_REAL, NA_REAL);
  internal.N0_tot2 = user_get_scalar<real_t>(user, "N0_tot2", internal.N0_tot2, NA_REAL, NA_REAL);
  internal.p_R_pre_1 = user_get_scalar<real_t>(user, "p_R_pre_1", internal.p_R_pre_1, NA_REAL, NA_REAL);
  internal.psi = user_get_scalar<real_t>(user, "psi", internal.psi, NA_REAL, NA_REAL);
  internal.s_asympt = user_get_scalar<int_t>(user, "s_asympt", internal.s_asympt, NA_REAL, NA_REAL);
  internal.s_comm_D = user_get_scalar<int_t>(user, "s_comm_D", internal.s_comm_D, NA_REAL, NA_REAL);
  internal.s_E = user_get_scalar<int_t>(user, "s_E", internal.s_E, NA_REAL, NA_REAL);
  internal.s_hosp_D = user_get_scalar<int_t>(user, "s_hosp_D", internal.s_hosp_D, NA_REAL, NA_REAL);
  internal.s_hosp_R = user_get_scalar<int_t>(user, "s_hosp_R", internal.s_hosp_R, NA_REAL, NA_REAL);
  internal.s_ICU_D = user_get_scalar<int_t>(user, "s_ICU_D", internal.s_ICU_D, NA_REAL, NA_REAL);
  internal.s_ICU_R = user_get_scalar<int_t>(user, "s_ICU_R", internal.s_ICU_R, NA_REAL, NA_REAL);
  internal.s_ILI = user_get_scalar<int_t>(user, "s_ILI", internal.s_ILI, NA_REAL, NA_REAL);
  internal.s_mild = user_get_scalar<int_t>(user, "s_mild", internal.s_mild, NA_REAL, NA_REAL);
  internal.s_PCR_pos = user_get_scalar<int_t>(user, "s_PCR_pos", internal.s_PCR_pos, NA_REAL, NA_REAL);
  internal.s_stepdown = user_get_scalar<int_t>(user, "s_stepdown", internal.s_stepdown, NA_REAL, NA_REAL);
  internal.s_triage = user_get_scalar<int_t>(user, "s_triage", internal.s_triage, NA_REAL, NA_REAL);
  internal.trans_classes = user_get_scalar<int_t>(user, "trans_classes", internal.trans_classes, NA_REAL, NA_REAL);
  internal.dim_aux_EE_1 = internal.N_age;
  internal.dim_aux_EE_2 = internal.s_E;
  internal.dim_aux_EE_3 = internal.trans_classes;
  internal.dim_aux_II_asympt_1 = internal.N_age;
  internal.dim_aux_II_asympt_2 = internal.s_asympt;
  internal.dim_aux_II_asympt_3 = internal.trans_classes;
  internal.dim_aux_II_comm_D_1 = internal.N_age;
  internal.dim_aux_II_comm_D_2 = internal.s_comm_D;
  internal.dim_aux_II_comm_D_3 = internal.trans_classes;
  internal.dim_aux_II_hosp_D_conf_1 = internal.N_age;
  internal.dim_aux_II_hosp_D_conf_2 = internal.s_hosp_D;
  internal.dim_aux_II_hosp_D_conf_3 = internal.trans_classes;
  internal.dim_aux_II_hosp_D_unconf_1 = internal.N_age;
  internal.dim_aux_II_hosp_D_unconf_2 = internal.s_hosp_D;
  internal.dim_aux_II_hosp_D_unconf_3 = internal.trans_classes;
  internal.dim_aux_II_hosp_R_conf_1 = internal.N_age;
  internal.dim_aux_II_hosp_R_conf_2 = internal.s_hosp_R;
  internal.dim_aux_II_hosp_R_conf_3 = internal.trans_classes;
  internal.dim_aux_II_hosp_R_unconf_1 = internal.N_age;
  internal.dim_aux_II_hosp_R_unconf_2 = internal.s_hosp_R;
  internal.dim_aux_II_hosp_R_unconf_3 = internal.trans_classes;
  internal.dim_aux_II_ICU_D_conf_1 = internal.N_age;
  internal.dim_aux_II_ICU_D_conf_2 = internal.s_ICU_D;
  internal.dim_aux_II_ICU_D_conf_3 = internal.trans_classes;
  internal.dim_aux_II_ICU_D_unconf_1 = internal.N_age;
  internal.dim_aux_II_ICU_D_unconf_2 = internal.s_ICU_D;
  internal.dim_aux_II_ICU_D_unconf_3 = internal.trans_classes;
  internal.dim_aux_II_ICU_R_conf_1 = internal.N_age;
  internal.dim_aux_II_ICU_R_conf_2 = internal.s_ICU_R;
  internal.dim_aux_II_ICU_R_conf_3 = internal.trans_classes;
  internal.dim_aux_II_ICU_R_unconf_1 = internal.N_age;
  internal.dim_aux_II_ICU_R_unconf_2 = internal.s_ICU_R;
  internal.dim_aux_II_ICU_R_unconf_3 = internal.trans_classes;
  internal.dim_aux_II_ILI_1 = internal.N_age;
  internal.dim_aux_II_ILI_2 = internal.s_ILI;
  internal.dim_aux_II_ILI_3 = internal.trans_classes;
  internal.dim_aux_II_mild_1 = internal.N_age;
  internal.dim_aux_II_mild_2 = internal.s_mild;
  internal.dim_aux_II_mild_3 = internal.trans_classes;
  internal.dim_aux_II_triage_D_conf_1 = internal.N_age;
  internal.dim_aux_II_triage_D_conf_2 = internal.s_triage;
  internal.dim_aux_II_triage_D_conf_3 = internal.trans_classes;
  internal.dim_aux_II_triage_D_unconf_1 = internal.N_age;
  internal.dim_aux_II_triage_D_unconf_2 = internal.s_triage;
  internal.dim_aux_II_triage_D_unconf_3 = internal.trans_classes;
  internal.dim_aux_II_triage_R_conf_1 = internal.N_age;
  internal.dim_aux_II_triage_R_conf_2 = internal.s_triage;
  internal.dim_aux_II_triage_R_conf_3 = internal.trans_classes;
  internal.dim_aux_II_triage_R_unconf_1 = internal.N_age;
  internal.dim_aux_II_triage_R_unconf_2 = internal.s_triage;
  internal.dim_aux_II_triage_R_unconf_3 = internal.trans_classes;
  internal.dim_aux_p_bin_1 = internal.N_age;
  internal.dim_aux_p_bin_2 = internal.trans_classes;
  internal.dim_aux_R_stepdown_conf_1 = internal.N_age;
  internal.dim_aux_R_stepdown_conf_2 = internal.s_stepdown;
  internal.dim_aux_R_stepdown_unconf_1 = internal.N_age;
  internal.dim_aux_R_stepdown_unconf_2 = internal.s_stepdown;
  internal.dim_D_comm = internal.N_age;
  internal.dim_D_hosp = internal.N_age;
  internal.dim_D0_comm = internal.N_age;
  internal.dim_D0_hosp = internal.N_age;
  internal.dim_delta_D_comm = internal.N_age;
  internal.dim_delta_D_hosp = internal.N_age;
  internal.dim_delta_E_1 = internal.N_age;
  internal.dim_delta_E_2 = internal.s_E;
  internal.dim_delta_E_3 = internal.trans_classes;
  internal.dim_delta_I_asympt_1 = internal.N_age;
  internal.dim_delta_I_asympt_2 = internal.s_asympt;
  internal.dim_delta_I_asympt_3 = internal.trans_classes;
  internal.dim_delta_I_comm_D_1 = internal.N_age;
  internal.dim_delta_I_comm_D_2 = internal.s_comm_D;
  internal.dim_delta_I_comm_D_3 = internal.trans_classes;
  internal.dim_delta_I_ILI_1 = internal.N_age;
  internal.dim_delta_I_ILI_2 = internal.s_ILI;
  internal.dim_delta_I_ILI_3 = internal.trans_classes;
  internal.dim_delta_I_mild_1 = internal.N_age;
  internal.dim_delta_I_mild_2 = internal.s_mild;
  internal.dim_delta_I_mild_3 = internal.trans_classes;
  internal.dim_delta_PCR_pos_1 = internal.N_age;
  internal.dim_delta_PCR_pos_2 = internal.s_PCR_pos;
  internal.dim_delta_R = internal.N_age;
  internal.dim_delta_R_neg = internal.N_age;
  internal.dim_delta_R_pos = internal.N_age;
  internal.dim_E_1 = internal.N_age;
  internal.dim_E_2 = internal.s_E;
  internal.dim_E_3 = internal.trans_classes;
  internal.dim_E0_1 = internal.N_age;
  internal.dim_E0_2 = internal.s_E;
  internal.dim_E0_3 = internal.trans_classes;
  internal.dim_I_asympt_1 = internal.N_age;
  internal.dim_I_asympt_2 = internal.s_asympt;
  internal.dim_I_asympt_3 = internal.trans_classes;
  internal.dim_I_comm_D_1 = internal.N_age;
  internal.dim_I_comm_D_2 = internal.s_comm_D;
  internal.dim_I_comm_D_3 = internal.trans_classes;
  internal.dim_I_hosp_D_conf_1 = internal.N_age;
  internal.dim_I_hosp_D_conf_2 = internal.s_hosp_D;
  internal.dim_I_hosp_D_conf_3 = internal.trans_classes;
  internal.dim_I_hosp_D_unconf_1 = internal.N_age;
  internal.dim_I_hosp_D_unconf_2 = internal.s_hosp_D;
  internal.dim_I_hosp_D_unconf_3 = internal.trans_classes;
  internal.dim_I_hosp_R_conf_1 = internal.N_age;
  internal.dim_I_hosp_R_conf_2 = internal.s_hosp_R;
  internal.dim_I_hosp_R_conf_3 = internal.trans_classes;
  internal.dim_I_hosp_R_unconf_1 = internal.N_age;
  internal.dim_I_hosp_R_unconf_2 = internal.s_hosp_R;
  internal.dim_I_hosp_R_unconf_3 = internal.trans_classes;
  internal.dim_I_ICU_D_conf_1 = internal.N_age;
  internal.dim_I_ICU_D_conf_2 = internal.s_ICU_D;
  internal.dim_I_ICU_D_conf_3 = internal.trans_classes;
  internal.dim_I_ICU_D_unconf_1 = internal.N_age;
  internal.dim_I_ICU_D_unconf_2 = internal.s_ICU_D;
  internal.dim_I_ICU_D_unconf_3 = internal.trans_classes;
  internal.dim_I_ICU_R_conf_1 = internal.N_age;
  internal.dim_I_ICU_R_conf_2 = internal.s_ICU_R;
  internal.dim_I_ICU_R_conf_3 = internal.trans_classes;
  internal.dim_I_ICU_R_unconf_1 = internal.N_age;
  internal.dim_I_ICU_R_unconf_2 = internal.s_ICU_R;
  internal.dim_I_ICU_R_unconf_3 = internal.trans_classes;
  internal.dim_I_ILI_1 = internal.N_age;
  internal.dim_I_ILI_2 = internal.s_ILI;
  internal.dim_I_ILI_3 = internal.trans_classes;
  internal.dim_I_mild_1 = internal.N_age;
  internal.dim_I_mild_2 = internal.s_mild;
  internal.dim_I_mild_3 = internal.trans_classes;
  internal.dim_I_triage_D_conf_1 = internal.N_age;
  internal.dim_I_triage_D_conf_2 = internal.s_triage;
  internal.dim_I_triage_D_conf_3 = internal.trans_classes;
  internal.dim_I_triage_D_unconf_1 = internal.N_age;
  internal.dim_I_triage_D_unconf_2 = internal.s_triage;
  internal.dim_I_triage_D_unconf_3 = internal.trans_classes;
  internal.dim_I_triage_R_conf_1 = internal.N_age;
  internal.dim_I_triage_R_conf_2 = internal.s_triage;
  internal.dim_I_triage_R_conf_3 = internal.trans_classes;
  internal.dim_I_triage_R_unconf_1 = internal.N_age;
  internal.dim_I_triage_R_unconf_2 = internal.s_triage;
  internal.dim_I_triage_R_unconf_3 = internal.trans_classes;
  internal.dim_I_with_diff_trans_1 = internal.N_age;
  internal.dim_I_with_diff_trans_2 = internal.trans_classes;
  internal.dim_I0_asympt_1 = internal.N_age;
  internal.dim_I0_asympt_2 = internal.s_asympt;
  internal.dim_I0_asympt_3 = internal.trans_classes;
  internal.dim_I0_comm_D_1 = internal.N_age;
  internal.dim_I0_comm_D_2 = internal.s_comm_D;
  internal.dim_I0_comm_D_3 = internal.trans_classes;
  internal.dim_I0_hosp_D_conf_1 = internal.N_age;
  internal.dim_I0_hosp_D_conf_2 = internal.s_hosp_D;
  internal.dim_I0_hosp_D_conf_3 = internal.trans_classes;
  internal.dim_I0_hosp_D_unconf_1 = internal.N_age;
  internal.dim_I0_hosp_D_unconf_2 = internal.s_hosp_D;
  internal.dim_I0_hosp_D_unconf_3 = internal.trans_classes;
  internal.dim_I0_hosp_R_conf_1 = internal.N_age;
  internal.dim_I0_hosp_R_conf_2 = internal.s_hosp_R;
  internal.dim_I0_hosp_R_conf_3 = internal.trans_classes;
  internal.dim_I0_hosp_R_unconf_1 = internal.N_age;
  internal.dim_I0_hosp_R_unconf_2 = internal.s_hosp_R;
  internal.dim_I0_hosp_R_unconf_3 = internal.trans_classes;
  internal.dim_I0_ICU_D_conf_1 = internal.N_age;
  internal.dim_I0_ICU_D_conf_2 = internal.s_ICU_D;
  internal.dim_I0_ICU_D_conf_3 = internal.trans_classes;
  internal.dim_I0_ICU_D_unconf_1 = internal.N_age;
  internal.dim_I0_ICU_D_unconf_2 = internal.s_ICU_D;
  internal.dim_I0_ICU_D_unconf_3 = internal.trans_classes;
  internal.dim_I0_ICU_R_conf_1 = internal.N_age;
  internal.dim_I0_ICU_R_conf_2 = internal.s_ICU_R;
  internal.dim_I0_ICU_R_conf_3 = internal.trans_classes;
  internal.dim_I0_ICU_R_unconf_1 = internal.N_age;
  internal.dim_I0_ICU_R_unconf_2 = internal.s_ICU_R;
  internal.dim_I0_ICU_R_unconf_3 = internal.trans_classes;
  internal.dim_I0_ILI_1 = internal.N_age;
  internal.dim_I0_ILI_2 = internal.s_ILI;
  internal.dim_I0_ILI_3 = internal.trans_classes;
  internal.dim_I0_mild_1 = internal.N_age;
  internal.dim_I0_mild_2 = internal.s_mild;
  internal.dim_I0_mild_3 = internal.trans_classes;
  internal.dim_I0_triage_D_conf_1 = internal.N_age;
  internal.dim_I0_triage_D_conf_2 = internal.s_triage;
  internal.dim_I0_triage_D_conf_3 = internal.trans_classes;
  internal.dim_I0_triage_D_unconf_1 = internal.N_age;
  internal.dim_I0_triage_D_unconf_2 = internal.s_triage;
  internal.dim_I0_triage_D_unconf_3 = internal.trans_classes;
  internal.dim_I0_triage_R_conf_1 = internal.N_age;
  internal.dim_I0_triage_R_conf_2 = internal.s_triage;
  internal.dim_I0_triage_R_conf_3 = internal.trans_classes;
  internal.dim_I0_triage_R_unconf_1 = internal.N_age;
  internal.dim_I0_triage_R_unconf_2 = internal.s_triage;
  internal.dim_I0_triage_R_unconf_3 = internal.trans_classes;
  internal.dim_lambda = internal.N_age;
  internal.dim_m_1 = internal.N_age;
  internal.dim_m_2 = internal.N_age;
  internal.dim_n_com_to_R_pre_1 = internal.N_age;
  internal.dim_n_com_to_R_pre_2 = 2;
  internal.dim_n_EE_1 = internal.N_age;
  internal.dim_n_EE_2 = internal.s_E;
  internal.dim_n_EE_3 = internal.trans_classes;
  internal.dim_n_EI_asympt_1 = internal.N_age;
  internal.dim_n_EI_asympt_2 = internal.trans_classes;
  internal.dim_n_EI_ILI_1 = internal.N_age;
  internal.dim_n_EI_ILI_2 = internal.trans_classes;
  internal.dim_n_EI_mild_1 = internal.N_age;
  internal.dim_n_EI_mild_2 = internal.trans_classes;
  internal.dim_n_hosp_non_ICU_1 = internal.N_age;
  internal.dim_n_hosp_non_ICU_2 = internal.trans_classes;
  internal.dim_n_I_hosp_D_unconf_to_conf_1 = internal.N_age;
  internal.dim_n_I_hosp_D_unconf_to_conf_2 = internal.s_hosp_D;
  internal.dim_n_I_hosp_D_unconf_to_conf_3 = internal.trans_classes;
  internal.dim_n_I_hosp_R_unconf_to_conf_1 = internal.N_age;
  internal.dim_n_I_hosp_R_unconf_to_conf_2 = internal.s_hosp_R;
  internal.dim_n_I_hosp_R_unconf_to_conf_3 = internal.trans_classes;
  internal.dim_n_I_ICU_D_unconf_to_conf_1 = internal.N_age;
  internal.dim_n_I_ICU_D_unconf_to_conf_2 = internal.s_ICU_D;
  internal.dim_n_I_ICU_D_unconf_to_conf_3 = internal.trans_classes;
  internal.dim_n_I_ICU_R_unconf_to_conf_1 = internal.N_age;
  internal.dim_n_I_ICU_R_unconf_to_conf_2 = internal.s_ICU_R;
  internal.dim_n_I_ICU_R_unconf_to_conf_3 = internal.trans_classes;
  internal.dim_n_I_triage_D_unconf_to_conf_1 = internal.N_age;
  internal.dim_n_I_triage_D_unconf_to_conf_2 = internal.s_triage;
  internal.dim_n_I_triage_D_unconf_to_conf_3 = internal.trans_classes;
  internal.dim_n_I_triage_R_unconf_to_conf_1 = internal.N_age;
  internal.dim_n_I_triage_R_unconf_to_conf_2 = internal.s_triage;
  internal.dim_n_I_triage_R_unconf_to_conf_3 = internal.trans_classes;
  internal.dim_n_II_asympt_1 = internal.N_age;
  internal.dim_n_II_asympt_2 = internal.s_asympt;
  internal.dim_n_II_asympt_3 = internal.trans_classes;
  internal.dim_n_II_comm_D_1 = internal.N_age;
  internal.dim_n_II_comm_D_2 = internal.s_comm_D;
  internal.dim_n_II_comm_D_3 = internal.trans_classes;
  internal.dim_n_II_hosp_D_conf_1 = internal.N_age;
  internal.dim_n_II_hosp_D_conf_2 = internal.s_hosp_D;
  internal.dim_n_II_hosp_D_conf_3 = internal.trans_classes;
  internal.dim_n_II_hosp_D_unconf_1 = internal.N_age;
  internal.dim_n_II_hosp_D_unconf_2 = internal.s_hosp_D;
  internal.dim_n_II_hosp_D_unconf_3 = internal.trans_classes;
  internal.dim_n_II_hosp_R_conf_1 = internal.N_age;
  internal.dim_n_II_hosp_R_conf_2 = internal.s_hosp_R;
  internal.dim_n_II_hosp_R_conf_3 = internal.trans_classes;
  internal.dim_n_II_hosp_R_unconf_1 = internal.N_age;
  internal.dim_n_II_hosp_R_unconf_2 = internal.s_hosp_R;
  internal.dim_n_II_hosp_R_unconf_3 = internal.trans_classes;
  internal.dim_n_II_ICU_D_conf_1 = internal.N_age;
  internal.dim_n_II_ICU_D_conf_2 = internal.s_ICU_D;
  internal.dim_n_II_ICU_D_conf_3 = internal.trans_classes;
  internal.dim_n_II_ICU_D_unconf_1 = internal.N_age;
  internal.dim_n_II_ICU_D_unconf_2 = internal.s_ICU_D;
  internal.dim_n_II_ICU_D_unconf_3 = internal.trans_classes;
  internal.dim_n_II_ICU_R_conf_1 = internal.N_age;
  internal.dim_n_II_ICU_R_conf_2 = internal.s_ICU_R;
  internal.dim_n_II_ICU_R_conf_3 = internal.trans_classes;
  internal.dim_n_II_ICU_R_unconf_1 = internal.N_age;
  internal.dim_n_II_ICU_R_unconf_2 = internal.s_ICU_R;
  internal.dim_n_II_ICU_R_unconf_3 = internal.trans_classes;
  internal.dim_n_II_ILI_1 = internal.N_age;
  internal.dim_n_II_ILI_2 = internal.s_ILI;
  internal.dim_n_II_ILI_3 = internal.trans_classes;
  internal.dim_n_II_mild_1 = internal.N_age;
  internal.dim_n_II_mild_2 = internal.s_mild;
  internal.dim_n_II_mild_3 = internal.trans_classes;
  internal.dim_n_II_triage_D_conf_1 = internal.N_age;
  internal.dim_n_II_triage_D_conf_2 = internal.s_triage;
  internal.dim_n_II_triage_D_conf_3 = internal.trans_classes;
  internal.dim_n_II_triage_D_unconf_1 = internal.N_age;
  internal.dim_n_II_triage_D_unconf_2 = internal.s_triage;
  internal.dim_n_II_triage_D_unconf_3 = internal.trans_classes;
  internal.dim_n_II_triage_R_conf_1 = internal.N_age;
  internal.dim_n_II_triage_R_conf_2 = internal.s_triage;
  internal.dim_n_II_triage_R_conf_3 = internal.trans_classes;
  internal.dim_n_II_triage_R_unconf_1 = internal.N_age;
  internal.dim_n_II_triage_R_unconf_2 = internal.s_triage;
  internal.dim_n_II_triage_R_unconf_3 = internal.trans_classes;
  internal.dim_n_ILI_to_comm_D_1 = internal.N_age;
  internal.dim_n_ILI_to_comm_D_2 = internal.trans_classes;
  internal.dim_n_ILI_to_hosp_1 = internal.N_age;
  internal.dim_n_ILI_to_hosp_2 = internal.trans_classes;
  internal.dim_n_ILI_to_hosp_D_1 = internal.N_age;
  internal.dim_n_ILI_to_hosp_D_2 = internal.trans_classes;
  internal.dim_n_ILI_to_hosp_D_conf_1 = internal.N_age;
  internal.dim_n_ILI_to_hosp_D_conf_2 = internal.trans_classes;
  internal.dim_n_ILI_to_hosp_out_1 = internal.N_age;
  internal.dim_n_ILI_to_hosp_out_2 = internal.trans_classes;
  internal.dim_n_ILI_to_hosp_R_1 = internal.N_age;
  internal.dim_n_ILI_to_hosp_R_2 = internal.trans_classes;
  internal.dim_n_ILI_to_hosp_R_conf_1 = internal.N_age;
  internal.dim_n_ILI_to_hosp_R_conf_2 = internal.trans_classes;
  internal.dim_n_ILI_to_R_1 = internal.N_age;
  internal.dim_n_ILI_to_R_2 = internal.trans_classes;
  internal.dim_n_ILI_to_triage_1 = internal.N_age;
  internal.dim_n_ILI_to_triage_2 = internal.trans_classes;
  internal.dim_n_ILI_to_triage_D_1 = internal.N_age;
  internal.dim_n_ILI_to_triage_D_2 = internal.trans_classes;
  internal.dim_n_ILI_to_triage_D_conf_1 = internal.N_age;
  internal.dim_n_ILI_to_triage_D_conf_2 = internal.trans_classes;
  internal.dim_n_ILI_to_triage_R_1 = internal.N_age;
  internal.dim_n_ILI_to_triage_R_2 = internal.trans_classes;
  internal.dim_n_ILI_to_triage_R_conf_1 = internal.N_age;
  internal.dim_n_ILI_to_triage_R_conf_2 = internal.trans_classes;
  internal.dim_n_PCR_pos_1 = internal.N_age;
  internal.dim_n_PCR_pos_2 = internal.s_PCR_pos;
  internal.dim_n_R_pre_1 = internal.N_age;
  internal.dim_n_R_pre_2 = 2;
  internal.dim_n_R_stepdown_conf_1 = internal.N_age;
  internal.dim_n_R_stepdown_conf_2 = internal.s_stepdown;
  internal.dim_n_R_stepdown_unconf_1 = internal.N_age;
  internal.dim_n_R_stepdown_unconf_2 = internal.s_stepdown;
  internal.dim_n_R_stepdown_unconf_to_conf_1 = internal.N_age;
  internal.dim_n_R_stepdown_unconf_to_conf_2 = internal.s_stepdown;
  internal.dim_n_SE = internal.N_age;
  internal.dim_N_tot = internal.N_age;
  internal.dim_N0_tot = internal.N_age;
  internal.dim_new_I_hosp_D_conf_1 = internal.N_age;
  internal.dim_new_I_hosp_D_conf_2 = internal.s_hosp_D;
  internal.dim_new_I_hosp_D_conf_3 = internal.trans_classes;
  internal.dim_new_I_hosp_D_unconf_1 = internal.N_age;
  internal.dim_new_I_hosp_D_unconf_2 = internal.s_hosp_D;
  internal.dim_new_I_hosp_D_unconf_3 = internal.trans_classes;
  internal.dim_new_I_hosp_R_conf_1 = internal.N_age;
  internal.dim_new_I_hosp_R_conf_2 = internal.s_hosp_R;
  internal.dim_new_I_hosp_R_conf_3 = internal.trans_classes;
  internal.dim_new_I_hosp_R_unconf_1 = internal.N_age;
  internal.dim_new_I_hosp_R_unconf_2 = internal.s_hosp_R;
  internal.dim_new_I_hosp_R_unconf_3 = internal.trans_classes;
  internal.dim_new_I_ICU_D_conf_1 = internal.N_age;
  internal.dim_new_I_ICU_D_conf_2 = internal.s_ICU_D;
  internal.dim_new_I_ICU_D_conf_3 = internal.trans_classes;
  internal.dim_new_I_ICU_D_unconf_1 = internal.N_age;
  internal.dim_new_I_ICU_D_unconf_2 = internal.s_ICU_D;
  internal.dim_new_I_ICU_D_unconf_3 = internal.trans_classes;
  internal.dim_new_I_ICU_R_conf_1 = internal.N_age;
  internal.dim_new_I_ICU_R_conf_2 = internal.s_ICU_R;
  internal.dim_new_I_ICU_R_conf_3 = internal.trans_classes;
  internal.dim_new_I_ICU_R_unconf_1 = internal.N_age;
  internal.dim_new_I_ICU_R_unconf_2 = internal.s_ICU_R;
  internal.dim_new_I_ICU_R_unconf_3 = internal.trans_classes;
  internal.dim_new_I_triage_D_conf_1 = internal.N_age;
  internal.dim_new_I_triage_D_conf_2 = internal.s_triage;
  internal.dim_new_I_triage_D_conf_3 = internal.trans_classes;
  internal.dim_new_I_triage_D_unconf_1 = internal.N_age;
  internal.dim_new_I_triage_D_unconf_2 = internal.s_triage;
  internal.dim_new_I_triage_D_unconf_3 = internal.trans_classes;
  internal.dim_new_I_triage_R_conf_1 = internal.N_age;
  internal.dim_new_I_triage_R_conf_2 = internal.s_triage;
  internal.dim_new_I_triage_R_conf_3 = internal.trans_classes;
  internal.dim_new_I_triage_R_unconf_1 = internal.N_age;
  internal.dim_new_I_triage_R_unconf_2 = internal.s_triage;
  internal.dim_new_I_triage_R_unconf_3 = internal.trans_classes;
  internal.dim_new_R_stepdown_conf_1 = internal.N_age;
  internal.dim_new_R_stepdown_conf_2 = internal.s_stepdown;
  internal.dim_new_R_stepdown_unconf_1 = internal.N_age;
  internal.dim_new_R_stepdown_unconf_2 = internal.s_stepdown;
  internal.dim_p_admit_conf = internal.N_age;
  internal.dim_p_asympt = internal.N_age;
  internal.dim_p_death_comm = internal.N_age;
  internal.dim_p_death_hosp_D = internal.N_age;
  internal.dim_p_death_ICU = internal.N_age;
  internal.dim_p_hosp_ILI = internal.N_age;
  internal.dim_p_ICU_hosp = internal.N_age;
  internal.dim_p_R_pre_1 = internal.N_age;
  internal.dim_p_R_pre_2 = 2;
  internal.dim_p_SE = internal.N_age;
  internal.dim_p_seroconversion = internal.N_age;
  internal.dim_p_sympt_ILI = internal.N_age;
  internal.dim_PCR_pos_1 = internal.N_age;
  internal.dim_PCR_pos_2 = internal.s_PCR_pos;
  internal.dim_PCR0_pos_1 = internal.N_age;
  internal.dim_PCR0_pos_2 = internal.s_PCR_pos;
  internal.dim_R = internal.N_age;
  internal.dim_R_neg = internal.N_age;
  internal.dim_R_pos = internal.N_age;
  internal.dim_R_pre_1 = internal.N_age;
  internal.dim_R_pre_2 = 2;
  internal.dim_R_stepdown_conf_1 = internal.N_age;
  internal.dim_R_stepdown_conf_2 = internal.s_stepdown;
  internal.dim_R_stepdown_unconf_1 = internal.N_age;
  internal.dim_R_stepdown_unconf_2 = internal.s_stepdown;
  internal.dim_R0 = internal.N_age;
  internal.dim_R0_neg = internal.N_age;
  internal.dim_R0_pos = internal.N_age;
  internal.dim_R0_pre_1 = internal.N_age;
  internal.dim_R0_pre_2 = 2;
  internal.dim_R0_stepdown_conf_1 = internal.N_age;
  internal.dim_R0_stepdown_conf_2 = internal.s_stepdown;
  internal.dim_R0_stepdown_unconf_1 = internal.N_age;
  internal.dim_R0_stepdown_unconf_2 = internal.s_stepdown;
  internal.dim_S = internal.N_age;
  internal.dim_s_ij_1 = internal.N_age;
  internal.dim_s_ij_2 = internal.N_age;
  internal.dim_S0 = internal.N_age;
  internal.dim_trans_increase_1 = internal.N_age;
  internal.dim_trans_increase_2 = internal.trans_classes;
  internal.dim_trans_profile_1 = internal.N_age;
  internal.dim_trans_profile_2 = internal.trans_classes;
  internal.initial_beta_out = internal.beta_step[0];
  internal.initial_cum_admit_conf = internal.cum0_admit_conf;
  internal.initial_cum_new_conf = internal.cum0_new_conf;
  internal.initial_N_tot2 = internal.N0_tot2;
  internal.p_EE = 1 - std::exp(- internal.gamma_E * internal.dt);
  internal.p_II_asympt = 1 - std::exp(- internal.gamma_asympt * internal.dt);
  internal.p_II_comm_D = 1 - std::exp(- internal.gamma_comm_D * internal.dt);
  internal.p_II_hosp_D = 1 - std::exp(- internal.gamma_hosp_D * internal.dt);
  internal.p_II_hosp_R = 1 - std::exp(- internal.gamma_hosp_R * internal.dt);
  internal.p_II_ICU_D = 1 - std::exp(- internal.gamma_ICU_D * internal.dt);
  internal.p_II_ICU_R = 1 - std::exp(- internal.gamma_ICU_R * internal.dt);
  internal.p_II_ILI = 1 - std::exp(- internal.gamma_ILI * internal.dt);
  internal.p_II_mild = 1 - std::exp(- internal.gamma_mild * internal.dt);
  internal.p_II_triage = 1 - std::exp(- internal.gamma_triage * internal.dt);
  internal.p_PCR_pos = 1 - std::exp(- internal.gamma_PCR_pos * internal.dt);
  internal.p_R_stepdown = 1 - std::exp(- internal.gamma_stepdown * internal.dt);
  internal.p_test = 1 - std::exp(- internal.gamma_test * internal.dt);
  internal.delta_D_comm = std::vector<real_t>(internal.dim_delta_D_comm);
  internal.delta_D_hosp = std::vector<real_t>(internal.dim_delta_D_hosp);
  internal.delta_R = std::vector<real_t>(internal.dim_delta_R);
  internal.delta_R_neg = std::vector<real_t>(internal.dim_delta_R_neg);
  internal.delta_R_pos = std::vector<real_t>(internal.dim_delta_R_pos);
  internal.initial_D_comm = std::vector<real_t>(internal.dim_D_comm);
  internal.initial_D_hosp = std::vector<real_t>(internal.dim_D_hosp);
  internal.initial_N_tot = std::vector<real_t>(internal.dim_N_tot);
  internal.initial_R = std::vector<real_t>(internal.dim_R);
  internal.initial_R_neg = std::vector<real_t>(internal.dim_R_neg);
  internal.initial_R_pos = std::vector<real_t>(internal.dim_R_pos);
  internal.initial_S = std::vector<real_t>(internal.dim_S);
  internal.lambda = std::vector<real_t>(internal.dim_lambda);
  internal.n_SE = std::vector<real_t>(internal.dim_n_SE);
  internal.p_SE = std::vector<real_t>(internal.dim_p_SE);
  internal.D0_comm = user_get_array_fixed<real_t, 1>(user, "D0_comm", internal.D0_comm, {internal.dim_D0_comm}, NA_REAL, NA_REAL);
  internal.D0_hosp = user_get_array_fixed<real_t, 1>(user, "D0_hosp", internal.D0_hosp, {internal.dim_D0_hosp}, NA_REAL, NA_REAL);
  internal.dim_aux_EE = internal.dim_aux_EE_1 * internal.dim_aux_EE_2 * internal.dim_aux_EE_3;
  internal.dim_aux_EE_12 = internal.dim_aux_EE_1 * internal.dim_aux_EE_2;
  internal.dim_aux_II_asympt = internal.dim_aux_II_asympt_1 * internal.dim_aux_II_asympt_2 * internal.dim_aux_II_asympt_3;
  internal.dim_aux_II_asympt_12 = internal.dim_aux_II_asympt_1 * internal.dim_aux_II_asympt_2;
  internal.dim_aux_II_comm_D = internal.dim_aux_II_comm_D_1 * internal.dim_aux_II_comm_D_2 * internal.dim_aux_II_comm_D_3;
  internal.dim_aux_II_comm_D_12 = internal.dim_aux_II_comm_D_1 * internal.dim_aux_II_comm_D_2;
  internal.dim_aux_II_hosp_D_conf = internal.dim_aux_II_hosp_D_conf_1 * internal.dim_aux_II_hosp_D_conf_2 * internal.dim_aux_II_hosp_D_conf_3;
  internal.dim_aux_II_hosp_D_conf_12 = internal.dim_aux_II_hosp_D_conf_1 * internal.dim_aux_II_hosp_D_conf_2;
  internal.dim_aux_II_hosp_D_unconf = internal.dim_aux_II_hosp_D_unconf_1 * internal.dim_aux_II_hosp_D_unconf_2 * internal.dim_aux_II_hosp_D_unconf_3;
  internal.dim_aux_II_hosp_D_unconf_12 = internal.dim_aux_II_hosp_D_unconf_1 * internal.dim_aux_II_hosp_D_unconf_2;
  internal.dim_aux_II_hosp_R_conf = internal.dim_aux_II_hosp_R_conf_1 * internal.dim_aux_II_hosp_R_conf_2 * internal.dim_aux_II_hosp_R_conf_3;
  internal.dim_aux_II_hosp_R_conf_12 = internal.dim_aux_II_hosp_R_conf_1 * internal.dim_aux_II_hosp_R_conf_2;
  internal.dim_aux_II_hosp_R_unconf = internal.dim_aux_II_hosp_R_unconf_1 * internal.dim_aux_II_hosp_R_unconf_2 * internal.dim_aux_II_hosp_R_unconf_3;
  internal.dim_aux_II_hosp_R_unconf_12 = internal.dim_aux_II_hosp_R_unconf_1 * internal.dim_aux_II_hosp_R_unconf_2;
  internal.dim_aux_II_ICU_D_conf = internal.dim_aux_II_ICU_D_conf_1 * internal.dim_aux_II_ICU_D_conf_2 * internal.dim_aux_II_ICU_D_conf_3;
  internal.dim_aux_II_ICU_D_conf_12 = internal.dim_aux_II_ICU_D_conf_1 * internal.dim_aux_II_ICU_D_conf_2;
  internal.dim_aux_II_ICU_D_unconf = internal.dim_aux_II_ICU_D_unconf_1 * internal.dim_aux_II_ICU_D_unconf_2 * internal.dim_aux_II_ICU_D_unconf_3;
  internal.dim_aux_II_ICU_D_unconf_12 = internal.dim_aux_II_ICU_D_unconf_1 * internal.dim_aux_II_ICU_D_unconf_2;
  internal.dim_aux_II_ICU_R_conf = internal.dim_aux_II_ICU_R_conf_1 * internal.dim_aux_II_ICU_R_conf_2 * internal.dim_aux_II_ICU_R_conf_3;
  internal.dim_aux_II_ICU_R_conf_12 = internal.dim_aux_II_ICU_R_conf_1 * internal.dim_aux_II_ICU_R_conf_2;
  internal.dim_aux_II_ICU_R_unconf = internal.dim_aux_II_ICU_R_unconf_1 * internal.dim_aux_II_ICU_R_unconf_2 * internal.dim_aux_II_ICU_R_unconf_3;
  internal.dim_aux_II_ICU_R_unconf_12 = internal.dim_aux_II_ICU_R_unconf_1 * internal.dim_aux_II_ICU_R_unconf_2;
  internal.dim_aux_II_ILI = internal.dim_aux_II_ILI_1 * internal.dim_aux_II_ILI_2 * internal.dim_aux_II_ILI_3;
  internal.dim_aux_II_ILI_12 = internal.dim_aux_II_ILI_1 * internal.dim_aux_II_ILI_2;
  internal.dim_aux_II_mild = internal.dim_aux_II_mild_1 * internal.dim_aux_II_mild_2 * internal.dim_aux_II_mild_3;
  internal.dim_aux_II_mild_12 = internal.dim_aux_II_mild_1 * internal.dim_aux_II_mild_2;
  internal.dim_aux_II_triage_D_conf = internal.dim_aux_II_triage_D_conf_1 * internal.dim_aux_II_triage_D_conf_2 * internal.dim_aux_II_triage_D_conf_3;
  internal.dim_aux_II_triage_D_conf_12 = internal.dim_aux_II_triage_D_conf_1 * internal.dim_aux_II_triage_D_conf_2;
  internal.dim_aux_II_triage_D_unconf = internal.dim_aux_II_triage_D_unconf_1 * internal.dim_aux_II_triage_D_unconf_2 * internal.dim_aux_II_triage_D_unconf_3;
  internal.dim_aux_II_triage_D_unconf_12 = internal.dim_aux_II_triage_D_unconf_1 * internal.dim_aux_II_triage_D_unconf_2;
  internal.dim_aux_II_triage_R_conf = internal.dim_aux_II_triage_R_conf_1 * internal.dim_aux_II_triage_R_conf_2 * internal.dim_aux_II_triage_R_conf_3;
  internal.dim_aux_II_triage_R_conf_12 = internal.dim_aux_II_triage_R_conf_1 * internal.dim_aux_II_triage_R_conf_2;
  internal.dim_aux_II_triage_R_unconf = internal.dim_aux_II_triage_R_unconf_1 * internal.dim_aux_II_triage_R_unconf_2 * internal.dim_aux_II_triage_R_unconf_3;
  internal.dim_aux_II_triage_R_unconf_12 = internal.dim_aux_II_triage_R_unconf_1 * internal.dim_aux_II_triage_R_unconf_2;
  internal.dim_aux_p_bin = internal.dim_aux_p_bin_1 * internal.dim_aux_p_bin_2;
  internal.dim_aux_R_stepdown_conf = internal.dim_aux_R_stepdown_conf_1 * internal.dim_aux_R_stepdown_conf_2;
  internal.dim_aux_R_stepdown_unconf = internal.dim_aux_R_stepdown_unconf_1 * internal.dim_aux_R_stepdown_unconf_2;
  internal.dim_delta_E = internal.dim_delta_E_1 * internal.dim_delta_E_2 * internal.dim_delta_E_3;
  internal.dim_delta_E_12 = internal.dim_delta_E_1 * internal.dim_delta_E_2;
  internal.dim_delta_I_asympt = internal.dim_delta_I_asympt_1 * internal.dim_delta_I_asympt_2 * internal.dim_delta_I_asympt_3;
  internal.dim_delta_I_asympt_12 = internal.dim_delta_I_asympt_1 * internal.dim_delta_I_asympt_2;
  internal.dim_delta_I_comm_D = internal.dim_delta_I_comm_D_1 * internal.dim_delta_I_comm_D_2 * internal.dim_delta_I_comm_D_3;
  internal.dim_delta_I_comm_D_12 = internal.dim_delta_I_comm_D_1 * internal.dim_delta_I_comm_D_2;
  internal.dim_delta_I_ILI = internal.dim_delta_I_ILI_1 * internal.dim_delta_I_ILI_2 * internal.dim_delta_I_ILI_3;
  internal.dim_delta_I_ILI_12 = internal.dim_delta_I_ILI_1 * internal.dim_delta_I_ILI_2;
  internal.dim_delta_I_mild = internal.dim_delta_I_mild_1 * internal.dim_delta_I_mild_2 * internal.dim_delta_I_mild_3;
  internal.dim_delta_I_mild_12 = internal.dim_delta_I_mild_1 * internal.dim_delta_I_mild_2;
  internal.dim_delta_PCR_pos = internal.dim_delta_PCR_pos_1 * internal.dim_delta_PCR_pos_2;
  internal.dim_E = internal.dim_E_1 * internal.dim_E_2 * internal.dim_E_3;
  internal.dim_E_12 = internal.dim_E_1 * internal.dim_E_2;
  internal.dim_E0 = internal.dim_E0_1 * internal.dim_E0_2 * internal.dim_E0_3;
  internal.dim_E0_12 = internal.dim_E0_1 * internal.dim_E0_2;
  internal.dim_I_asympt = internal.dim_I_asympt_1 * internal.dim_I_asympt_2 * internal.dim_I_asympt_3;
  internal.dim_I_asympt_12 = internal.dim_I_asympt_1 * internal.dim_I_asympt_2;
  internal.dim_I_comm_D = internal.dim_I_comm_D_1 * internal.dim_I_comm_D_2 * internal.dim_I_comm_D_3;
  internal.dim_I_comm_D_12 = internal.dim_I_comm_D_1 * internal.dim_I_comm_D_2;
  internal.dim_I_hosp_D_conf = internal.dim_I_hosp_D_conf_1 * internal.dim_I_hosp_D_conf_2 * internal.dim_I_hosp_D_conf_3;
  internal.dim_I_hosp_D_conf_12 = internal.dim_I_hosp_D_conf_1 * internal.dim_I_hosp_D_conf_2;
  internal.dim_I_hosp_D_unconf = internal.dim_I_hosp_D_unconf_1 * internal.dim_I_hosp_D_unconf_2 * internal.dim_I_hosp_D_unconf_3;
  internal.dim_I_hosp_D_unconf_12 = internal.dim_I_hosp_D_unconf_1 * internal.dim_I_hosp_D_unconf_2;
  internal.dim_I_hosp_R_conf = internal.dim_I_hosp_R_conf_1 * internal.dim_I_hosp_R_conf_2 * internal.dim_I_hosp_R_conf_3;
  internal.dim_I_hosp_R_conf_12 = internal.dim_I_hosp_R_conf_1 * internal.dim_I_hosp_R_conf_2;
  internal.dim_I_hosp_R_unconf = internal.dim_I_hosp_R_unconf_1 * internal.dim_I_hosp_R_unconf_2 * internal.dim_I_hosp_R_unconf_3;
  internal.dim_I_hosp_R_unconf_12 = internal.dim_I_hosp_R_unconf_1 * internal.dim_I_hosp_R_unconf_2;
  internal.dim_I_ICU_D_conf = internal.dim_I_ICU_D_conf_1 * internal.dim_I_ICU_D_conf_2 * internal.dim_I_ICU_D_conf_3;
  internal.dim_I_ICU_D_conf_12 = internal.dim_I_ICU_D_conf_1 * internal.dim_I_ICU_D_conf_2;
  internal.dim_I_ICU_D_unconf = internal.dim_I_ICU_D_unconf_1 * internal.dim_I_ICU_D_unconf_2 * internal.dim_I_ICU_D_unconf_3;
  internal.dim_I_ICU_D_unconf_12 = internal.dim_I_ICU_D_unconf_1 * internal.dim_I_ICU_D_unconf_2;
  internal.dim_I_ICU_R_conf = internal.dim_I_ICU_R_conf_1 * internal.dim_I_ICU_R_conf_2 * internal.dim_I_ICU_R_conf_3;
  internal.dim_I_ICU_R_conf_12 = internal.dim_I_ICU_R_conf_1 * internal.dim_I_ICU_R_conf_2;
  internal.dim_I_ICU_R_unconf = internal.dim_I_ICU_R_unconf_1 * internal.dim_I_ICU_R_unconf_2 * internal.dim_I_ICU_R_unconf_3;
  internal.dim_I_ICU_R_unconf_12 = internal.dim_I_ICU_R_unconf_1 * internal.dim_I_ICU_R_unconf_2;
  internal.dim_I_ILI = internal.dim_I_ILI_1 * internal.dim_I_ILI_2 * internal.dim_I_ILI_3;
  internal.dim_I_ILI_12 = internal.dim_I_ILI_1 * internal.dim_I_ILI_2;
  internal.dim_I_mild = internal.dim_I_mild_1 * internal.dim_I_mild_2 * internal.dim_I_mild_3;
  internal.dim_I_mild_12 = internal.dim_I_mild_1 * internal.dim_I_mild_2;
  internal.dim_I_triage_D_conf = internal.dim_I_triage_D_conf_1 * internal.dim_I_triage_D_conf_2 * internal.dim_I_triage_D_conf_3;
  internal.dim_I_triage_D_conf_12 = internal.dim_I_triage_D_conf_1 * internal.dim_I_triage_D_conf_2;
  internal.dim_I_triage_D_unconf = internal.dim_I_triage_D_unconf_1 * internal.dim_I_triage_D_unconf_2 * internal.dim_I_triage_D_unconf_3;
  internal.dim_I_triage_D_unconf_12 = internal.dim_I_triage_D_unconf_1 * internal.dim_I_triage_D_unconf_2;
  internal.dim_I_triage_R_conf = internal.dim_I_triage_R_conf_1 * internal.dim_I_triage_R_conf_2 * internal.dim_I_triage_R_conf_3;
  internal.dim_I_triage_R_conf_12 = internal.dim_I_triage_R_conf_1 * internal.dim_I_triage_R_conf_2;
  internal.dim_I_triage_R_unconf = internal.dim_I_triage_R_unconf_1 * internal.dim_I_triage_R_unconf_2 * internal.dim_I_triage_R_unconf_3;
  internal.dim_I_triage_R_unconf_12 = internal.dim_I_triage_R_unconf_1 * internal.dim_I_triage_R_unconf_2;
  internal.dim_I_with_diff_trans = internal.dim_I_with_diff_trans_1 * internal.dim_I_with_diff_trans_2;
  internal.dim_I0_asympt = internal.dim_I0_asympt_1 * internal.dim_I0_asympt_2 * internal.dim_I0_asympt_3;
  internal.dim_I0_asympt_12 = internal.dim_I0_asympt_1 * internal.dim_I0_asympt_2;
  internal.dim_I0_comm_D = internal.dim_I0_comm_D_1 * internal.dim_I0_comm_D_2 * internal.dim_I0_comm_D_3;
  internal.dim_I0_comm_D_12 = internal.dim_I0_comm_D_1 * internal.dim_I0_comm_D_2;
  internal.dim_I0_hosp_D_conf = internal.dim_I0_hosp_D_conf_1 * internal.dim_I0_hosp_D_conf_2 * internal.dim_I0_hosp_D_conf_3;
  internal.dim_I0_hosp_D_conf_12 = internal.dim_I0_hosp_D_conf_1 * internal.dim_I0_hosp_D_conf_2;
  internal.dim_I0_hosp_D_unconf = internal.dim_I0_hosp_D_unconf_1 * internal.dim_I0_hosp_D_unconf_2 * internal.dim_I0_hosp_D_unconf_3;
  internal.dim_I0_hosp_D_unconf_12 = internal.dim_I0_hosp_D_unconf_1 * internal.dim_I0_hosp_D_unconf_2;
  internal.dim_I0_hosp_R_conf = internal.dim_I0_hosp_R_conf_1 * internal.dim_I0_hosp_R_conf_2 * internal.dim_I0_hosp_R_conf_3;
  internal.dim_I0_hosp_R_conf_12 = internal.dim_I0_hosp_R_conf_1 * internal.dim_I0_hosp_R_conf_2;
  internal.dim_I0_hosp_R_unconf = internal.dim_I0_hosp_R_unconf_1 * internal.dim_I0_hosp_R_unconf_2 * internal.dim_I0_hosp_R_unconf_3;
  internal.dim_I0_hosp_R_unconf_12 = internal.dim_I0_hosp_R_unconf_1 * internal.dim_I0_hosp_R_unconf_2;
  internal.dim_I0_ICU_D_conf = internal.dim_I0_ICU_D_conf_1 * internal.dim_I0_ICU_D_conf_2 * internal.dim_I0_ICU_D_conf_3;
  internal.dim_I0_ICU_D_conf_12 = internal.dim_I0_ICU_D_conf_1 * internal.dim_I0_ICU_D_conf_2;
  internal.dim_I0_ICU_D_unconf = internal.dim_I0_ICU_D_unconf_1 * internal.dim_I0_ICU_D_unconf_2 * internal.dim_I0_ICU_D_unconf_3;
  internal.dim_I0_ICU_D_unconf_12 = internal.dim_I0_ICU_D_unconf_1 * internal.dim_I0_ICU_D_unconf_2;
  internal.dim_I0_ICU_R_conf = internal.dim_I0_ICU_R_conf_1 * internal.dim_I0_ICU_R_conf_2 * internal.dim_I0_ICU_R_conf_3;
  internal.dim_I0_ICU_R_conf_12 = internal.dim_I0_ICU_R_conf_1 * internal.dim_I0_ICU_R_conf_2;
  internal.dim_I0_ICU_R_unconf = internal.dim_I0_ICU_R_unconf_1 * internal.dim_I0_ICU_R_unconf_2 * internal.dim_I0_ICU_R_unconf_3;
  internal.dim_I0_ICU_R_unconf_12 = internal.dim_I0_ICU_R_unconf_1 * internal.dim_I0_ICU_R_unconf_2;
  internal.dim_I0_ILI = internal.dim_I0_ILI_1 * internal.dim_I0_ILI_2 * internal.dim_I0_ILI_3;
  internal.dim_I0_ILI_12 = internal.dim_I0_ILI_1 * internal.dim_I0_ILI_2;
  internal.dim_I0_mild = internal.dim_I0_mild_1 * internal.dim_I0_mild_2 * internal.dim_I0_mild_3;
  internal.dim_I0_mild_12 = internal.dim_I0_mild_1 * internal.dim_I0_mild_2;
  internal.dim_I0_triage_D_conf = internal.dim_I0_triage_D_conf_1 * internal.dim_I0_triage_D_conf_2 * internal.dim_I0_triage_D_conf_3;
  internal.dim_I0_triage_D_conf_12 = internal.dim_I0_triage_D_conf_1 * internal.dim_I0_triage_D_conf_2;
  internal.dim_I0_triage_D_unconf = internal.dim_I0_triage_D_unconf_1 * internal.dim_I0_triage_D_unconf_2 * internal.dim_I0_triage_D_unconf_3;
  internal.dim_I0_triage_D_unconf_12 = internal.dim_I0_triage_D_unconf_1 * internal.dim_I0_triage_D_unconf_2;
  internal.dim_I0_triage_R_conf = internal.dim_I0_triage_R_conf_1 * internal.dim_I0_triage_R_conf_2 * internal.dim_I0_triage_R_conf_3;
  internal.dim_I0_triage_R_conf_12 = internal.dim_I0_triage_R_conf_1 * internal.dim_I0_triage_R_conf_2;
  internal.dim_I0_triage_R_unconf = internal.dim_I0_triage_R_unconf_1 * internal.dim_I0_triage_R_unconf_2 * internal.dim_I0_triage_R_unconf_3;
  internal.dim_I0_triage_R_unconf_12 = internal.dim_I0_triage_R_unconf_1 * internal.dim_I0_triage_R_unconf_2;
  internal.dim_m = internal.dim_m_1 * internal.dim_m_2;
  internal.dim_n_com_to_R_pre = internal.dim_n_com_to_R_pre_1 * internal.dim_n_com_to_R_pre_2;
  internal.dim_n_EE = internal.dim_n_EE_1 * internal.dim_n_EE_2 * internal.dim_n_EE_3;
  internal.dim_n_EE_12 = internal.dim_n_EE_1 * internal.dim_n_EE_2;
  internal.dim_n_EI_asympt = internal.dim_n_EI_asympt_1 * internal.dim_n_EI_asympt_2;
  internal.dim_n_EI_ILI = internal.dim_n_EI_ILI_1 * internal.dim_n_EI_ILI_2;
  internal.dim_n_EI_mild = internal.dim_n_EI_mild_1 * internal.dim_n_EI_mild_2;
  internal.dim_n_hosp_non_ICU = internal.dim_n_hosp_non_ICU_1 * internal.dim_n_hosp_non_ICU_2;
  internal.dim_n_I_hosp_D_unconf_to_conf = internal.dim_n_I_hosp_D_unconf_to_conf_1 * internal.dim_n_I_hosp_D_unconf_to_conf_2 * internal.dim_n_I_hosp_D_unconf_to_conf_3;
  internal.dim_n_I_hosp_D_unconf_to_conf_12 = internal.dim_n_I_hosp_D_unconf_to_conf_1 * internal.dim_n_I_hosp_D_unconf_to_conf_2;
  internal.dim_n_I_hosp_R_unconf_to_conf = internal.dim_n_I_hosp_R_unconf_to_conf_1 * internal.dim_n_I_hosp_R_unconf_to_conf_2 * internal.dim_n_I_hosp_R_unconf_to_conf_3;
  internal.dim_n_I_hosp_R_unconf_to_conf_12 = internal.dim_n_I_hosp_R_unconf_to_conf_1 * internal.dim_n_I_hosp_R_unconf_to_conf_2;
  internal.dim_n_I_ICU_D_unconf_to_conf = internal.dim_n_I_ICU_D_unconf_to_conf_1 * internal.dim_n_I_ICU_D_unconf_to_conf_2 * internal.dim_n_I_ICU_D_unconf_to_conf_3;
  internal.dim_n_I_ICU_D_unconf_to_conf_12 = internal.dim_n_I_ICU_D_unconf_to_conf_1 * internal.dim_n_I_ICU_D_unconf_to_conf_2;
  internal.dim_n_I_ICU_R_unconf_to_conf = internal.dim_n_I_ICU_R_unconf_to_conf_1 * internal.dim_n_I_ICU_R_unconf_to_conf_2 * internal.dim_n_I_ICU_R_unconf_to_conf_3;
  internal.dim_n_I_ICU_R_unconf_to_conf_12 = internal.dim_n_I_ICU_R_unconf_to_conf_1 * internal.dim_n_I_ICU_R_unconf_to_conf_2;
  internal.dim_n_I_triage_D_unconf_to_conf = internal.dim_n_I_triage_D_unconf_to_conf_1 * internal.dim_n_I_triage_D_unconf_to_conf_2 * internal.dim_n_I_triage_D_unconf_to_conf_3;
  internal.dim_n_I_triage_D_unconf_to_conf_12 = internal.dim_n_I_triage_D_unconf_to_conf_1 * internal.dim_n_I_triage_D_unconf_to_conf_2;
  internal.dim_n_I_triage_R_unconf_to_conf = internal.dim_n_I_triage_R_unconf_to_conf_1 * internal.dim_n_I_triage_R_unconf_to_conf_2 * internal.dim_n_I_triage_R_unconf_to_conf_3;
  internal.dim_n_I_triage_R_unconf_to_conf_12 = internal.dim_n_I_triage_R_unconf_to_conf_1 * internal.dim_n_I_triage_R_unconf_to_conf_2;
  internal.dim_n_II_asympt = internal.dim_n_II_asympt_1 * internal.dim_n_II_asympt_2 * internal.dim_n_II_asympt_3;
  internal.dim_n_II_asympt_12 = internal.dim_n_II_asympt_1 * internal.dim_n_II_asympt_2;
  internal.dim_n_II_comm_D = internal.dim_n_II_comm_D_1 * internal.dim_n_II_comm_D_2 * internal.dim_n_II_comm_D_3;
  internal.dim_n_II_comm_D_12 = internal.dim_n_II_comm_D_1 * internal.dim_n_II_comm_D_2;
  internal.dim_n_II_hosp_D_conf = internal.dim_n_II_hosp_D_conf_1 * internal.dim_n_II_hosp_D_conf_2 * internal.dim_n_II_hosp_D_conf_3;
  internal.dim_n_II_hosp_D_conf_12 = internal.dim_n_II_hosp_D_conf_1 * internal.dim_n_II_hosp_D_conf_2;
  internal.dim_n_II_hosp_D_unconf = internal.dim_n_II_hosp_D_unconf_1 * internal.dim_n_II_hosp_D_unconf_2 * internal.dim_n_II_hosp_D_unconf_3;
  internal.dim_n_II_hosp_D_unconf_12 = internal.dim_n_II_hosp_D_unconf_1 * internal.dim_n_II_hosp_D_unconf_2;
  internal.dim_n_II_hosp_R_conf = internal.dim_n_II_hosp_R_conf_1 * internal.dim_n_II_hosp_R_conf_2 * internal.dim_n_II_hosp_R_conf_3;
  internal.dim_n_II_hosp_R_conf_12 = internal.dim_n_II_hosp_R_conf_1 * internal.dim_n_II_hosp_R_conf_2;
  internal.dim_n_II_hosp_R_unconf = internal.dim_n_II_hosp_R_unconf_1 * internal.dim_n_II_hosp_R_unconf_2 * internal.dim_n_II_hosp_R_unconf_3;
  internal.dim_n_II_hosp_R_unconf_12 = internal.dim_n_II_hosp_R_unconf_1 * internal.dim_n_II_hosp_R_unconf_2;
  internal.dim_n_II_ICU_D_conf = internal.dim_n_II_ICU_D_conf_1 * internal.dim_n_II_ICU_D_conf_2 * internal.dim_n_II_ICU_D_conf_3;
  internal.dim_n_II_ICU_D_conf_12 = internal.dim_n_II_ICU_D_conf_1 * internal.dim_n_II_ICU_D_conf_2;
  internal.dim_n_II_ICU_D_unconf = internal.dim_n_II_ICU_D_unconf_1 * internal.dim_n_II_ICU_D_unconf_2 * internal.dim_n_II_ICU_D_unconf_3;
  internal.dim_n_II_ICU_D_unconf_12 = internal.dim_n_II_ICU_D_unconf_1 * internal.dim_n_II_ICU_D_unconf_2;
  internal.dim_n_II_ICU_R_conf = internal.dim_n_II_ICU_R_conf_1 * internal.dim_n_II_ICU_R_conf_2 * internal.dim_n_II_ICU_R_conf_3;
  internal.dim_n_II_ICU_R_conf_12 = internal.dim_n_II_ICU_R_conf_1 * internal.dim_n_II_ICU_R_conf_2;
  internal.dim_n_II_ICU_R_unconf = internal.dim_n_II_ICU_R_unconf_1 * internal.dim_n_II_ICU_R_unconf_2 * internal.dim_n_II_ICU_R_unconf_3;
  internal.dim_n_II_ICU_R_unconf_12 = internal.dim_n_II_ICU_R_unconf_1 * internal.dim_n_II_ICU_R_unconf_2;
  internal.dim_n_II_ILI = internal.dim_n_II_ILI_1 * internal.dim_n_II_ILI_2 * internal.dim_n_II_ILI_3;
  internal.dim_n_II_ILI_12 = internal.dim_n_II_ILI_1 * internal.dim_n_II_ILI_2;
  internal.dim_n_II_mild = internal.dim_n_II_mild_1 * internal.dim_n_II_mild_2 * internal.dim_n_II_mild_3;
  internal.dim_n_II_mild_12 = internal.dim_n_II_mild_1 * internal.dim_n_II_mild_2;
  internal.dim_n_II_triage_D_conf = internal.dim_n_II_triage_D_conf_1 * internal.dim_n_II_triage_D_conf_2 * internal.dim_n_II_triage_D_conf_3;
  internal.dim_n_II_triage_D_conf_12 = internal.dim_n_II_triage_D_conf_1 * internal.dim_n_II_triage_D_conf_2;
  internal.dim_n_II_triage_D_unconf = internal.dim_n_II_triage_D_unconf_1 * internal.dim_n_II_triage_D_unconf_2 * internal.dim_n_II_triage_D_unconf_3;
  internal.dim_n_II_triage_D_unconf_12 = internal.dim_n_II_triage_D_unconf_1 * internal.dim_n_II_triage_D_unconf_2;
  internal.dim_n_II_triage_R_conf = internal.dim_n_II_triage_R_conf_1 * internal.dim_n_II_triage_R_conf_2 * internal.dim_n_II_triage_R_conf_3;
  internal.dim_n_II_triage_R_conf_12 = internal.dim_n_II_triage_R_conf_1 * internal.dim_n_II_triage_R_conf_2;
  internal.dim_n_II_triage_R_unconf = internal.dim_n_II_triage_R_unconf_1 * internal.dim_n_II_triage_R_unconf_2 * internal.dim_n_II_triage_R_unconf_3;
  internal.dim_n_II_triage_R_unconf_12 = internal.dim_n_II_triage_R_unconf_1 * internal.dim_n_II_triage_R_unconf_2;
  internal.dim_n_ILI_to_comm_D = internal.dim_n_ILI_to_comm_D_1 * internal.dim_n_ILI_to_comm_D_2;
  internal.dim_n_ILI_to_hosp = internal.dim_n_ILI_to_hosp_1 * internal.dim_n_ILI_to_hosp_2;
  internal.dim_n_ILI_to_hosp_D = internal.dim_n_ILI_to_hosp_D_1 * internal.dim_n_ILI_to_hosp_D_2;
  internal.dim_n_ILI_to_hosp_D_conf = internal.dim_n_ILI_to_hosp_D_conf_1 * internal.dim_n_ILI_to_hosp_D_conf_2;
  internal.dim_n_ILI_to_hosp_out = internal.dim_n_ILI_to_hosp_out_1 * internal.dim_n_ILI_to_hosp_out_2;
  internal.dim_n_ILI_to_hosp_R = internal.dim_n_ILI_to_hosp_R_1 * internal.dim_n_ILI_to_hosp_R_2;
  internal.dim_n_ILI_to_hosp_R_conf = internal.dim_n_ILI_to_hosp_R_conf_1 * internal.dim_n_ILI_to_hosp_R_conf_2;
  internal.dim_n_ILI_to_R = internal.dim_n_ILI_to_R_1 * internal.dim_n_ILI_to_R_2;
  internal.dim_n_ILI_to_triage = internal.dim_n_ILI_to_triage_1 * internal.dim_n_ILI_to_triage_2;
  internal.dim_n_ILI_to_triage_D = internal.dim_n_ILI_to_triage_D_1 * internal.dim_n_ILI_to_triage_D_2;
  internal.dim_n_ILI_to_triage_D_conf = internal.dim_n_ILI_to_triage_D_conf_1 * internal.dim_n_ILI_to_triage_D_conf_2;
  internal.dim_n_ILI_to_triage_R = internal.dim_n_ILI_to_triage_R_1 * internal.dim_n_ILI_to_triage_R_2;
  internal.dim_n_ILI_to_triage_R_conf = internal.dim_n_ILI_to_triage_R_conf_1 * internal.dim_n_ILI_to_triage_R_conf_2;
  internal.dim_n_PCR_pos = internal.dim_n_PCR_pos_1 * internal.dim_n_PCR_pos_2;
  internal.dim_n_R_pre = internal.dim_n_R_pre_1 * internal.dim_n_R_pre_2;
  internal.dim_n_R_stepdown_conf = internal.dim_n_R_stepdown_conf_1 * internal.dim_n_R_stepdown_conf_2;
  internal.dim_n_R_stepdown_unconf = internal.dim_n_R_stepdown_unconf_1 * internal.dim_n_R_stepdown_unconf_2;
  internal.dim_n_R_stepdown_unconf_to_conf = internal.dim_n_R_stepdown_unconf_to_conf_1 * internal.dim_n_R_stepdown_unconf_to_conf_2;
  internal.dim_new_I_hosp_D_conf = internal.dim_new_I_hosp_D_conf_1 * internal.dim_new_I_hosp_D_conf_2 * internal.dim_new_I_hosp_D_conf_3;
  internal.dim_new_I_hosp_D_conf_12 = internal.dim_new_I_hosp_D_conf_1 * internal.dim_new_I_hosp_D_conf_2;
  internal.dim_new_I_hosp_D_unconf = internal.dim_new_I_hosp_D_unconf_1 * internal.dim_new_I_hosp_D_unconf_2 * internal.dim_new_I_hosp_D_unconf_3;
  internal.dim_new_I_hosp_D_unconf_12 = internal.dim_new_I_hosp_D_unconf_1 * internal.dim_new_I_hosp_D_unconf_2;
  internal.dim_new_I_hosp_R_conf = internal.dim_new_I_hosp_R_conf_1 * internal.dim_new_I_hosp_R_conf_2 * internal.dim_new_I_hosp_R_conf_3;
  internal.dim_new_I_hosp_R_conf_12 = internal.dim_new_I_hosp_R_conf_1 * internal.dim_new_I_hosp_R_conf_2;
  internal.dim_new_I_hosp_R_unconf = internal.dim_new_I_hosp_R_unconf_1 * internal.dim_new_I_hosp_R_unconf_2 * internal.dim_new_I_hosp_R_unconf_3;
  internal.dim_new_I_hosp_R_unconf_12 = internal.dim_new_I_hosp_R_unconf_1 * internal.dim_new_I_hosp_R_unconf_2;
  internal.dim_new_I_ICU_D_conf = internal.dim_new_I_ICU_D_conf_1 * internal.dim_new_I_ICU_D_conf_2 * internal.dim_new_I_ICU_D_conf_3;
  internal.dim_new_I_ICU_D_conf_12 = internal.dim_new_I_ICU_D_conf_1 * internal.dim_new_I_ICU_D_conf_2;
  internal.dim_new_I_ICU_D_unconf = internal.dim_new_I_ICU_D_unconf_1 * internal.dim_new_I_ICU_D_unconf_2 * internal.dim_new_I_ICU_D_unconf_3;
  internal.dim_new_I_ICU_D_unconf_12 = internal.dim_new_I_ICU_D_unconf_1 * internal.dim_new_I_ICU_D_unconf_2;
  internal.dim_new_I_ICU_R_conf = internal.dim_new_I_ICU_R_conf_1 * internal.dim_new_I_ICU_R_conf_2 * internal.dim_new_I_ICU_R_conf_3;
  internal.dim_new_I_ICU_R_conf_12 = internal.dim_new_I_ICU_R_conf_1 * internal.dim_new_I_ICU_R_conf_2;
  internal.dim_new_I_ICU_R_unconf = internal.dim_new_I_ICU_R_unconf_1 * internal.dim_new_I_ICU_R_unconf_2 * internal.dim_new_I_ICU_R_unconf_3;
  internal.dim_new_I_ICU_R_unconf_12 = internal.dim_new_I_ICU_R_unconf_1 * internal.dim_new_I_ICU_R_unconf_2;
  internal.dim_new_I_triage_D_conf = internal.dim_new_I_triage_D_conf_1 * internal.dim_new_I_triage_D_conf_2 * internal.dim_new_I_triage_D_conf_3;
  internal.dim_new_I_triage_D_conf_12 = internal.dim_new_I_triage_D_conf_1 * internal.dim_new_I_triage_D_conf_2;
  internal.dim_new_I_triage_D_unconf = internal.dim_new_I_triage_D_unconf_1 * internal.dim_new_I_triage_D_unconf_2 * internal.dim_new_I_triage_D_unconf_3;
  internal.dim_new_I_triage_D_unconf_12 = internal.dim_new_I_triage_D_unconf_1 * internal.dim_new_I_triage_D_unconf_2;
  internal.dim_new_I_triage_R_conf = internal.dim_new_I_triage_R_conf_1 * internal.dim_new_I_triage_R_conf_2 * internal.dim_new_I_triage_R_conf_3;
  internal.dim_new_I_triage_R_conf_12 = internal.dim_new_I_triage_R_conf_1 * internal.dim_new_I_triage_R_conf_2;
  internal.dim_new_I_triage_R_unconf = internal.dim_new_I_triage_R_unconf_1 * internal.dim_new_I_triage_R_unconf_2 * internal.dim_new_I_triage_R_unconf_3;
  internal.dim_new_I_triage_R_unconf_12 = internal.dim_new_I_triage_R_unconf_1 * internal.dim_new_I_triage_R_unconf_2;
  internal.dim_new_R_stepdown_conf = internal.dim_new_R_stepdown_conf_1 * internal.dim_new_R_stepdown_conf_2;
  internal.dim_new_R_stepdown_unconf = internal.dim_new_R_stepdown_unconf_1 * internal.dim_new_R_stepdown_unconf_2;
  internal.dim_p_R_pre = internal.dim_p_R_pre_1 * internal.dim_p_R_pre_2;
  internal.dim_PCR_pos = internal.dim_PCR_pos_1 * internal.dim_PCR_pos_2;
  internal.dim_PCR0_pos = internal.dim_PCR0_pos_1 * internal.dim_PCR0_pos_2;
  internal.dim_R_pre = internal.dim_R_pre_1 * internal.dim_R_pre_2;
  internal.dim_R_stepdown_conf = internal.dim_R_stepdown_conf_1 * internal.dim_R_stepdown_conf_2;
  internal.dim_R_stepdown_unconf = internal.dim_R_stepdown_unconf_1 * internal.dim_R_stepdown_unconf_2;
  internal.dim_R0_pre = internal.dim_R0_pre_1 * internal.dim_R0_pre_2;
  internal.dim_R0_stepdown_conf = internal.dim_R0_stepdown_conf_1 * internal.dim_R0_stepdown_conf_2;
  internal.dim_R0_stepdown_unconf = internal.dim_R0_stepdown_unconf_1 * internal.dim_R0_stepdown_unconf_2;
  internal.dim_s_ij = internal.dim_s_ij_1 * internal.dim_s_ij_2;
  internal.dim_trans_increase = internal.dim_trans_increase_1 * internal.dim_trans_increase_2;
  internal.dim_trans_profile = internal.dim_trans_profile_1 * internal.dim_trans_profile_2;
  {
     int_t i = 1;
     internal.gamma_R_pre[i - 1] = internal.gamma_R_pre_1;
  }
  {
     int_t i = 2;
     internal.gamma_R_pre[i - 1] = internal.gamma_R_pre_2;
  }
  internal.N0_tot = user_get_array_fixed<real_t, 1>(user, "N0_tot", internal.N0_tot, {internal.dim_N0_tot}, NA_REAL, NA_REAL);
  internal.offset_variable_D_comm = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp;
  internal.offset_variable_D_hosp = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R;
  internal.offset_variable_n_ILI_to_hosp_out = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot;
  internal.offset_variable_N_tot = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm;
  internal.offset_variable_R = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg;
  internal.offset_variable_R_neg = 5 + internal.dim_S + internal.dim_R_pos;
  internal.offset_variable_R_pos = 5 + internal.dim_S;
  internal.p_admit_conf = user_get_array_fixed<real_t, 1>(user, "p_admit_conf", internal.p_admit_conf, {internal.dim_p_admit_conf}, NA_REAL, NA_REAL);
  internal.p_asympt = user_get_array_fixed<real_t, 1>(user, "p_asympt", internal.p_asympt, {internal.dim_p_asympt}, NA_REAL, NA_REAL);
  internal.p_death_comm = user_get_array_fixed<real_t, 1>(user, "p_death_comm", internal.p_death_comm, {internal.dim_p_death_comm}, NA_REAL, NA_REAL);
  internal.p_death_hosp_D = user_get_array_fixed<real_t, 1>(user, "p_death_hosp_D", internal.p_death_hosp_D, {internal.dim_p_death_hosp_D}, NA_REAL, NA_REAL);
  internal.p_death_ICU = user_get_array_fixed<real_t, 1>(user, "p_death_ICU", internal.p_death_ICU, {internal.dim_p_death_ICU}, NA_REAL, NA_REAL);
  internal.p_hosp_ILI = user_get_array_fixed<real_t, 1>(user, "p_hosp_ILI", internal.p_hosp_ILI, {internal.dim_p_hosp_ILI}, NA_REAL, NA_REAL);
  internal.p_ICU_hosp = user_get_array_fixed<real_t, 1>(user, "p_ICU_hosp", internal.p_ICU_hosp, {internal.dim_p_ICU_hosp}, NA_REAL, NA_REAL);
  internal.p_seroconversion = user_get_array_fixed<real_t, 1>(user, "p_seroconversion", internal.p_seroconversion, {internal.dim_p_seroconversion}, NA_REAL, NA_REAL);
  internal.p_sympt_ILI = user_get_array_fixed<real_t, 1>(user, "p_sympt_ILI", internal.p_sympt_ILI, {internal.dim_p_sympt_ILI}, NA_REAL, NA_REAL);
  internal.R0 = user_get_array_fixed<real_t, 1>(user, "R0", internal.R0, {internal.dim_R0}, NA_REAL, NA_REAL);
  internal.R0_neg = user_get_array_fixed<real_t, 1>(user, "R0_neg", internal.R0_neg, {internal.dim_R0_neg}, NA_REAL, NA_REAL);
  internal.R0_pos = user_get_array_fixed<real_t, 1>(user, "R0_pos", internal.R0_pos, {internal.dim_R0_pos}, NA_REAL, NA_REAL);
  internal.S0 = user_get_array_fixed<real_t, 1>(user, "S0", internal.S0, {internal.dim_S0}, NA_REAL, NA_REAL);
  internal.aux_EE = std::vector<real_t>(internal.dim_aux_EE);
  internal.aux_II_asympt = std::vector<real_t>(internal.dim_aux_II_asympt);
  internal.aux_II_comm_D = std::vector<real_t>(internal.dim_aux_II_comm_D);
  internal.aux_II_hosp_D_conf = std::vector<real_t>(internal.dim_aux_II_hosp_D_conf);
  internal.aux_II_hosp_D_unconf = std::vector<real_t>(internal.dim_aux_II_hosp_D_unconf);
  internal.aux_II_hosp_R_conf = std::vector<real_t>(internal.dim_aux_II_hosp_R_conf);
  internal.aux_II_hosp_R_unconf = std::vector<real_t>(internal.dim_aux_II_hosp_R_unconf);
  internal.aux_II_ICU_D_conf = std::vector<real_t>(internal.dim_aux_II_ICU_D_conf);
  internal.aux_II_ICU_D_unconf = std::vector<real_t>(internal.dim_aux_II_ICU_D_unconf);
  internal.aux_II_ICU_R_conf = std::vector<real_t>(internal.dim_aux_II_ICU_R_conf);
  internal.aux_II_ICU_R_unconf = std::vector<real_t>(internal.dim_aux_II_ICU_R_unconf);
  internal.aux_II_ILI = std::vector<real_t>(internal.dim_aux_II_ILI);
  internal.aux_II_mild = std::vector<real_t>(internal.dim_aux_II_mild);
  internal.aux_II_triage_D_conf = std::vector<real_t>(internal.dim_aux_II_triage_D_conf);
  internal.aux_II_triage_D_unconf = std::vector<real_t>(internal.dim_aux_II_triage_D_unconf);
  internal.aux_II_triage_R_conf = std::vector<real_t>(internal.dim_aux_II_triage_R_conf);
  internal.aux_II_triage_R_unconf = std::vector<real_t>(internal.dim_aux_II_triage_R_unconf);
  internal.aux_p_bin = std::vector<real_t>(internal.dim_aux_p_bin);
  internal.aux_R_stepdown_conf = std::vector<real_t>(internal.dim_aux_R_stepdown_conf);
  internal.aux_R_stepdown_unconf = std::vector<real_t>(internal.dim_aux_R_stepdown_unconf);
  internal.delta_E = std::vector<real_t>(internal.dim_delta_E);
  internal.delta_I_asympt = std::vector<real_t>(internal.dim_delta_I_asympt);
  internal.delta_I_comm_D = std::vector<real_t>(internal.dim_delta_I_comm_D);
  internal.delta_I_ILI = std::vector<real_t>(internal.dim_delta_I_ILI);
  internal.delta_I_mild = std::vector<real_t>(internal.dim_delta_I_mild);
  internal.delta_PCR_pos = std::vector<real_t>(internal.dim_delta_PCR_pos);
  internal.I_with_diff_trans = std::vector<real_t>(internal.dim_I_with_diff_trans);
  internal.initial_E = std::vector<real_t>(internal.dim_E);
  internal.initial_I_asympt = std::vector<real_t>(internal.dim_I_asympt);
  internal.initial_I_comm_D = std::vector<real_t>(internal.dim_I_comm_D);
  internal.initial_I_hosp_D_conf = std::vector<real_t>(internal.dim_I_hosp_D_conf);
  internal.initial_I_hosp_D_unconf = std::vector<real_t>(internal.dim_I_hosp_D_unconf);
  internal.initial_I_hosp_R_conf = std::vector<real_t>(internal.dim_I_hosp_R_conf);
  internal.initial_I_hosp_R_unconf = std::vector<real_t>(internal.dim_I_hosp_R_unconf);
  internal.initial_I_ICU_D_conf = std::vector<real_t>(internal.dim_I_ICU_D_conf);
  internal.initial_I_ICU_D_unconf = std::vector<real_t>(internal.dim_I_ICU_D_unconf);
  internal.initial_I_ICU_R_conf = std::vector<real_t>(internal.dim_I_ICU_R_conf);
  internal.initial_I_ICU_R_unconf = std::vector<real_t>(internal.dim_I_ICU_R_unconf);
  internal.initial_I_ILI = std::vector<real_t>(internal.dim_I_ILI);
  internal.initial_I_mild = std::vector<real_t>(internal.dim_I_mild);
  internal.initial_I_triage_D_conf = std::vector<real_t>(internal.dim_I_triage_D_conf);
  internal.initial_I_triage_D_unconf = std::vector<real_t>(internal.dim_I_triage_D_unconf);
  internal.initial_I_triage_R_conf = std::vector<real_t>(internal.dim_I_triage_R_conf);
  internal.initial_I_triage_R_unconf = std::vector<real_t>(internal.dim_I_triage_R_unconf);
  internal.initial_n_ILI_to_hosp_out = std::vector<real_t>(internal.dim_n_ILI_to_hosp_out);
  internal.initial_PCR_pos = std::vector<real_t>(internal.dim_PCR_pos);
  internal.initial_R_pre = std::vector<real_t>(internal.dim_R_pre);
  internal.initial_R_stepdown_conf = std::vector<real_t>(internal.dim_R_stepdown_conf);
  internal.initial_R_stepdown_unconf = std::vector<real_t>(internal.dim_R_stepdown_unconf);
  internal.n_com_to_R_pre = std::vector<real_t>(internal.dim_n_com_to_R_pre);
  internal.n_EE = std::vector<real_t>(internal.dim_n_EE);
  internal.n_EI_asympt = std::vector<real_t>(internal.dim_n_EI_asympt);
  internal.n_EI_ILI = std::vector<real_t>(internal.dim_n_EI_ILI);
  internal.n_EI_mild = std::vector<real_t>(internal.dim_n_EI_mild);
  internal.n_hosp_non_ICU = std::vector<real_t>(internal.dim_n_hosp_non_ICU);
  internal.n_I_hosp_D_unconf_to_conf = std::vector<real_t>(internal.dim_n_I_hosp_D_unconf_to_conf);
  internal.n_I_hosp_R_unconf_to_conf = std::vector<real_t>(internal.dim_n_I_hosp_R_unconf_to_conf);
  internal.n_I_ICU_D_unconf_to_conf = std::vector<real_t>(internal.dim_n_I_ICU_D_unconf_to_conf);
  internal.n_I_ICU_R_unconf_to_conf = std::vector<real_t>(internal.dim_n_I_ICU_R_unconf_to_conf);
  internal.n_I_triage_D_unconf_to_conf = std::vector<real_t>(internal.dim_n_I_triage_D_unconf_to_conf);
  internal.n_I_triage_R_unconf_to_conf = std::vector<real_t>(internal.dim_n_I_triage_R_unconf_to_conf);
  internal.n_II_asympt = std::vector<real_t>(internal.dim_n_II_asympt);
  internal.n_II_comm_D = std::vector<real_t>(internal.dim_n_II_comm_D);
  internal.n_II_hosp_D_conf = std::vector<real_t>(internal.dim_n_II_hosp_D_conf);
  internal.n_II_hosp_D_unconf = std::vector<real_t>(internal.dim_n_II_hosp_D_unconf);
  internal.n_II_hosp_R_conf = std::vector<real_t>(internal.dim_n_II_hosp_R_conf);
  internal.n_II_hosp_R_unconf = std::vector<real_t>(internal.dim_n_II_hosp_R_unconf);
  internal.n_II_ICU_D_conf = std::vector<real_t>(internal.dim_n_II_ICU_D_conf);
  internal.n_II_ICU_D_unconf = std::vector<real_t>(internal.dim_n_II_ICU_D_unconf);
  internal.n_II_ICU_R_conf = std::vector<real_t>(internal.dim_n_II_ICU_R_conf);
  internal.n_II_ICU_R_unconf = std::vector<real_t>(internal.dim_n_II_ICU_R_unconf);
  internal.n_II_ILI = std::vector<real_t>(internal.dim_n_II_ILI);
  internal.n_II_mild = std::vector<real_t>(internal.dim_n_II_mild);
  internal.n_II_triage_D_conf = std::vector<real_t>(internal.dim_n_II_triage_D_conf);
  internal.n_II_triage_D_unconf = std::vector<real_t>(internal.dim_n_II_triage_D_unconf);
  internal.n_II_triage_R_conf = std::vector<real_t>(internal.dim_n_II_triage_R_conf);
  internal.n_II_triage_R_unconf = std::vector<real_t>(internal.dim_n_II_triage_R_unconf);
  internal.n_ILI_to_comm_D = std::vector<real_t>(internal.dim_n_ILI_to_comm_D);
  internal.n_ILI_to_hosp = std::vector<real_t>(internal.dim_n_ILI_to_hosp);
  internal.n_ILI_to_hosp_D = std::vector<real_t>(internal.dim_n_ILI_to_hosp_D);
  internal.n_ILI_to_hosp_D_conf = std::vector<real_t>(internal.dim_n_ILI_to_hosp_D_conf);
  internal.n_ILI_to_hosp_R = std::vector<real_t>(internal.dim_n_ILI_to_hosp_R);
  internal.n_ILI_to_hosp_R_conf = std::vector<real_t>(internal.dim_n_ILI_to_hosp_R_conf);
  internal.n_ILI_to_R = std::vector<real_t>(internal.dim_n_ILI_to_R);
  internal.n_ILI_to_triage = std::vector<real_t>(internal.dim_n_ILI_to_triage);
  internal.n_ILI_to_triage_D = std::vector<real_t>(internal.dim_n_ILI_to_triage_D);
  internal.n_ILI_to_triage_D_conf = std::vector<real_t>(internal.dim_n_ILI_to_triage_D_conf);
  internal.n_ILI_to_triage_R = std::vector<real_t>(internal.dim_n_ILI_to_triage_R);
  internal.n_ILI_to_triage_R_conf = std::vector<real_t>(internal.dim_n_ILI_to_triage_R_conf);
  internal.n_PCR_pos = std::vector<real_t>(internal.dim_n_PCR_pos);
  internal.n_R_pre = std::vector<real_t>(internal.dim_n_R_pre);
  internal.n_R_stepdown_conf = std::vector<real_t>(internal.dim_n_R_stepdown_conf);
  internal.n_R_stepdown_unconf = std::vector<real_t>(internal.dim_n_R_stepdown_unconf);
  internal.n_R_stepdown_unconf_to_conf = std::vector<real_t>(internal.dim_n_R_stepdown_unconf_to_conf);
  internal.new_I_hosp_D_conf = std::vector<real_t>(internal.dim_new_I_hosp_D_conf);
  internal.new_I_hosp_D_unconf = std::vector<real_t>(internal.dim_new_I_hosp_D_unconf);
  internal.new_I_hosp_R_conf = std::vector<real_t>(internal.dim_new_I_hosp_R_conf);
  internal.new_I_hosp_R_unconf = std::vector<real_t>(internal.dim_new_I_hosp_R_unconf);
  internal.new_I_ICU_D_conf = std::vector<real_t>(internal.dim_new_I_ICU_D_conf);
  internal.new_I_ICU_D_unconf = std::vector<real_t>(internal.dim_new_I_ICU_D_unconf);
  internal.new_I_ICU_R_conf = std::vector<real_t>(internal.dim_new_I_ICU_R_conf);
  internal.new_I_ICU_R_unconf = std::vector<real_t>(internal.dim_new_I_ICU_R_unconf);
  internal.new_I_triage_D_conf = std::vector<real_t>(internal.dim_new_I_triage_D_conf);
  internal.new_I_triage_D_unconf = std::vector<real_t>(internal.dim_new_I_triage_D_unconf);
  internal.new_I_triage_R_conf = std::vector<real_t>(internal.dim_new_I_triage_R_conf);
  internal.new_I_triage_R_unconf = std::vector<real_t>(internal.dim_new_I_triage_R_unconf);
  internal.new_R_stepdown_conf = std::vector<real_t>(internal.dim_new_R_stepdown_conf);
  internal.new_R_stepdown_unconf = std::vector<real_t>(internal.dim_new_R_stepdown_unconf);
  internal.p_R_pre = std::vector<real_t>(internal.dim_p_R_pre);
  internal.s_ij = std::vector<real_t>(internal.dim_s_ij);
  internal.E0 = user_get_array_fixed<real_t, 3>(user, "E0", internal.E0, {internal.dim_E0_1, internal.dim_E0_2, internal.dim_E0_3}, NA_REAL, NA_REAL);
  internal.I0_asympt = user_get_array_fixed<real_t, 3>(user, "I0_asympt", internal.I0_asympt, {internal.dim_I0_asympt_1, internal.dim_I0_asympt_2, internal.dim_I0_asympt_3}, NA_REAL, NA_REAL);
  internal.I0_comm_D = user_get_array_fixed<real_t, 3>(user, "I0_comm_D", internal.I0_comm_D, {internal.dim_I0_comm_D_1, internal.dim_I0_comm_D_2, internal.dim_I0_comm_D_3}, NA_REAL, NA_REAL);
  internal.I0_hosp_D_conf = user_get_array_fixed<real_t, 3>(user, "I0_hosp_D_conf", internal.I0_hosp_D_conf, {internal.dim_I0_hosp_D_conf_1, internal.dim_I0_hosp_D_conf_2, internal.dim_I0_hosp_D_conf_3}, NA_REAL, NA_REAL);
  internal.I0_hosp_D_unconf = user_get_array_fixed<real_t, 3>(user, "I0_hosp_D_unconf", internal.I0_hosp_D_unconf, {internal.dim_I0_hosp_D_unconf_1, internal.dim_I0_hosp_D_unconf_2, internal.dim_I0_hosp_D_unconf_3}, NA_REAL, NA_REAL);
  internal.I0_hosp_R_conf = user_get_array_fixed<real_t, 3>(user, "I0_hosp_R_conf", internal.I0_hosp_R_conf, {internal.dim_I0_hosp_R_conf_1, internal.dim_I0_hosp_R_conf_2, internal.dim_I0_hosp_R_conf_3}, NA_REAL, NA_REAL);
  internal.I0_hosp_R_unconf = user_get_array_fixed<real_t, 3>(user, "I0_hosp_R_unconf", internal.I0_hosp_R_unconf, {internal.dim_I0_hosp_R_unconf_1, internal.dim_I0_hosp_R_unconf_2, internal.dim_I0_hosp_R_unconf_3}, NA_REAL, NA_REAL);
  internal.I0_ICU_D_conf = user_get_array_fixed<real_t, 3>(user, "I0_ICU_D_conf", internal.I0_ICU_D_conf, {internal.dim_I0_ICU_D_conf_1, internal.dim_I0_ICU_D_conf_2, internal.dim_I0_ICU_D_conf_3}, NA_REAL, NA_REAL);
  internal.I0_ICU_D_unconf = user_get_array_fixed<real_t, 3>(user, "I0_ICU_D_unconf", internal.I0_ICU_D_unconf, {internal.dim_I0_ICU_D_unconf_1, internal.dim_I0_ICU_D_unconf_2, internal.dim_I0_ICU_D_unconf_3}, NA_REAL, NA_REAL);
  internal.I0_ICU_R_conf = user_get_array_fixed<real_t, 3>(user, "I0_ICU_R_conf", internal.I0_ICU_R_conf, {internal.dim_I0_ICU_R_conf_1, internal.dim_I0_ICU_R_conf_2, internal.dim_I0_ICU_R_conf_3}, NA_REAL, NA_REAL);
  internal.I0_ICU_R_unconf = user_get_array_fixed<real_t, 3>(user, "I0_ICU_R_unconf", internal.I0_ICU_R_unconf, {internal.dim_I0_ICU_R_unconf_1, internal.dim_I0_ICU_R_unconf_2, internal.dim_I0_ICU_R_unconf_3}, NA_REAL, NA_REAL);
  internal.I0_ILI = user_get_array_fixed<real_t, 3>(user, "I0_ILI", internal.I0_ILI, {internal.dim_I0_ILI_1, internal.dim_I0_ILI_2, internal.dim_I0_ILI_3}, NA_REAL, NA_REAL);
  internal.I0_mild = user_get_array_fixed<real_t, 3>(user, "I0_mild", internal.I0_mild, {internal.dim_I0_mild_1, internal.dim_I0_mild_2, internal.dim_I0_mild_3}, NA_REAL, NA_REAL);
  internal.I0_triage_D_conf = user_get_array_fixed<real_t, 3>(user, "I0_triage_D_conf", internal.I0_triage_D_conf, {internal.dim_I0_triage_D_conf_1, internal.dim_I0_triage_D_conf_2, internal.dim_I0_triage_D_conf_3}, NA_REAL, NA_REAL);
  internal.I0_triage_D_unconf = user_get_array_fixed<real_t, 3>(user, "I0_triage_D_unconf", internal.I0_triage_D_unconf, {internal.dim_I0_triage_D_unconf_1, internal.dim_I0_triage_D_unconf_2, internal.dim_I0_triage_D_unconf_3}, NA_REAL, NA_REAL);
  internal.I0_triage_R_conf = user_get_array_fixed<real_t, 3>(user, "I0_triage_R_conf", internal.I0_triage_R_conf, {internal.dim_I0_triage_R_conf_1, internal.dim_I0_triage_R_conf_2, internal.dim_I0_triage_R_conf_3}, NA_REAL, NA_REAL);
  internal.I0_triage_R_unconf = user_get_array_fixed<real_t, 3>(user, "I0_triage_R_unconf", internal.I0_triage_R_unconf, {internal.dim_I0_triage_R_unconf_1, internal.dim_I0_triage_R_unconf_2, internal.dim_I0_triage_R_unconf_3}, NA_REAL, NA_REAL);
  for (int_t i = 1; i <= internal.dim_D_comm; ++i) {
    internal.initial_D_comm[i - 1] = internal.D0_comm[i - 1];
  }
  for (int_t i = 1; i <= internal.dim_D_hosp; ++i) {
    internal.initial_D_hosp[i - 1] = internal.D0_hosp[i - 1];
  }
  for (int_t i = 1; i <= internal.dim_n_ILI_to_hosp_out_1; ++i) {
    for (int_t j = 1; j <= internal.dim_n_ILI_to_hosp_out_2; ++j) {
      internal.initial_n_ILI_to_hosp_out[i - 1 + internal.dim_n_ILI_to_hosp_out_1 * (j - 1)] = 0;
    }
  }
  for (int_t i = 1; i <= internal.dim_N_tot; ++i) {
    internal.initial_N_tot[i - 1] = internal.N0_tot[i - 1];
  }
  for (int_t i = 1; i <= internal.dim_R; ++i) {
    internal.initial_R[i - 1] = internal.R0[i - 1];
  }
  for (int_t i = 1; i <= internal.dim_R_neg; ++i) {
    internal.initial_R_neg[i - 1] = internal.R0_neg[i - 1];
  }
  for (int_t i = 1; i <= internal.dim_R_pos; ++i) {
    internal.initial_R_pos[i - 1] = internal.R0_pos[i - 1];
  }
  for (int_t i = 1; i <= internal.dim_S; ++i) {
    internal.initial_S[i - 1] = internal.S0[i - 1];
  }
  internal.m = user_get_array_fixed<real_t, 2>(user, "m", internal.m, {internal.dim_m_1, internal.dim_m_2}, NA_REAL, NA_REAL);
  internal.offset_variable_E = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos;
  internal.offset_variable_I_asympt = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E;
  internal.offset_variable_I_comm_D = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI;
  internal.offset_variable_I_hosp_D_conf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D + internal.dim_I_triage_R_unconf + internal.dim_I_triage_R_conf + internal.dim_I_triage_D_unconf + internal.dim_I_triage_D_conf + internal.dim_I_hosp_R_unconf + internal.dim_I_hosp_R_conf + internal.dim_I_hosp_D_unconf;
  internal.offset_variable_I_hosp_D_unconf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D + internal.dim_I_triage_R_unconf + internal.dim_I_triage_R_conf + internal.dim_I_triage_D_unconf + internal.dim_I_triage_D_conf + internal.dim_I_hosp_R_unconf + internal.dim_I_hosp_R_conf;
  internal.offset_variable_I_hosp_R_conf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D + internal.dim_I_triage_R_unconf + internal.dim_I_triage_R_conf + internal.dim_I_triage_D_unconf + internal.dim_I_triage_D_conf + internal.dim_I_hosp_R_unconf;
  internal.offset_variable_I_hosp_R_unconf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D + internal.dim_I_triage_R_unconf + internal.dim_I_triage_R_conf + internal.dim_I_triage_D_unconf + internal.dim_I_triage_D_conf;
  internal.offset_variable_I_ICU_D_conf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D + internal.dim_I_triage_R_unconf + internal.dim_I_triage_R_conf + internal.dim_I_triage_D_unconf + internal.dim_I_triage_D_conf + internal.dim_I_hosp_R_unconf + internal.dim_I_hosp_R_conf + internal.dim_I_hosp_D_unconf + internal.dim_I_hosp_D_conf + internal.dim_I_ICU_R_unconf + internal.dim_I_ICU_R_conf + internal.dim_I_ICU_D_unconf;
  internal.offset_variable_I_ICU_D_unconf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D + internal.dim_I_triage_R_unconf + internal.dim_I_triage_R_conf + internal.dim_I_triage_D_unconf + internal.dim_I_triage_D_conf + internal.dim_I_hosp_R_unconf + internal.dim_I_hosp_R_conf + internal.dim_I_hosp_D_unconf + internal.dim_I_hosp_D_conf + internal.dim_I_ICU_R_unconf + internal.dim_I_ICU_R_conf;
  internal.offset_variable_I_ICU_R_conf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D + internal.dim_I_triage_R_unconf + internal.dim_I_triage_R_conf + internal.dim_I_triage_D_unconf + internal.dim_I_triage_D_conf + internal.dim_I_hosp_R_unconf + internal.dim_I_hosp_R_conf + internal.dim_I_hosp_D_unconf + internal.dim_I_hosp_D_conf + internal.dim_I_ICU_R_unconf;
  internal.offset_variable_I_ICU_R_unconf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D + internal.dim_I_triage_R_unconf + internal.dim_I_triage_R_conf + internal.dim_I_triage_D_unconf + internal.dim_I_triage_D_conf + internal.dim_I_hosp_R_unconf + internal.dim_I_hosp_R_conf + internal.dim_I_hosp_D_unconf + internal.dim_I_hosp_D_conf;
  internal.offset_variable_I_ILI = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild;
  internal.offset_variable_I_mild = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt;
  internal.offset_variable_I_triage_D_conf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D + internal.dim_I_triage_R_unconf + internal.dim_I_triage_R_conf + internal.dim_I_triage_D_unconf;
  internal.offset_variable_I_triage_D_unconf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D + internal.dim_I_triage_R_unconf + internal.dim_I_triage_R_conf;
  internal.offset_variable_I_triage_R_conf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D + internal.dim_I_triage_R_unconf;
  internal.offset_variable_I_triage_R_unconf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre + internal.dim_PCR_pos + internal.dim_E + internal.dim_I_asympt + internal.dim_I_mild + internal.dim_I_ILI + internal.dim_I_comm_D;
  internal.offset_variable_PCR_pos = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf + internal.dim_R_pre;
  internal.offset_variable_R_pre = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf + internal.dim_R_stepdown_conf;
  internal.offset_variable_R_stepdown_conf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out + internal.dim_R_stepdown_unconf;
  internal.offset_variable_R_stepdown_unconf = 5 + internal.dim_S + internal.dim_R_pos + internal.dim_R_neg + internal.dim_R + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_N_tot + internal.dim_n_ILI_to_hosp_out;
  internal.PCR0_pos = user_get_array_fixed<real_t, 2>(user, "PCR0_pos", internal.PCR0_pos, {internal.dim_PCR0_pos_1, internal.dim_PCR0_pos_2}, NA_REAL, NA_REAL);
  internal.R0_pre = user_get_array_fixed<real_t, 2>(user, "R0_pre", internal.R0_pre, {internal.dim_R0_pre_1, internal.dim_R0_pre_2}, NA_REAL, NA_REAL);
  internal.R0_stepdown_conf = user_get_array_fixed<real_t, 2>(user, "R0_stepdown_conf", internal.R0_stepdown_conf, {internal.dim_R0_stepdown_conf_1, internal.dim_R0_stepdown_conf_2}, NA_REAL, NA_REAL);
  internal.R0_stepdown_unconf = user_get_array_fixed<real_t, 2>(user, "R0_stepdown_unconf", internal.R0_stepdown_unconf, {internal.dim_R0_stepdown_unconf_1, internal.dim_R0_stepdown_unconf_2}, NA_REAL, NA_REAL);
  internal.trans_increase = user_get_array_fixed<real_t, 2>(user, "trans_increase", internal.trans_increase, {internal.dim_trans_increase_1, internal.dim_trans_increase_2}, NA_REAL, NA_REAL);
  internal.trans_profile = user_get_array_fixed<real_t, 2>(user, "trans_profile", internal.trans_profile, {internal.dim_trans_profile_1, internal.dim_trans_profile_2}, NA_REAL, NA_REAL);
  for (int_t i = 1; i <= internal.dim_aux_p_bin_1; ++i) {
    int_t j = 1;
    internal.aux_p_bin[i - 1 + internal.dim_aux_p_bin_1 * (j - 1)] = internal.trans_profile[internal.dim_trans_profile_1 * 0 + i - 1];
  }
  for (int_t i = 1; i <= internal.dim_aux_p_bin_1; ++i) {
    for (int_t j = 2; j <= (internal.trans_classes - 1); ++j) {
      internal.aux_p_bin[i - 1 + internal.dim_aux_p_bin_1 * (j - 1)] = internal.trans_profile[internal.dim_trans_profile_1 * (j - 1) + i - 1] / (real_t) odin_sum2(internal.trans_profile.data(), i - 1, i, j - 1, internal.trans_classes, internal.dim_trans_profile_1);
    }
  }
  for (int_t i = 1; i <= internal.dim_E_1; ++i) {
    for (int_t j = 1; j <= internal.dim_E_2; ++j) {
      for (int_t k = 1; k <= internal.dim_E_3; ++k) {
        internal.initial_E[i - 1 + internal.dim_E_1 * (j - 1) + internal.dim_E_12 * (k - 1)] = internal.E0[internal.dim_E0_12 * (k - 1) + internal.dim_E0_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_asympt_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_asympt_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_asympt_3; ++k) {
        internal.initial_I_asympt[i - 1 + internal.dim_I_asympt_1 * (j - 1) + internal.dim_I_asympt_12 * (k - 1)] = internal.I0_asympt[internal.dim_I0_asympt_12 * (k - 1) + internal.dim_I0_asympt_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_comm_D_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_comm_D_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_comm_D_3; ++k) {
        internal.initial_I_comm_D[i - 1 + internal.dim_I_comm_D_1 * (j - 1) + internal.dim_I_comm_D_12 * (k - 1)] = internal.I0_comm_D[internal.dim_I0_comm_D_12 * (k - 1) + internal.dim_I0_comm_D_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_hosp_D_conf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_hosp_D_conf_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_hosp_D_conf_3; ++k) {
        internal.initial_I_hosp_D_conf[i - 1 + internal.dim_I_hosp_D_conf_1 * (j - 1) + internal.dim_I_hosp_D_conf_12 * (k - 1)] = internal.I0_hosp_D_conf[internal.dim_I0_hosp_D_conf_12 * (k - 1) + internal.dim_I0_hosp_D_conf_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_hosp_D_unconf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_hosp_D_unconf_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_hosp_D_unconf_3; ++k) {
        internal.initial_I_hosp_D_unconf[i - 1 + internal.dim_I_hosp_D_unconf_1 * (j - 1) + internal.dim_I_hosp_D_unconf_12 * (k - 1)] = internal.I0_hosp_D_unconf[internal.dim_I0_hosp_D_unconf_12 * (k - 1) + internal.dim_I0_hosp_D_unconf_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_hosp_R_conf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_hosp_R_conf_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_hosp_R_conf_3; ++k) {
        internal.initial_I_hosp_R_conf[i - 1 + internal.dim_I_hosp_R_conf_1 * (j - 1) + internal.dim_I_hosp_R_conf_12 * (k - 1)] = internal.I0_hosp_R_conf[internal.dim_I0_hosp_R_conf_12 * (k - 1) + internal.dim_I0_hosp_R_conf_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_hosp_R_unconf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_hosp_R_unconf_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_hosp_R_unconf_3; ++k) {
        internal.initial_I_hosp_R_unconf[i - 1 + internal.dim_I_hosp_R_unconf_1 * (j - 1) + internal.dim_I_hosp_R_unconf_12 * (k - 1)] = internal.I0_hosp_R_unconf[internal.dim_I0_hosp_R_unconf_12 * (k - 1) + internal.dim_I0_hosp_R_unconf_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_ICU_D_conf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_ICU_D_conf_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_ICU_D_conf_3; ++k) {
        internal.initial_I_ICU_D_conf[i - 1 + internal.dim_I_ICU_D_conf_1 * (j - 1) + internal.dim_I_ICU_D_conf_12 * (k - 1)] = internal.I0_ICU_D_conf[internal.dim_I0_ICU_D_conf_12 * (k - 1) + internal.dim_I0_ICU_D_conf_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_ICU_D_unconf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_ICU_D_unconf_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_ICU_D_unconf_3; ++k) {
        internal.initial_I_ICU_D_unconf[i - 1 + internal.dim_I_ICU_D_unconf_1 * (j - 1) + internal.dim_I_ICU_D_unconf_12 * (k - 1)] = internal.I0_ICU_D_unconf[internal.dim_I0_ICU_D_unconf_12 * (k - 1) + internal.dim_I0_ICU_D_unconf_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_ICU_R_conf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_ICU_R_conf_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_ICU_R_conf_3; ++k) {
        internal.initial_I_ICU_R_conf[i - 1 + internal.dim_I_ICU_R_conf_1 * (j - 1) + internal.dim_I_ICU_R_conf_12 * (k - 1)] = internal.I0_ICU_R_conf[internal.dim_I0_ICU_R_conf_12 * (k - 1) + internal.dim_I0_ICU_R_conf_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_ICU_R_unconf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_ICU_R_unconf_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_ICU_R_unconf_3; ++k) {
        internal.initial_I_ICU_R_unconf[i - 1 + internal.dim_I_ICU_R_unconf_1 * (j - 1) + internal.dim_I_ICU_R_unconf_12 * (k - 1)] = internal.I0_ICU_R_unconf[internal.dim_I0_ICU_R_unconf_12 * (k - 1) + internal.dim_I0_ICU_R_unconf_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_ILI_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_ILI_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_ILI_3; ++k) {
        internal.initial_I_ILI[i - 1 + internal.dim_I_ILI_1 * (j - 1) + internal.dim_I_ILI_12 * (k - 1)] = internal.I0_ILI[internal.dim_I0_ILI_12 * (k - 1) + internal.dim_I0_ILI_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_mild_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_mild_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_mild_3; ++k) {
        internal.initial_I_mild[i - 1 + internal.dim_I_mild_1 * (j - 1) + internal.dim_I_mild_12 * (k - 1)] = internal.I0_mild[internal.dim_I0_mild_12 * (k - 1) + internal.dim_I0_mild_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_triage_D_conf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_triage_D_conf_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_triage_D_conf_3; ++k) {
        internal.initial_I_triage_D_conf[i - 1 + internal.dim_I_triage_D_conf_1 * (j - 1) + internal.dim_I_triage_D_conf_12 * (k - 1)] = internal.I0_triage_D_conf[internal.dim_I0_triage_D_conf_12 * (k - 1) + internal.dim_I0_triage_D_conf_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_triage_D_unconf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_triage_D_unconf_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_triage_D_unconf_3; ++k) {
        internal.initial_I_triage_D_unconf[i - 1 + internal.dim_I_triage_D_unconf_1 * (j - 1) + internal.dim_I_triage_D_unconf_12 * (k - 1)] = internal.I0_triage_D_unconf[internal.dim_I0_triage_D_unconf_12 * (k - 1) + internal.dim_I0_triage_D_unconf_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_triage_R_conf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_triage_R_conf_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_triage_R_conf_3; ++k) {
        internal.initial_I_triage_R_conf[i - 1 + internal.dim_I_triage_R_conf_1 * (j - 1) + internal.dim_I_triage_R_conf_12 * (k - 1)] = internal.I0_triage_R_conf[internal.dim_I0_triage_R_conf_12 * (k - 1) + internal.dim_I0_triage_R_conf_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_I_triage_R_unconf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_I_triage_R_unconf_2; ++j) {
      for (int_t k = 1; k <= internal.dim_I_triage_R_unconf_3; ++k) {
        internal.initial_I_triage_R_unconf[i - 1 + internal.dim_I_triage_R_unconf_1 * (j - 1) + internal.dim_I_triage_R_unconf_12 * (k - 1)] = internal.I0_triage_R_unconf[internal.dim_I0_triage_R_unconf_12 * (k - 1) + internal.dim_I0_triage_R_unconf_1 * (j - 1) + i - 1];
      }
    }
  }
  for (int_t i = 1; i <= internal.dim_PCR_pos_1; ++i) {
    for (int_t j = 1; j <= internal.dim_PCR_pos_2; ++j) {
      internal.initial_PCR_pos[i - 1 + internal.dim_PCR_pos_1 * (j - 1)] = internal.PCR0_pos[internal.dim_PCR0_pos_1 * (j - 1) + i - 1];
    }
  }
  for (int_t i = 1; i <= internal.dim_R_pre_1; ++i) {
    for (int_t j = 1; j <= internal.dim_R_pre_2; ++j) {
      internal.initial_R_pre[i - 1 + internal.dim_R_pre_1 * (j - 1)] = internal.R0_pre[internal.dim_R0_pre_1 * (j - 1) + i - 1];
    }
  }
  for (int_t i = 1; i <= internal.dim_R_stepdown_conf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_R_stepdown_conf_2; ++j) {
      internal.initial_R_stepdown_conf[i - 1 + internal.dim_R_stepdown_conf_1 * (j - 1)] = internal.R0_stepdown_conf[internal.dim_R0_stepdown_conf_1 * (j - 1) + i - 1];
    }
  }
  for (int_t i = 1; i <= internal.dim_R_stepdown_unconf_1; ++i) {
    for (int_t j = 1; j <= internal.dim_R_stepdown_unconf_2; ++j) {
      internal.initial_R_stepdown_unconf[i - 1 + internal.dim_R_stepdown_unconf_1 * (j - 1)] = internal.R0_stepdown_unconf[internal.dim_R0_stepdown_unconf_1 * (j - 1) + i - 1];
    }
  }
  for (int_t i = 1; i <= internal.dim_p_R_pre_1; ++i) {
    for (int_t j = 1; j <= internal.dim_p_R_pre_2; ++j) {
      internal.p_R_pre[i - 1 + internal.dim_p_R_pre_1 * (j - 1)] = 1 - std::exp(- internal.gamma_R_pre[j - 1] * internal.dt);
    }
  }
  return internal;
}
template <>
cpp11::sexp dust_info<carehomes>(const carehomes::init_t& internal) {
  cpp11::writable::list ret(34);
  ret[0] = cpp11::writable::integers({1});
  ret[1] = cpp11::writable::integers({1});
  ret[2] = cpp11::writable::integers({1});
  ret[3] = cpp11::writable::integers({1});
  ret[4] = cpp11::writable::integers({1});
  ret[5] = cpp11::writable::integers({internal.dim_S});
  ret[6] = cpp11::writable::integers({internal.dim_R_pos});
  ret[7] = cpp11::writable::integers({internal.dim_R_neg});
  ret[8] = cpp11::writable::integers({internal.dim_R});
  ret[9] = cpp11::writable::integers({internal.dim_D_hosp});
  ret[10] = cpp11::writable::integers({internal.dim_D_comm});
  ret[11] = cpp11::writable::integers({internal.dim_N_tot});
  ret[12] = cpp11::writable::integers({internal.dim_n_ILI_to_hosp_out_1, internal.dim_n_ILI_to_hosp_out_2});
  ret[13] = cpp11::writable::integers({internal.dim_R_stepdown_unconf_1, internal.dim_R_stepdown_unconf_2});
  ret[14] = cpp11::writable::integers({internal.dim_R_stepdown_conf_1, internal.dim_R_stepdown_conf_2});
  ret[15] = cpp11::writable::integers({internal.dim_R_pre_1, internal.dim_R_pre_2});
  ret[16] = cpp11::writable::integers({internal.dim_PCR_pos_1, internal.dim_PCR_pos_2});
  ret[17] = cpp11::writable::integers({internal.dim_E_1, internal.dim_E_2, internal.dim_E_3});
  ret[18] = cpp11::writable::integers({internal.dim_I_asympt_1, internal.dim_I_asympt_2, internal.dim_I_asympt_3});
  ret[19] = cpp11::writable::integers({internal.dim_I_mild_1, internal.dim_I_mild_2, internal.dim_I_mild_3});
  ret[20] = cpp11::writable::integers({internal.dim_I_ILI_1, internal.dim_I_ILI_2, internal.dim_I_ILI_3});
  ret[21] = cpp11::writable::integers({internal.dim_I_comm_D_1, internal.dim_I_comm_D_2, internal.dim_I_comm_D_3});
  ret[22] = cpp11::writable::integers({internal.dim_I_triage_R_unconf_1, internal.dim_I_triage_R_unconf_2, internal.dim_I_triage_R_unconf_3});
  ret[23] = cpp11::writable::integers({internal.dim_I_triage_R_conf_1, internal.dim_I_triage_R_conf_2, internal.dim_I_triage_R_conf_3});
  ret[24] = cpp11::writable::integers({internal.dim_I_triage_D_unconf_1, internal.dim_I_triage_D_unconf_2, internal.dim_I_triage_D_unconf_3});
  ret[25] = cpp11::writable::integers({internal.dim_I_triage_D_conf_1, internal.dim_I_triage_D_conf_2, internal.dim_I_triage_D_conf_3});
  ret[26] = cpp11::writable::integers({internal.dim_I_hosp_R_unconf_1, internal.dim_I_hosp_R_unconf_2, internal.dim_I_hosp_R_unconf_3});
  ret[27] = cpp11::writable::integers({internal.dim_I_hosp_R_conf_1, internal.dim_I_hosp_R_conf_2, internal.dim_I_hosp_R_conf_3});
  ret[28] = cpp11::writable::integers({internal.dim_I_hosp_D_unconf_1, internal.dim_I_hosp_D_unconf_2, internal.dim_I_hosp_D_unconf_3});
  ret[29] = cpp11::writable::integers({internal.dim_I_hosp_D_conf_1, internal.dim_I_hosp_D_conf_2, internal.dim_I_hosp_D_conf_3});
  ret[30] = cpp11::writable::integers({internal.dim_I_ICU_R_unconf_1, internal.dim_I_ICU_R_unconf_2, internal.dim_I_ICU_R_unconf_3});
  ret[31] = cpp11::writable::integers({internal.dim_I_ICU_R_conf_1, internal.dim_I_ICU_R_conf_2, internal.dim_I_ICU_R_conf_3});
  ret[32] = cpp11::writable::integers({internal.dim_I_ICU_D_unconf_1, internal.dim_I_ICU_D_unconf_2, internal.dim_I_ICU_D_unconf_3});
  ret[33] = cpp11::writable::integers({internal.dim_I_ICU_D_conf_1, internal.dim_I_ICU_D_conf_2, internal.dim_I_ICU_D_conf_3});
  cpp11::writable::strings nms({"time", "cum_admit_conf", "cum_new_conf", "beta_out", "N_tot2", "S", "R_pos", "R_neg", "R", "D_hosp", "D_comm", "N_tot", "n_ILI_to_hosp_out", "R_stepdown_unconf", "R_stepdown_conf", "R_pre", "PCR_pos", "E", "I_asympt", "I_mild", "I_ILI", "I_comm_D", "I_triage_R_unconf", "I_triage_R_conf", "I_triage_D_unconf", "I_triage_D_conf", "I_hosp_R_unconf", "I_hosp_R_conf", "I_hosp_D_unconf", "I_hosp_D_conf", "I_ICU_R_unconf", "I_ICU_R_conf", "I_ICU_D_unconf", "I_ICU_D_conf"});
  ret.names() = nms;
  return ret;
}

[[cpp11::register]]
SEXP dust_carehomes_alloc(cpp11::list r_data, size_t step, size_t n_particles,
                size_t n_threads, size_t seed) {
  return dust_alloc<carehomes>(r_data, step, n_particles, n_threads, seed);
}

[[cpp11::register]]
SEXP dust_carehomes_run(SEXP ptr, size_t step_end) {
  return dust_run<carehomes>(ptr, step_end);
}

[[cpp11::register]]
SEXP dust_carehomes_set_index(SEXP ptr, cpp11::sexp r_index) {
  dust_set_index<carehomes>(ptr, r_index);
  return R_NilValue;
}

[[cpp11::register]]
SEXP dust_carehomes_set_state(SEXP ptr, SEXP r_state, SEXP r_step) {
  dust_set_state<carehomes>(ptr, r_state, r_step);
  return R_NilValue;
}

[[cpp11::register]]
SEXP dust_carehomes_reset(SEXP ptr, cpp11::list r_data, size_t step) {
  return dust_reset<carehomes>(ptr, r_data, step);
}

[[cpp11::register]]
SEXP dust_carehomes_state(SEXP ptr, SEXP r_index) {
  return dust_state<carehomes>(ptr, r_index);
}

[[cpp11::register]]
size_t dust_carehomes_step(SEXP ptr) {
  return dust_step<carehomes>(ptr);
}

[[cpp11::register]]
void dust_carehomes_reorder(SEXP ptr, cpp11::sexp r_index) {
  return dust_reorder<carehomes>(ptr, r_index);
}

[[cpp11::register]]
SEXP dust_carehomes_rng_state(SEXP ptr) {
  return dust_rng_state<carehomes>(ptr);
}
